//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class NSMutableDictionary, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ABSimpleSysExMessage {
    unsigned char mStartByte;
    unsigned char mManufacturerID;
    unsigned char mProduct;
    unsigned char mVersion;
    unsigned char mSendMode;
    unsigned char mContainerType;
    unsigned char mMessageType;
    unsigned char mSubMessageType;
    unsigned long long mPayload;
    unsigned char mStopByte;
};

struct AUDIOHEADER;

struct AUDIOPLUGIN {
    struct AUDIOHEADER *_field1;
    void *_field2;
    short _field3;
    struct TAuUnionType _field4;
    char _field5;
    long long _field6;
    CDUnknownFunctionPointerType _field7;
    struct AUDIOPLUGIN *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    char _field13;
    char _field14;
    char _field15[12];
    _Bool _field16;
    _Bool _field17;
    long long _field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    long long _field23;
    long long _field24;
    unsigned long long _field25;
    unsigned char _field26;
    unsigned char _field27;
    struct TAuUnionType _field28;
    unsigned char _field29;
    double _field30;
    char _field31;
    char _field32;
    short _field33;
    short _field34;
    short _field35;
    unsigned char _field36;
    unsigned char _field37;
    unsigned short _field38;
    struct CFileRef _field39;
    struct __CFURL *_field40;
    short _field41;
    short _field42;
    struct CPlugIn *_field43;
    char _field44[16];
    vector_e0f2bd7e _field45;
    vector_e0f2bd7e _field46;
    struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> _field47;
    struct LgPluginGUIState _field48;
    unsigned char _field49[7];
    long long _field50;
    struct PLUGCONTROL _field51[0];
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioTimeStamp {
    double mSampleTime;
    unsigned long long mHostTime;
    double mRateScalar;
    unsigned long long mWordClockTime;
    struct SMPTETime mSMPTETime;
    unsigned int mFlags;
    unsigned int mReserved;
};

struct BEFEHL {
    short _field1;
    long long _field2;
    CDUnknownFunctionPointerType _field3;
    long long _field4;
};

struct BEFGRUPPE {
    struct BEFEHL *_field1;
    short _field2;
    long long _field3;
    int _field4;
};

struct BeatHint;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CATransformLayer {
    Class _field1;
    struct _CALayerIvars _field2;
};

struct CAddRemoveIterateList {
    struct SEntry *_field1;
    struct SEntry *_field2;
    struct SEntry *_field3;
    int _field4;
};

struct CAdjustBeats;

struct CAnalysisDelegate {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct CAssessmentController;

struct CAudioFileIO;

struct CBasicFX;

struct CCTRLController;

struct CChord {
    struct CNote _field1;
    struct CMySet<CNote> _field2;
    struct CIntvlSet _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct CChordTypes;

struct CClip {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    float _field9;
    float _field10;
    unsigned int _field11;
    unsigned int _field12;
    short _field13;
    unsigned char _field14;
    unsigned char _field15;
    unsigned int _field16;
    long long _field17;
    long long _field18;
    long long _field19;
    int _field20;
    int _field21;
    id _field22;
    id _field23;
};

struct CDEPDependency;

struct CDocumentLogic {
    struct CDocumentLogic *_field1;
    struct FileRec _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    struct MAMem _field9;
    short _field10;
    unsigned char _field11;
    id _field12;
    id _field13;
    struct CFileRef _field14;
    struct CFileRef _field15;
    struct __CFDictionary *_field16;
    _Bool _field17;
};

struct CEv {
    long long _field1;
    long long _field2;
};

struct CEvExt {
    long long _field1;
    long long _field2;
};

struct CEvLaunch {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
};

struct CEvMarker {
    long long _field1;
    long long _field2;
    struct CSingleEvExt _field3;
};

struct CEvNote {
    long long _field1;
    long long _field2;
    struct CEv _field3;
};

struct CEvs;

struct CFileIO {
    struct CFileRef _field1;
    int _field2;
    long long _field3;
    long long _field4;
    char *_field5;
    long long _field6;
    long long _field7;
    unsigned char _field8;
    long long _field9;
    char *_field10;
    char *_field11;
    int _field12;
    unsigned int _field13;
};

struct CFileRef {
    struct __CFURL *_field1;
    long long _field2;
    char *_field3;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGContext;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CGenChordModAndProb;

struct CGenChordModAndProbs {
    struct CGenChordModAndProb *__begin_;
    struct CGenChordModAndProb *__end_;
    struct __compressed_pair<CGenChordModAndProb *, std::__1::allocator<CGenChordModAndProb>> {
        struct CGenChordModAndProb *__first_;
    } __end_cap_;
    float mLength;
};

struct CGenClaveCaches;

struct CGenClaveLink;

struct CGenClaveLinks {
    struct CGenClaveLink *__begin_;
    struct CGenClaveLink *__end_;
    struct __compressed_pair<CGenClaveLink *, std::__1::allocator<CGenClaveLink>> {
        struct CGenClaveLink *__first_;
    } __end_cap_;
};

struct CGenContext {
    struct CGenGeneratorParams *_field1;
    struct CGenGenreLib *_field2;
    struct CGenInstLib *_field3;
    struct CGenPatternGraphBoost *_field4;
    struct CGenDrumMap *_field5;
    struct CGenStyle *_field6;
    struct CGenInstTree *_field7;
    struct CGenGrooves *_field8;
    unsigned long long _field9;
    id _field10;
    struct lua_State *_field11;
    float _field12;
    basic_string_a490aa4c _field13;
    float _field14;
    struct CGenNearestClavePatternInfos _field15;
    struct CGenRandom _field16;
    int _field17;
    struct CGenPatternModAndProbs _field18;
    struct CGenPatternModAndProbsMap _field19;
    struct CGenPatternModAndProbs _field20;
    _Bool _field21;
};

struct CGenDrumMap {
    struct CGenInstTree _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    int _field6;
    struct CGenRange<unsigned char> _field7;
    unsigned char _field8;
    struct CGenRange<unsigned char> _field9;
    unsigned char _field10;
    struct CGenRange<unsigned char> _field11;
    unsigned char _field12;
    struct CGenRange<unsigned char> _field13;
    unsigned char _field14;
    struct CGenRange<unsigned char> _field15;
    unsigned char _field16;
    int _field17;
    unsigned long long _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    unsigned char _field25;
    struct CGenRange<unsigned char> _field26;
    struct CGenRange<unsigned char> _field27;
    struct CGenRange<unsigned char> _field28;
    struct CGenRange<unsigned char> _field29;
    struct CGenRange<unsigned char> _field30;
    struct CGenRange<unsigned char> _field31;
    struct CGenRange<unsigned char> _field32;
    int _field33;
    struct CGenRange<unsigned char> _field34;
    unsigned char _field35;
    struct CGenRange<unsigned char> _field36;
    unsigned char _field37;
    struct CGenRange<unsigned char> _field38;
    unsigned char _field39;
};

struct CGenEv;

struct CGenEvs {
    struct CGenEv *__begin_;
    struct CGenEv *__end_;
    struct __compressed_pair<CGenEv *, std::__1::allocator<CGenEv>> {
        struct CGenEv *__first_;
    } __end_cap_;
    float mLength;
    struct CNoteGroupInfos mNoteGroupInfos;
};

struct CGenGenerator {
    struct CGenGeneratorPrefs _field1;
    struct CGenGenreLibs _field2;
    id _field3;
    int _field4;
    int _field5;
    struct unique_ptr<CGenGenerator::GenerateRuntimeData, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> _field6;
    struct unique_ptr<IGeneratorLibraryBundleLocationsInternal, std::__1::default_delete<IGeneratorLibraryBundleLocationsInternal>> _field7;
    id _field8;
    struct unique_ptr<CGenGenerator::LuaStateCache, std::__1::default_delete<CGenGenerator::LuaStateCache>> _field9;
    struct unique_ptr<CGenClaveCaches, std::__1::default_delete<CGenClaveCaches>> _field10;
    id _field11;
    double _field12;
};

struct CGenGeneratorParams;

struct CGenGeneratorPrefs;

struct CGenGenreLib;

struct CGenGenreLibs {
    struct CGenGenreLib *_field1;
    struct CGenGenreLib *_field2;
    struct __compressed_pair<CGenGenreLib *, std::__1::allocator<CGenGenreLib>> {
        struct CGenGenreLib *_field1;
    } _field3;
};

struct CGenGrooves;

struct CGenInstLib;

struct CGenInstTree {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a490aa4c _field2;
    struct CGenRange<int> _field3;
    int _field4;
    struct CGenRange<long long> _field5;
    unsigned long long _field6;
    struct CGenInstTreeEntry *_field7;
    _Bool _field8;
    int _field9;
    struct CGenInstTreeEntries _field10;
    int _field11;
    struct CKCtr _field12;
    int _field13;
};

struct CGenInstTreeEntries {
    struct CGenInstTreeEntriesPimpl *_field1;
};

struct CGenInstTreeEntriesPimpl;

struct CGenInstTreeEntry;

struct CGenLayerBitmaskAndBPRange;

struct CGenNearestClavePatternInfos {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGenNearestClavePatternInfo>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenNearestClavePatternInfo>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGenNearestClavePatternInfo>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGenNearestClavePatternInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenNearestClavePatternInfo>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
    struct map<std::__1::basic_string<char>, CGenBeatedPatternIxs, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGenBeatedPatternIxs>>> _field2;
};

struct CGenPattern {
    basic_string_a490aa4c mName;
    struct CGenPatternCoordInt mCoord;
    float mMainPatternRating;
    struct CGenEvs mEvs;
    float mStartPos;
    float mStartPosRepeatIntvl;
    struct CGenSignTime mSignTime;
    struct CGenClaveLinks mClaveLinks;
    struct CGenRange<double> mTempoBPMRange;
    struct CGenVariantMap mProperties;
    struct vector<CGenLayerBitmaskAndBPRange, std::__1::allocator<CGenLayerBitmaskAndBPRange>> mOverlayLayerBitmaskAndBPRanges;
    basic_string_a490aa4c mInfo;
    NSMutableDictionary *mpDictionary;
};

struct CGenPatternCoordInt {
    float mComplInt;
    float mIntnInt;
};

struct CGenPatternGraphBoost;

struct CGenPatternModAndProb {
    float Prob;
    float ConsecutiveProb;
    _Bool mMatchedLastFilter;
    float mBeatPosAbs;
    float mBeatPosAbsSTTarget;
    struct CGenRange<float> mFillOverlayRangeRelTimeSignTargetAc;
    struct CGenRange<float> mFillOverlayRangeRelTimeSignTargetSy;
    struct CGenRange<float> mFillOverlayRangeRelTimeSignTargetPerc;
    struct vector<CGenLayerBitmaskAndBPRange, std::__1::allocator<CGenLayerBitmaskAndBPRange>> mFillOverlayBPRangeRelSTTargetForLayerIx;
    struct integer_iterator<unsigned long> mItPattern;
    struct CGenPatternGraphBoost *mGraph;
    struct CGenPattern mModifiedPattern;
    _Bool mPatternIsModified;
    int mPatternGraphType;
    _Bool mIsPatternPoolPattern;
    shared_ptr_c8a64f46 mPtrPatternPoolPatterns;
    unsigned long long mPoolPatternIx;
};

struct CGenPatternModAndProbs {
    struct CGenPatternModAndProb *__begin_;
    struct CGenPatternModAndProb *__end_;
    struct __compressed_pair<CGenPatternModAndProb *, std::__1::allocator<CGenPatternModAndProb>> {
        struct CGenPatternModAndProb *__first_;
    } __end_cap_;
    float mLength;
    _Bool mGenerateWholeRegion;
    int mSTDefaultOrTarget;
};

struct CGenPatternModAndProbsMap {
    struct __tree<std::__1::__value_type<TPatternGraphType, CGenPatternModAndProbs>, std::__1::__map_value_compare<TPatternGraphType, std::__1::__value_type<TPatternGraphType, CGenPatternModAndProbs>, std::__1::less<TPatternGraphType>, true>, std::__1::allocator<std::__1::__value_type<TPatternGraphType, CGenPatternModAndProbs>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TPatternGraphType, CGenPatternModAndProbs>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TPatternGraphType, std::__1::__value_type<TPatternGraphType, CGenPatternModAndProbs>, std::__1::less<TPatternGraphType>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct CGenPatterns {
    struct CGenPattern *_field1;
    struct CGenPattern *_field2;
    struct __compressed_pair<CGenPattern *, std::__1::allocator<CGenPattern>> {
        struct CGenPattern *_field1;
    } _field3;
};

struct CGenRandom {
    int _field1;
    int _field2;
};

struct CGenRange<double> {
    double mMin;
    double mMax;
    _Bool mMinEnabled;
    _Bool mMaxEnabled;
};

struct CGenRange<float> {
    float mMin;
    float mMax;
    _Bool mMinEnabled;
    _Bool mMaxEnabled;
};

struct CGenRange<int> {
    int _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGenRange<long long> {
    long long _field1;
    long long _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGenRange<unsigned char> {
    unsigned char _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CGenSignTime {
    int mNom;
    struct TNomsInEv mCompoundNoms;
    int mDenom;
};

struct CGenStyle;

struct CGenVariantMap {
    struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> intMap;
    struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> floatMap;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> stringMap;
};

struct CHASERESULTS {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
};

struct CHarmBarline;

struct CHarmChord {
    struct CKeyEnh _field1;
    struct CKeyEnh _field2;
    int _field3;
    int _field4;
    struct CSemitones _field5;
};

struct CHarmCopies {
    struct CHarmCopy *__begin_;
    struct CHarmCopy *__end_;
    struct __compressed_pair<CHarmCopy *, std::__1::allocator<CHarmCopy>> {
        struct CHarmCopy *__first_;
    } __end_cap_;
};

struct CHarmCopy;

struct CHarmSection;

struct CHarmSignKey;

struct CHarmSignKeys {
    struct CHarmSignKey *__begin_;
    struct CHarmSignKey *__end_;
    struct __compressed_pair<CHarmSignKey *, std::__1::allocator<CHarmSignKey>> {
        struct CHarmSignKey *__first_;
    } __end_cap_;
};

struct CHost;

struct CIntvlSet {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> _field1;
    int _field2;
};

struct CKCtr {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct CKeyEnh {
    int _field1;
    int _field2;
};

struct CLgString {
    char _field1[512];
};

struct CMSeq {
    short _field1;
    short _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    short _field6;
    short _field7;
    int _field8;
    int _field9;
    short _field10;
    struct CTFlagSet<CMSeqLight::TMSeqFlag2, short> _field11;
    int _field12;
    short _field13;
    struct TSignedPureLength _field14;
    struct TPureLength _field15;
    struct TSignedPureLength _field16;
    struct CLgString _field17;
    unsigned int _field18;
    short _field19;
    char _field20;
    char _field21;
    char _field22;
    char _field23;
    short _field24;
    char _field25[32];
    unsigned int _field26;
    int _field27;
    char _field28;
    char _field29;
    struct SEQPARS _field30;
    struct MEGAPARS _field31;
    int _field32;
    struct MORESEQPARS _field33;
    int _field34;
    short _field35;
    struct TPosOneBasedTrackNr _field36;
    struct TSignedAbsPureClock _field37;
    short _field38;
    struct CHASERESULTS _field39;
    unsigned short _field40;
    char _field41[2];
    struct SEQPARS_ELASTICPITCH _field42;
    struct vector<CTrack, std::__1::allocator<CTrack>> _field43;
    struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> _field44;
    struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> _field45;
    int _field46;
    _Bool _field47;
    struct vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>> _field48;
    struct vector<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>, std::__1::allocator<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>>> _field49;
};

struct CMetroAnalyzer<CMetroInputModuleModuleSRC> {
    CDUnknownFunctionPointerType *_field1;
    struct CMultiDimRingBuffer<float> _field2;
    struct vector<float, std::__1::allocator<float>> _field3;
    struct CMetroInputModuleModuleSRC _field4;
    id _field5;
    id _field6;
    id _field7;
    int _field8;
    double _field9;
    double _field10;
    double _field11;
    _Bool _field12;
    int _field13;
    long long _field14;
    unsigned long long _field15;
    _Bool _field16;
    float _field17;
    _Bool _field18;
    struct Delegate *_field19;
    id _field20;
};

struct CMetroAnalyzerHints {
    struct vector<CMetroAnalyzerHints::BeatHint, std::__1::allocator<CMetroAnalyzerHints::BeatHint>> _beatHints;
    vector_e0f2bd7e _beatGroupStartIdx;
    struct vector<CMetroAnalyzerHints::TempoHint, std::__1::allocator<CMetroAnalyzerHints::TempoHint>> _tempoHints;
    struct vector<CMetroAnalyzerHints::TimeSignatureHint, std::__1::allocator<CMetroAnalyzerHints::TimeSignatureHint>> _timeSigHints;
    double _downbeatPos;
    _Bool _snapToHints;
    struct vector<WeightedGaussian, std::__1::allocator<WeightedGaussian>> _globalTempoHints;
};

struct CMetroBlockToRBModuleReduceAndCopy {
    CDUnknownFunctionPointerType *_field1;
    struct CMultiDimRingBuffer<float> *_field2;
    int _field3;
    double _field4;
    float _field5;
};

struct CMetroInputModuleModuleSRC {
    struct CMetroBlockToRBModuleReduceAndCopy _field1;
    struct CMultiDimRingBuffer<float> _field2;
    struct CMetroModuleStreamingSRC _field3;
    struct CMultiDimRingBuffer<float> *_field4;
    _Bool _field5;
};

struct CMetroModuleStreamingSRC {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct CMultiDimRingBuffer<float> *_field3;
    int _field4;
    struct CMultiDimRingBuffer<float> *_field5;
    long long _field6;
    long long _field7;
    long long _field8;
    int _field9;
    CDUnknownFunctionPointerType *_field10;
    basic_string_a490aa4c _field11;
    int _field12;
    int _field13;
    double _field14;
    double _field15;
    long long _field16;
    int _field17;
    int _field18;
    struct OpaqueAudioConverter **_field19;
    struct AudioStreamBasicDescription _field20;
    struct AudioStreamBasicDescription _field21;
    struct SRCDataInfo *_field22;
};

struct CMetroResult {
    double _creationTime;
    double _modificationTime;
    double _savedTime;
    int _flags;
    struct vector<MetroTempoNode, std::__1::allocator<MetroTempoNode>> _tempo;
    struct vector<MetroChordNode, std::__1::allocator<MetroChordNode>> _chords;
    struct vector<MetroChordNode, std::__1::allocator<MetroChordNode>> _chordsFromSaliences;
    struct vector<MetroChordCandidatesNode, std::__1::allocator<MetroChordCandidatesNode>> _chordCandidates;
    struct vector<MetroMusicalContentNode, std::__1::allocator<MetroMusicalContentNode>> _musicalContent;
    struct vector<MetroRhythmicContentNode, std::__1::allocator<MetroRhythmicContentNode>> _rhythmicContent;
    struct vector<MetroMelodyNode, std::__1::allocator<MetroMelodyNode>> _melody;
    struct vector<MetroMelodyNode, std::__1::allocator<MetroMelodyNode>> _flexPitchNotes;
    struct vector<MetroBassLineNode, std::__1::allocator<MetroBassLineNode>> _bassLine;
    struct vector<MetroSignTimeNode, std::__1::allocator<MetroSignTimeNode>> _signTimes;
    struct vector<MetroSignKeyNode, std::__1::allocator<MetroSignKeyNode>> _signKeys;
    struct vector<MetroTuningNode, std::__1::allocator<MetroTuningNode>> _tuning;
    struct vector<MetroScaleNode, std::__1::allocator<MetroScaleNode>> _scale;
    struct vector<MetroSwingNode, std::__1::allocator<MetroSwingNode>> _swing;
    struct vector<MetroBeat, std::__1::allocator<MetroBeat>> _beats;
    struct vector<MetroBeat, std::__1::allocator<MetroBeat>> _onsets;
    struct vector<MetroBeat, std::__1::allocator<MetroBeat>> _beatCorrections;
    struct vector<MetroAudioRMSNode, std::__1::allocator<MetroAudioRMSNode>> _audioRMS;
    struct vector<MetroAudioPeakNode, std::__1::allocator<MetroAudioPeakNode>> _audioPeak;
    double _offset;
    double _length;
    double _relevantStartTime;
    double _relevantEndTime;
    double _relevantFirstFoundEndTime;
    double _downbeatPos;
    struct CMetroAnalyzerHints _hints;
    struct shared_ptr<CMetroResult> _initialResult;
};

struct CMetroRingBufferRecorder<float> {
    struct CMultiDimRingBuffer<float> _field1;
};

struct CMovieTNUtility;

struct CMultiDimRingBuffer<float> {
    long long _field1;
    long long _field2;
    int _field3;
    int _field4;
    long long *_field5;
    long long *_field6;
    float *_field7;
    long long _field8;
    _Bool _field9;
};

struct CMySet<CNote> {
    struct __tree<CNote, std::__1::less<CNote>, std::__1::allocator<CNote>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<CNote, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<CNote>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct CNote {
    long long mNoteNr;
    int mEnh;
};

struct CNoteGroupInfo;

struct CNoteGroupInfos {
    struct CNoteGroupInfo *__begin_;
    struct CNoteGroupInfo *__end_;
    struct __compressed_pair<CNoteGroupInfo *, std::__1::allocator<CNoteGroupInfo>> {
        struct CNoteGroupInfo *__first_;
    } __end_cap_;
};

struct CNoteRepeatPars {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    char _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    char _field16;
    char _field17;
    char _field18;
    char _field19;
    char _field20;
    char _field21;
    char _field22;
    char _field23;
    char _field24;
    char _field25[8];
};

struct CNoteWithLength {
    long long _field1;
    int _field2;
    double _field3;
};

struct CObjPtrList<CCTRLController> {
    CDUnknownFunctionPointerType *_field1;
    struct CCTRLController **_field2;
    struct CCTRLController **_field3;
    struct __compressed_pair<CCTRLController **, std::__1::allocator<CCTRLController *>> {
        struct CCTRLController **_field1;
    } _field4;
};

struct CObjPtrList<CDEPDependency> {
    CDUnknownFunctionPointerType *_field1;
    struct CDEPDependency **_field2;
    struct CDEPDependency **_field3;
    struct __compressed_pair<CDEPDependency **, std::__1::allocator<CDEPDependency *>> {
        struct CDEPDependency **_field1;
    } _field4;
};

struct CPianoRollDataSource {
    CDUnknownFunctionPointerType *_field1;
    struct vector<TNoteInfo, std::__1::allocator<TNoteInfo>> _field2;
    vector_963f8eea _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct CPlugIn;

struct CPlugInShell;

struct CPlugInUserCommunicator;

struct CPlugInUserCommunicatorPlugInSideObserver;

struct CPlugInUserCommunicatorUserSideObserver;

struct CPlugInUserCommunicator_OSC {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct CPlugInUserCommunicatorPlugInSideObserver *_field3;
    struct CPlugInUserCommunicatorUserSideObserver *_field4;
    void *_field5;
    _Bool _field6;
    struct __CFDate *_field7;
};

struct CReadWriteLock {
    struct _opaque_pthread_rwlock_t _rwLock;
    unsigned long long _countersKey;
};

struct CRegion {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
};

struct CRegionAudio {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
    struct CEvExt _field4;
    struct CEvExt _field5;
    struct CEvExt _field6;
};

struct CRegionIndex {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CRegions {
    long long _field1;
    long long _field2;
    struct CEvExt _field3;
};

struct CScale {
    struct CNote mRootNote;
    int mScaleType;
    int mKeyEnh[12];
    struct TScaleData mActiveScaleData;
    struct TScaleData mCustomScaleData;
};

struct CSemitones {
    unsigned long long _field1;
};

struct CSignKey {
    struct CScale mScale;
};

struct CSingleEvExt {
    long long _field1;
    long long _field2;
};

struct CSong {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[190];
    struct CTFlagSet<_SONG::TSelBasedFlags, unsigned char> _field9;
    char _field10;
    struct CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char> _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    unsigned char _field16;
    char _field17;
    char _field18;
    short _field19[100];
    int _field20[133];
    struct CTFlagSet<_SONG::TTronFlags, int> _field21;
    int _field22;
    struct CTFlagSet<_SONG::TVariousEditorFlags, int> _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    unsigned int _field37;
    int _field38;
    int _field39;
    struct CSongObjects *_field40;
    struct tMapGenData *_field41;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field42;
    struct CAdjustBeats *_field43;
    struct CTrackConductor *_field44;
    struct CTransientContainer *_field45;
    struct CMovieTNUtility *_field46;
    void *_field47;
    struct CChordTypes *_field48;
    struct CAssessmentController *_field49;
    int _field50;
    struct TTrackNr _field51;
    int _field52;
    int _field53;
    struct MORESEQPARS _field54;
    struct TAbsPureClock _field55;
    unsigned short _field56;
    char _field57[16];
    int _field58;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field59;
    struct CEvs *_field60;
    char _field61;
    struct CNoteRepeatPars _field62;
    unsigned long long _field63;
    int _field64;
    unsigned char _field65;
};

struct CSongObjectHeader;

struct CSongObjects;

struct CSongSignature {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[190];
    struct CTFlagSet<_SONG::TSelBasedFlags, unsigned char> _field9;
    char _field10;
    struct CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char> _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    unsigned char _field16;
    char _field17;
    char _field18;
    short _field19[100];
    int _field20[133];
    struct CTFlagSet<_SONG::TTronFlags, int> _field21;
    int _field22;
    struct CTFlagSet<_SONG::TVariousEditorFlags, int> _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    unsigned int _field37;
    int _field38;
    int _field39;
    struct CSongObjects *_field40;
    struct tMapGenData *_field41;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field42;
    struct CAdjustBeats *_field43;
    struct CTrackConductor *_field44;
    struct CTransientContainer *_field45;
    struct CMovieTNUtility *_field46;
    void *_field47;
    struct CChordTypes *_field48;
    struct CAssessmentController *_field49;
    int _field50;
    struct TTrackNr _field51;
    int _field52;
    int _field53;
    struct MORESEQPARS _field54;
    struct TAbsPureClock _field55;
    unsigned short _field56;
    char _field57[16];
    int _field58;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field59;
    struct CEvs *_field60;
    char _field61;
    struct CNoteRepeatPars _field62;
    unsigned long long _field63;
    int _field64;
    unsigned char _field65;
};

struct CSongTron {
    struct FVARS _field1;
    struct FVARS _field2;
    char _field3[120];
    char _field4;
    unsigned char _field5;
    char _field6;
    char _field7;
    char _field8[190];
    struct CTFlagSet<_SONG::TSelBasedFlags, unsigned char> _field9;
    char _field10;
    struct CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char> _field11;
    char _field12;
    char _field13;
    char _field14;
    char _field15;
    unsigned char _field16;
    char _field17;
    char _field18;
    short _field19[100];
    int _field20[133];
    struct CTFlagSet<_SONG::TTronFlags, int> _field21;
    int _field22;
    struct CTFlagSet<_SONG::TVariousEditorFlags, int> _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    unsigned int _field37;
    int _field38;
    int _field39;
    struct CSongObjects *_field40;
    struct tMapGenData *_field41;
    struct vector<MAMem2, std::__1::allocator<MAMem2>> *_field42;
    struct CAdjustBeats *_field43;
    struct CTrackConductor *_field44;
    struct CTransientContainer *_field45;
    struct CMovieTNUtility *_field46;
    void *_field47;
    struct CChordTypes *_field48;
    struct CAssessmentController *_field49;
    int _field50;
    struct TTrackNr _field51;
    int _field52;
    int _field53;
    struct MORESEQPARS _field54;
    struct TAbsPureClock _field55;
    unsigned short _field56;
    char _field57[16];
    int _field58;
    struct CTFlagSet<_SONG::TSongRuntimeFlags, int> _field59;
    struct CEvs *_field60;
    char _field61;
    struct CNoteRepeatPars _field62;
    unsigned long long _field63;
    int _field64;
    unsigned char _field65;
};

struct CStompBoxBaseShell {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    _Bool _field6;
    _Bool _field7;
    void *_field8;
    void *_field9;
    void *_field10;
    struct vector<CPlugInUserCommunicator *, std::__1::allocator<CPlugInUserCommunicator *>> _field11;
    struct map<long long, const void *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, const void *>>> _field12;
    _Bool _field13;
    _Bool _field14;
    long long *_field15;
    _Bool _field16;
    long long *_field17;
    _Bool _field18;
    long long *_field19;
    _Bool _field20;
    long long *_field21;
    _Bool _field22;
    long long *_field23;
    _Bool _field24;
    CDUnknownFunctionPointerType *_field25;
    struct CAddRemoveIterateList _field26;
    _Bool _field27;
    struct __CFArray *_field28;
    struct CCTRLController **_field29;
    int _field30;
    float _field31;
    struct CHost *_field32;
    struct CBasicFX *_field33;
    long long _field34;
    _Bool _field35;
    _Bool _field36;
    long long _field37;
    long long _field38;
    long long _field39;
    struct TAudioIOConfig *_field40;
    long long _field41;
    long long _field42;
    long long _field43[32];
    long long _field44;
    long long _field45;
    long long _field46[32];
    char *_field47;
    char *_field48;
    char *_field49;
    char *_field50;
    int _field51;
    long long _field52;
    long long _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    int _field57;
    int _field58;
    CDUnknownFunctionPointerType _field59;
    void *_field60;
    long long _field61;
    float _field62;
    long long _field63;
    long long _field64;
    long long _field65;
    long long _field66;
    long long _field67;
    _Bool _field68;
    _Bool _field69;
    long long _field70;
    float _field71;
    float _field72;
    float _field73;
    _Bool _field74;
    _Bool _field75;
    struct CObjPtrList<CCTRLController> _field76;
    struct CObjPtrList<CDEPDependency> _field77;
    _Bool _field78;
    _Bool _field79;
    _Bool _field80;
    long long _field81;
    int _field82;
    long long _field83;
    _Bool _field84;
    _Bool _field85;
    long long _field86;
    struct vector<EPlugInID, std::__1::allocator<EPlugInID>> _field87;
    float _field88;
    _Bool _field89;
    int _field90[16];
    int _field91[16];
    int _field92;
    long long _field93;
    char *_field94;
    long long _field95;
    struct CPlugInShell *_field96;
    int _field97;
    float _field98;
    long long _field99;
    long long _field100;
    float _field101;
    float _field102;
    float _field103;
    float _field104;
    float _field105;
    float _field106;
    float _field107;
    float _field108;
    _Bool _field109;
    _Bool _field110;
    long long _field111;
    struct CTimeSync *_field112;
    _Bool _field113;
};

struct CSystemStateHandler {
    CDUnknownFunctionPointerType *_field1;
    void *_field2;
};

struct CTFlagSet<CMSeqLight::TMSeqFlag2, short> {
    short _field1;
};

struct CTFlagSet<CTrack::TTrackFlag, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag2, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag3, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackFlag4, char> {
    char _field1;
};

struct CTFlagSet<CTrack::TTrackMute, char> {
    char _field1;
};

struct CTFlagSet<_SONG::TFreeRecordingFlags, unsigned char> {
    unsigned char _field1;
};

struct CTFlagSet<_SONG::TSelBasedFlags, unsigned char> {
    unsigned char _field1;
};

struct CTFlagSet<_SONG::TSongRuntimeFlags, int> {
    int _field1;
};

struct CTFlagSet<_SONG::TTronFlags, int> {
    int _field1;
};

struct CTFlagSet<_SONG::TVariousEditorFlags, int> {
    int _field1;
};

struct CTimeSync;

struct CTrack {
    char _field1;
    char _field2;
    struct CTFlagSet<CTrack::TTrackFlag, char> _field3;
    struct CTFlagSet<CTrack::TTrackMute, char> _field4;
    int _field5;
    int _field6;
    unsigned short _field7;
    unsigned char _field8;
    unsigned char _field9;
    struct TCollapsedOverviewObjectList *_field10;
    struct CUUID _field11;
    struct CTFlagSet<CTrack::TTrackFlag2, char> _field12;
    struct CTFlagSet<CTrack::TTrackFlag3, char> _field13;
    struct CTFlagSet<CTrack::TTrackFlag4, char> _field14;
    char _field15;
    struct MEGAPARS _field16;
    struct MEGAPARS _field17;
    int _field18;
    int _field19;
    struct TTrackNr _field20;
    struct TTrackNr _field21;
};

struct CTrackConductor;

struct CTransient;

struct CTransientContainer;

struct CTransients {
    struct CTransient *_field1;
    struct CTransient *_field2;
    struct __compressed_pair<CTransient *, std::__1::allocator<CTransient>> {
        struct CTransient *_field1;
    } _field3;
    int _field4;
};

struct CUUID {
    struct {
        unsigned char _field1;
        unsigned char _field2;
        unsigned char _field3;
        unsigned char _field4;
        unsigned char _field5;
        unsigned char _field6;
        unsigned char _field7;
        unsigned char _field8;
        unsigned char _field9;
        unsigned char _field10;
        unsigned char _field11;
        unsigned char _field12;
        unsigned char _field13;
        unsigned char _field14;
        unsigned char _field15;
        unsigned char _field16;
    } _field1;
};

struct CVirtualTrack {
    struct CSong *_field1;
    int _field2;
    struct TTrackNr _field3;
    struct CUUID _field4;
};

struct CbBasicPianoRollDataSource {
    CDUnknownFunctionPointerType *_field1;
    struct vector<TNoteInfo, std::__1::allocator<TNoteInfo>> _field2;
    vector_963f8eea _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    id _field7;
    id _field8;
    id _field9;
    int _field10;
};

struct CbDrummerNoteDrawingInfo {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct CbExternalGuitarTunerViewController {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct CbFilterHistory_t {
    float posInDegrees;
    float oldPosInDegrees;
    float filterOutputInDegrees;
    float oldFilterOutputInDegrees;
    float oldFilterBPOutputInDegrees;
};

struct CbMidiEvent {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    double _field5;
    double _field6;
};

struct CbMidiRegionDrawUserInfo_t {
    double _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    id _field8;
    struct CGContext *_field9;
    double _field10;
    struct CGRect _field11[80];
    int _field12;
    id _field13;
    id _field14;
    struct CbDrummerNoteDrawingInfo _field15[8];
    struct CGPoint _field16;
    long long _field17;
    _Bool _field18;
    id _field19;
};

struct Delegate;

struct DfAudioFileInfo_s {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    long long _field4;
    long long _field5;
    long long _field6;
};

struct DfClipTrim {
    long long _field1;
    long long _field2;
};

struct DfRegionEventTransferMetaData {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct ExtendedBeatInfo {
    double _field1;
    int _field2;
    int _field3;
    _Bool _field4;
    char _field5;
    char _field6;
    _Bool _field7;
    long long _field8;
    long long _field9;
    long long _field10[8];
    int _field11;
    int _field12[8];
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    struct CSignKey _field17;
};

struct FVARS {
    unsigned int _field1;
    short _field2;
    short _field3;
    short _field4;
    short _field5;
    unsigned int _field6;
    int _field7;
    short _field8;
    int _field9;
    int _field10;
    struct TPureClock _field11;
    char _field12;
    char _field13;
    unsigned char _field14;
    char _field15;
    struct TPosOneBasedTrackNr _field16;
    struct TPosOneBasedTrackNr _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    long long _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    char _field41;
    char _field42;
    char _field43;
    char _field44;
    unsigned char _field45;
    unsigned char _field46;
    char _field47;
    char _field48;
    char _field49;
    char _field50;
    char _field51;
    char _field52;
    char _field53;
    char _field54;
    char _field55;
    char _field56;
    char _field57[12];
    short _field58;
    char _field59;
    char _field60;
    char _field61;
    char _field62;
    char _field63;
    char _field64;
    char _field65;
    unsigned char _field66;
    char _field67;
    char _field68;
    char _field69;
    char _field70;
    char _field71;
    char _field72;
    int _field73;
    char _field74;
    char _field75;
    unsigned char _field76;
    char _field77;
    char _field78;
    char _field79;
    char _field80;
    char _field81;
    char _field82;
    char _field83;
    char _field84;
    char _field85;
    char _field86;
    char _field87;
    char _field88;
    char _field89;
    char _field90;
    char _field91;
    char _field92;
    char _field93;
    int _field94;
    int _field95;
    int _field96;
    struct TPosOneBasedTrackNr _field97;
    short _field98;
    struct TPosOneBasedTrackNr _field99;
    short _field100;
    short _field101;
    short _field102;
    char _field103;
    char _field104;
    char _field105;
    char _field106;
    char _field107;
    char _field108;
    int _field109;
    int _field110;
    int _field111;
    char _field112;
    char _field113;
    int _field114;
    int _field115;
    int _field116;
    short _field117;
    short _field118;
    char _field119;
    char _field120;
    short _field121;
    char _field122;
    char _field123;
    char _field124;
    unsigned char _field125;
    char _field126;
    unsigned char _field127;
    char _field128;
    char _field129;
    char _field130[8];
    char _field131;
    char _field132;
    char _field133;
    unsigned char _field134;
    char _field135;
    char _field136;
    char _field137;
    char _field138;
    short _field139;
    short _field140;
    short _field141;
    char _field142;
    char _field143;
    char _field144;
    char _field145;
    char _field146;
    char _field147;
    char _field148;
    char _field149;
    struct TVolatile<TAbsPureClock> _field150;
    struct TVolatile<TAbsPureClock> _field151;
    struct TAbsPureClock _field152;
    struct TAbsPureClock _field153;
    struct TSignedPureClock _field154;
    struct TAbsPureClock _field155;
    struct TAbsPureClock _field156;
    struct TPureClock _field157;
    struct TPureClock _field158;
    struct TPureClock _field159;
    struct TAbsPureClock _field160;
    struct TPureClock _field161;
    struct TAbsPureClock _field162;
    struct TAbsPureClock _field163;
    struct TPureClock _field164;
    struct TPureClock _field165;
    struct TPureClock _field166;
    struct TPureClock _field167;
    int _field168;
    struct TPosOneBasedTrackNr _field169;
    char _field170;
    char _field171;
    float _field172;
    char _field173;
    char _field174;
    short _field175;
    struct TAbsPureClock _field176;
    struct TAbsPureClock _field177;
    struct TPureLength _field178;
    char _field179;
    struct TAbsPureClock _field180;
    char _field181;
    char _field182;
    char _field183;
    char _field184;
    char _field185;
    char _field186;
    char _field187;
    struct TAbsPureClock _field188;
    int _field189;
    int _field190;
    struct CEvNote _field191;
    struct CEvNote _field192;
    struct CEvNote _field193;
    struct CEvNote _field194;
    char _field195;
    char _field196;
    char _field197;
    char _field198[54];
};

struct FileRec {
    unsigned char _field1;
    unsigned char _field2;
    struct CFileIO _field3;
};

struct GAmpDesignerChessboardBasicViewController {
    Class _field1;
    id _field2;
    id _field3;
};

struct GAttachable;

struct GBaseMenu;

struct GBaseView {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GAttachment *, std::__1::allocator<GAttachment *>> *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct GGeoRect<float> _field10;
    struct GGeoRect<float> _field11;
    struct GGeoRect<float> _field12;
    struct GGeoRect<float> _field13;
    struct GGeoPoint<float> _field14;
    struct GGeoPoint<float> _field15;
    struct GGeoPoint<float> _field16;
    struct GGeoPoint<float> _field17;
    struct GView *_field18;
    struct GBaseView *_field19;
    struct vector<GView *, std::__1::allocator<GView *>> _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    basic_string_a490aa4c _field28;
    struct GGeoPoint<float> _field29;
    struct GGeoPoint<float> _field30;
    struct GGeoPoint<float> _field31;
    struct GGeoPoint<float> _field32;
    struct GGeoPoint<float> _field33;
    struct GDateTime _field34;
    struct GLogicalRect _field35;
    long long _field36;
    struct GToolTip *_field37;
    _Bool _field38;
    basic_string_a490aa4c _field39;
    basic_string_a490aa4c _field40;
    CDUnknownFunctionPointerType *_field41;
    int _field42;
    int _field43;
    int _field44;
    struct GBaseView *_field45;
    int _field46;
    CDUnknownFunctionPointerType _field47;
    void *_field48;
    CDUnknownFunctionPointerType *_field49;
    void *_field50;
    void *_field51;
    struct GRP<GPort> _field52;
    unsigned int _field53;
    void *_field54;
    struct GRP<GPort> _field55;
    unsigned int _field56;
    unsigned int _field57;
    struct GBaseView *_field58;
    int _field59;
    struct GGeoRect<int> _field60;
    CDUnknownFunctionPointerType *_field61;
    _Bool _field62;
    _Bool _field63;
    struct GModifier _field64;
    struct GGeoRect<float> _field65;
    _Bool _field66;
    _Bool _field67;
    struct GView *_field68;
    struct GView *_field69;
    struct GView *_field70;
    struct GView *_field71;
    struct GView *_field72;
    struct GGeoPoint<float> _field73;
    struct GGeoPoint<float> _field74;
    struct GGeoPoint<float> _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    _Bool _field79;
    struct list<GView *, std::__1::allocator<GView *>> _field80;
    struct GGeoPoint<int> _field81;
    _Bool _field82;
    int _field83;
    CDUnknownFunctionPointerType _field84;
    void *_field85;
    struct GToolTip *_field86;
    _Bool _field87;
    float _field88;
    struct GGeoRect<float> _field89;
    struct GTextView *_field90;
    struct set<GSyncControlValue *, std::__1::less<GSyncControlValue *>, std::__1::allocator<GSyncControlValue *>> _field91;
};

struct GContextMenu {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GAttachment *, std::__1::allocator<GAttachment *>> *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct GGeoRect<float> _field10;
    struct GGeoRect<float> _field11;
    struct GGeoRect<float> _field12;
    struct GGeoRect<float> _field13;
    struct GGeoPoint<float> _field14;
    struct GGeoPoint<float> _field15;
    struct GGeoPoint<float> _field16;
    struct GGeoPoint<float> _field17;
    struct GView *_field18;
    struct GBaseView *_field19;
    struct vector<GView *, std::__1::allocator<GView *>> _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    basic_string_a490aa4c _field28;
    struct GGeoPoint<float> _field29;
    struct GGeoPoint<float> _field30;
    struct GGeoPoint<float> _field31;
    struct GGeoPoint<float> _field32;
    struct GGeoPoint<float> _field33;
    struct GDateTime _field34;
    struct GLogicalRect _field35;
    long long _field36;
    struct GToolTip *_field37;
    _Bool _field38;
    basic_string_a490aa4c _field39;
    basic_string_a490aa4c _field40;
    CDUnknownFunctionPointerType *_field41;
    struct vector<GListener *, std::__1::allocator<GListener *>> _field42;
    _Bool _field43;
    CDUnknownFunctionPointerType *_field44;
    _Bool _field45;
    int _field46;
    int _field47;
    unsigned int _field48;
    CDUnknownFunctionPointerType *_field49;
    struct map<int, GPart *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GPart *>>> _field50;
    struct set<GRP<GPartSync>, std::__1::less<GRP<GPartSync>>, std::__1::allocator<GRP<GPartSync>>> _field51;
    struct map<GPartHandler::TElementKey, int, std::__1::less<GPartHandler::TElementKey>, std::__1::allocator<std::__1::pair<const GPartHandler::TElementKey, int>>> _field52;
    struct map<int, GRP<GValue>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GRP<GValue>>>> _field53;
    int _field54;
    struct GHotSpot _field55;
    struct GHotSpot _field56;
    struct GPort *_field57;
    struct GGeoPoint<float> _field58;
    struct GGeoPoint<float> _field59;
    struct GRP<GImage> _field60;
    int _field61;
    void *_field62;
    basic_string_a490aa4c _field63;
    unsigned int _field64;
    float _field65;
    _Bool _field66;
    struct GGeoPoint<float> _field67;
    _Bool _field68;
    CDUnknownFunctionPointerType *_field69;
    basic_string_a490aa4c _field70;
    int _field71;
    int _field72;
    struct GGeoPoint<float> _field73;
    int _field74;
    struct GBaseMenu *_field75;
    struct vector<GMenuItem *, std::__1::allocator<GMenuItem *>> _field76;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field77;
    CDUnknownFunctionPointerType *_field78;
    struct TMerge _field79;
    struct GRGB _field80;
    struct GRGB _field81;
    int _field82;
    int _field83;
    float _field84;
    float _field85;
    int _field86;
    int _field87[10];
    CDUnknownFunctionPointerType *_field88;
    struct GAttachable *_field89;
    int _field90;
    _Bool _field91;
    struct GView *_field92;
    int _field93;
    int _field94;
    int _field95;
    _Bool _field96;
    struct set<GGeoRect<float>, std::__1::less<GGeoRect<float>>, std::__1::allocator<GGeoRect<float>>> _field97;
    basic_string_a490aa4c _field98;
    _Bool _field99;
};

struct GControl {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GAttachment *, std::__1::allocator<GAttachment *>> *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct GGeoRect<float> _field10;
    struct GGeoRect<float> _field11;
    struct GGeoRect<float> _field12;
    struct GGeoRect<float> _field13;
    struct GGeoPoint<float> _field14;
    struct GGeoPoint<float> _field15;
    struct GGeoPoint<float> _field16;
    struct GGeoPoint<float> _field17;
    struct GView *_field18;
    struct GBaseView *_field19;
    struct vector<GView *, std::__1::allocator<GView *>> _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    basic_string_a490aa4c _field28;
    struct GGeoPoint<float> _field29;
    struct GGeoPoint<float> _field30;
    struct GGeoPoint<float> _field31;
    struct GGeoPoint<float> _field32;
    struct GGeoPoint<float> _field33;
    struct GDateTime _field34;
    struct GLogicalRect _field35;
    long long _field36;
    struct GToolTip *_field37;
    _Bool _field38;
    basic_string_a490aa4c _field39;
    basic_string_a490aa4c _field40;
    CDUnknownFunctionPointerType *_field41;
    struct vector<GListener *, std::__1::allocator<GListener *>> _field42;
    _Bool _field43;
    CDUnknownFunctionPointerType *_field44;
    _Bool _field45;
    int _field46;
    int _field47;
    unsigned int _field48;
    CDUnknownFunctionPointerType *_field49;
    struct map<int, GPart *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GPart *>>> _field50;
    struct set<GRP<GPartSync>, std::__1::less<GRP<GPartSync>>, std::__1::allocator<GRP<GPartSync>>> _field51;
    struct map<GPartHandler::TElementKey, int, std::__1::less<GPartHandler::TElementKey>, std::__1::allocator<std::__1::pair<const GPartHandler::TElementKey, int>>> _field52;
    struct map<int, GRP<GValue>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GRP<GValue>>>> _field53;
    int _field54;
    struct GHotSpot _field55;
    struct GHotSpot _field56;
    struct GPort *_field57;
    struct GGeoPoint<float> _field58;
    struct GGeoPoint<float> _field59;
    struct GRP<GImage> _field60;
    int _field61;
    void *_field62;
    basic_string_a490aa4c _field63;
    unsigned int _field64;
    float _field65;
    _Bool _field66;
    struct GGeoPoint<float> _field67;
    _Bool _field68;
};

struct GDateTime {
    long long _field1;
};

struct GGeoPoint<float> {
    float _field1;
    float _field2;
};

struct GGeoPoint<int> {
    int _field1;
    int _field2;
};

struct GGeoRect<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct GGeoRect<int> {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GHotSpot {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> *_field4;
    int _field5;
};

struct GImage;

struct GListener;

struct GLogicalRect {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct GMenuItem;

struct GMessage {
    CDUnknownFunctionPointerType *_field1;
    unsigned int :1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    float _field6;
    long long _field7;
    char *_field8;
    unsigned long long _field9;
};

struct GMessageToCocoaBridge {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GSender *, std::__1::allocator<GSender *>> _field2;
    _Bool _field3;
    struct set<NSObject<GMessageToCocoaBridgeUser>*, std::__1::less<NSObject<GMessageToCocoaBridgeUser>*>, std::__1::allocator<NSObject<GMessageToCocoaBridgeUser>*>> _field4;
};

struct GModifier {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct GPedalBoardChessboardBasicViewController {
    Class _field1;
    id _field2;
    id _field3;
};

struct GPlugInViewController {
    Class _field1;
};

struct GPopUpMenu {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GAttachment *, std::__1::allocator<GAttachment *>> *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct GGeoRect<float> _field10;
    struct GGeoRect<float> _field11;
    struct GGeoRect<float> _field12;
    struct GGeoRect<float> _field13;
    struct GGeoPoint<float> _field14;
    struct GGeoPoint<float> _field15;
    struct GGeoPoint<float> _field16;
    struct GGeoPoint<float> _field17;
    struct GView *_field18;
    struct GBaseView *_field19;
    struct vector<GView *, std::__1::allocator<GView *>> _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    basic_string_a490aa4c _field28;
    struct GGeoPoint<float> _field29;
    struct GGeoPoint<float> _field30;
    struct GGeoPoint<float> _field31;
    struct GGeoPoint<float> _field32;
    struct GGeoPoint<float> _field33;
    struct GDateTime _field34;
    struct GLogicalRect _field35;
    long long _field36;
    struct GToolTip *_field37;
    _Bool _field38;
    basic_string_a490aa4c _field39;
    basic_string_a490aa4c _field40;
    CDUnknownFunctionPointerType *_field41;
    struct vector<GListener *, std::__1::allocator<GListener *>> _field42;
    _Bool _field43;
    CDUnknownFunctionPointerType *_field44;
    _Bool _field45;
    int _field46;
    int _field47;
    unsigned int _field48;
    CDUnknownFunctionPointerType *_field49;
    struct map<int, GPart *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GPart *>>> _field50;
    struct set<GRP<GPartSync>, std::__1::less<GRP<GPartSync>>, std::__1::allocator<GRP<GPartSync>>> _field51;
    struct map<GPartHandler::TElementKey, int, std::__1::less<GPartHandler::TElementKey>, std::__1::allocator<std::__1::pair<const GPartHandler::TElementKey, int>>> _field52;
    struct map<int, GRP<GValue>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GRP<GValue>>>> _field53;
    int _field54;
    struct GHotSpot _field55;
    struct GHotSpot _field56;
    struct GPort *_field57;
    struct GGeoPoint<float> _field58;
    struct GGeoPoint<float> _field59;
    struct GRP<GImage> _field60;
    int _field61;
    void *_field62;
    basic_string_a490aa4c _field63;
    unsigned int _field64;
    float _field65;
    _Bool _field66;
    struct GGeoPoint<float> _field67;
    _Bool _field68;
    CDUnknownFunctionPointerType *_field69;
    basic_string_a490aa4c _field70;
    int _field71;
    int _field72;
    struct GGeoPoint<float> _field73;
    int _field74;
    struct GBaseMenu *_field75;
    struct vector<GMenuItem *, std::__1::allocator<GMenuItem *>> _field76;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field77;
    CDUnknownFunctionPointerType *_field78;
    CDUnknownFunctionPointerType *_field79;
    struct map<int, GImageArrayMixin::TType, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GImageArrayMixin::TType>>> _field80;
    struct GRGB _field81;
    CDUnknownFunctionPointerType *_field82;
    CDUnknownFunctionPointerType *_field83;
    struct map<std::__1::pair<int, int>, GIText, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, GIText>>> _field84;
    struct GGeoRect<float> _field85;
    struct GGeoPoint<float> _field86;
    int _field87;
    _Bool _field88;
    _Bool _field89;
    _Bool _field90;
    int _field91;
};

struct GPort;

struct GRGB {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct GRP<GImage> {
    struct GImage *_field1;
};

struct GRP<GPort> {
    struct GPort *_field1;
};

struct GSender {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GListener *, std::__1::allocator<GListener *>> _field2;
    _Bool _field3;
};

struct GTextView;

struct GToolTip;

struct GView {
    CDUnknownFunctionPointerType *_field1;
    struct vector<GAttachment *, std::__1::allocator<GAttachment *>> *_field2;
    CDUnknownFunctionPointerType *_field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType *_field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct GGeoRect<float> _field10;
    struct GGeoRect<float> _field11;
    struct GGeoRect<float> _field12;
    struct GGeoRect<float> _field13;
    struct GGeoPoint<float> _field14;
    struct GGeoPoint<float> _field15;
    struct GGeoPoint<float> _field16;
    struct GGeoPoint<float> _field17;
    struct GView *_field18;
    struct GBaseView *_field19;
    struct vector<GView *, std::__1::allocator<GView *>> _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    basic_string_a490aa4c _field28;
    struct GGeoPoint<float> _field29;
    struct GGeoPoint<float> _field30;
    struct GGeoPoint<float> _field31;
    struct GGeoPoint<float> _field32;
    struct GGeoPoint<float> _field33;
    struct GDateTime _field34;
    struct GLogicalRect _field35;
    long long _field36;
    struct GToolTip *_field37;
    _Bool _field38;
    basic_string_a490aa4c _field39;
    basic_string_a490aa4c _field40;
};

struct GViewConnector {
    CDUnknownFunctionPointerType *_field1;
    struct GBaseView *_field2;
    struct GListener *_field3;
    _Bool _field4;
    float _field5;
};

struct GenerateRuntimeData;

struct IGenInstNoteNrHelper;

struct IGeneratorLibraryBundleLocations {
    CDUnknownFunctionPointerType *_field1;
};

struct IGeneratorLibraryBundleLocationsInternal;

struct JKConstBuffer {
    struct JKConstPtrRange _field1;
};

struct JKConstPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKEncodeCache {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKEncodeState {
    struct JKManagedBuffer _field1;
    struct JKManagedBuffer _field2;
    unsigned long long _field3;
    struct JKFastClassLookup _field4;
    struct JKEncodeCache _field5[1024];
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    id _field9;
    id _field10;
    SEL _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownBlockType _field13;
};

struct JKFastClassLookup {
    void *_field1;
    void *_field2;
    void *_field3;
    void *_field4;
    void *_field5;
};

struct JKHashTableEntry {
    unsigned long long _field1;
    id _field2;
    id _field3;
};

struct JKManagedBuffer {
    struct JKPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct JKObjCImpCache {
    Class _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct JKObjectStack {
    void **_field1;
    void **_field2;
    unsigned long long *_field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct JKParseState {
    unsigned long long _field1;
    struct JKConstBuffer _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    struct JKParseToken _field9;
    struct JKObjectStack _field10;
    struct JKTokenCache _field11;
    struct JKObjCImpCache _field12;
    id _field13;
    int _field14;
    _Bool _field15;
};

struct JKParseToken {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    struct JKTokenValue _field3;
    struct JKManagedBuffer _field4;
};

struct JKPtrRange {
    char *_field1;
    unsigned long long _field2;
};

struct JKTokenCache {
    struct JKTokenCacheItem *_field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned char _field4[1024];
};

struct JKTokenCacheItem;

struct JKTokenValue {
    struct JKConstPtrRange _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    union {
        long long _field1;
        unsigned long long _field2;
        double _field3;
    } _field4;
    struct JKTokenCacheItem *_field5;
};

struct JobState_t {
    long long _field1;
    struct CRegionIndex _field2;
};

struct LGCALLBACK {
    CDUnknownFunctionPointerType _field1;
    id _field2;
    SEL _field3;
    double _field4;
};

struct LGDOCUMENT {
    struct weak_ptr<LGDOCUMENT> _field1;
    struct CDocumentLogic *_field2;
    struct CSong *_field3;
    struct LGCALLBACK _field4[43];
    CDUnknownFunctionPointerType _field5;
};

struct LgGridLocation {
    unsigned int column;
    unsigned int row;
};

struct LgGridSize {
    unsigned int width;
    unsigned int height;
};

struct LgPluginGUIState {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field6;
    struct map<LgPluginID, short, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, short>>> _field7;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field8;
    struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> _field9;
    struct pair<float, float> _field10;
    _Bool _field11;
    int _field12;
};

struct LuaStateCache;

struct MABaseViewDataSourceConnection {
    CDUnknownFunctionPointerType *_field1;
    struct CAddRemoveIterateList _field2;
    _Bool _field3;
};

struct MADSPEvent;

struct MADSPEvents {
    struct MADSPEvent *_field1;
    struct MADSPEvent *_field2;
    struct __compressed_pair<MADSPEvent *, std::__1::allocator<MADSPEvent>> {
        struct MADSPEvent *_field1;
    } _field3;
};

struct MADSPUserPlugIn {
    CDUnknownFunctionPointerType *_field1;
};

struct MAGFNodeInfo {
    id _field1;
    id _field2;
    SEL _field3;
    SEL _field4;
    id _field5;
    id _field6;
};

struct MAGraphRange {
    double _field1;
    double _field2;
};

struct MAIdleProviderCppClient {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
};

struct MAMem {
    void *_field1;
    unsigned long long _field2;
};

struct MATronDrive {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<MATronDrive> _field2;
    struct MSuperStream *_field3;
    unsigned int _field4;
    int _field5;
};

struct MATronDriveEvent;

struct MAVeRemixerUIEffectBackgroundView {
    Class _field1;
};

struct MAVeRemixerUIEffectSelectorButtonView {
    Class _field1;
};

struct MAVeRemixerUIXPadView {
    Class _field1;
};

struct MAVeRemixerUIXYPadView {
    Class _field1;
};

struct MAVeUIActionAreaView {
    Class _field1;
};

struct MAVeUIBackgroundPlateView {
    Class _field1;
};

struct MAVeUIButtonView {
    Class _field1;
};

struct MAVeUIEmitterOverlayView {
    Class _field1;
};

struct MAVeUIGridView {
    Class _field1;
};

struct MAVeUILabelView {
    Class _field1;
};

struct MAVeUIMenuGridView {
    Class _field1;
};

struct MAVeUIViewAdapter {
    Class _field1;
};

struct MEGAPARS {
    union {
        CDStruct_cf3a1dbf _field1;
        int _field2;
    } _field1;
};

struct MORESEQPARS {
    short _field1;
    short _field2;
    short _field3;
    char _field4;
    char _field5;
    short _field6;
    struct QUAMOD _field7;
    struct TSignedPureLength _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
    struct REALS _field15;
    int _field16;
    char _field17;
    char _field18;
    short _field19;
    unsigned int _field20;
    int _field21;
    int _field22;
    int _field23;
    char _field24;
    char _field25;
    char _field26;
    char _field27;
};

struct MSuperStream;

struct MetroAnalysisDataSource {
    CDUnknownFunctionPointerType *_field1;
    basic_string_a490aa4c _field2;
};

struct MetroAudioPeakNode;

struct MetroAudioRMSNode;

struct MetroBassLineNode;

struct MetroBeat;

struct MetroChordCandidatesNode;

struct MetroChordNode;

struct MetroMelodyNode;

struct MetroMusicalContentNode;

struct MetroRhythmicContentNode;

struct MetroScaleNode;

struct MetroSignKeyNode;

struct MetroSignTimeNode;

struct MetroSwingNode;

struct MetroTempoNode;

struct MetroTuningNode;

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct OpaqueAudioConverter;

struct PLUGCONTROL {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
};

struct PointData_t;

struct QUAMOD {
    short _field1;
    short _field2;
    union {
        short _field1;
        struct {
            char _field1;
            char _field2;
        } _field2;
    } _field3;
    short _field4;
    short _field5;
    short _field6;
};

struct REALS {
    long long _field1;
    long long _field2;
};

struct RbRecRange {
    long long _field1;
    long long _field2;
};

struct RbRecReadChunk<float> {
    int _field1;
    float *_field2;
    long long _field3;
};

struct SEQPARS {
    short _field1;
    short _field2;
    short _field3;
    char _field4;
    char _field5;
    short _field6;
    struct QUAMOD _field7;
    struct TSignedPureLength _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
    char _field13;
    char _field14;
};

struct SEQPARS_ELASTICPITCH {
    struct QUAMOD _field1;
    short _field2;
};

struct SEntry;

struct SMPTETime {
    short mSubframes;
    short mSubframeDivisor;
    unsigned int mCounter;
    unsigned int mType;
    unsigned int mFlags;
    short mHours;
    short mMinutes;
    short mSeconds;
    short mFrames;
};

struct SRCDataInfo;

struct TAbsClockRange {
    struct TAbsPureClock _field1;
    struct TAbsPureClock _field2;
};

struct TAbsPureClock {
    long long m;
};

struct TAuConfType {
    short _field1;
};

struct TAuUnionType {
    short _field1;
};

struct TAudioIOConfig;

struct TCollapsedOverviewObjectList;

struct TEventInfo;

struct TGrooveMapInfo {
    struct vector<TEventInfo, std::__1::allocator<TEventInfo>> groovePositions;
    long long grooveLength;
    _Bool isPatternMode;
};

struct TMerge {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct TMusicXMLDoc {
    basic_string_a490aa4c Title;
    struct CHarmSignKeys HarmSignKeys;
    struct vector<TMusicXMLHarmony, std::__1::allocator<TMusicXMLHarmony>> Harmonies;
    struct vector<unsigned long, std::__1::allocator<unsigned long>> ChordSequences;
    struct vector<TMusicXMLTimeSignature, std::__1::allocator<TMusicXMLTimeSignature>> TimeSignatures;
    struct vector<CHarmSection, std::__1::allocator<CHarmSection>> HarmSections;
    struct CHarmCopies HarmCopies;
    struct vector<CHarmBarline, std::__1::allocator<CHarmBarline>> HarmBarlines;
};

struct TMusicXMLHarmony;

struct TMusicXMLMeasure {
    struct vector<TMusicXMLHarmony, std::__1::allocator<TMusicXMLHarmony>> _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    struct TMusicXMLTimeSignature _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    int _field12;
    int _field13;
};

struct TMusicXMLTimeSignature {
    double _field1;
    int _field2;
    int _field3;
};

struct TNomsInEv {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct TNoteInfo {
    float pos;
    float length;
    long long clockpos;
    long long clocklength;
    int midiNoteNr;
    int displayNoteNr;
    int velocity;
    _Bool selected;
    _Bool isTemporary;
    _Bool muted;
    _Bool looped;
    _Bool dimmed;
    int channel;
    void *noteId;
    int regionId;
    char mb3;
    int regionTranspose;
    _Bool needsUpdate;
};

struct TPersistentIOPrms {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    struct CSong *_field5;
    struct CSongObjectHeader *_field6;
    void *_field7;
    void *_field8;
    void *_field9;
    long long _field10;
    unsigned int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct TPosOneBasedTrackNr {
    short m;
};

struct TPureClock {
    long long _field1;
};

struct TPureLength {
    long long m;
};

struct TRegionInfo {
    float _field1;
    float _field2;
    int _field3;
    long long _field4;
    long long _field5;
    int _field6;
    int _field7;
    long long _field8;
    float _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    void *_field14;
};

struct TScaleData {
    int type;
    basic_string_a490aa4c name;
    int degreesPerOctave;
    int mDegreeToRootOffsetIntvlArray[12];
    int mode;
};

struct TSignedAbsPureClock {
    long long _field1;
};

struct TSignedPureClock {
    long long m;
};

struct TSignedPureLength {
    long long _field1;
};

struct TTrackNr {
    long long _field1;
    int _field2;
};

struct TVolatile<TAbsPureClock> {
    long long _field1;
};

struct TempoHint;

struct TimeSignatureHint;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct WeightedGaussian;

struct _CALayerIvars {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct _CbAudioFileInfo {
    int _field1;
    int _field2;
    _Bool _field3;
    double _field4;
    long long _field5;
    char _field6;
    _Bool _field7;
    _Bool _field8;
    double _field9;
    float _field10;
    char _field11;
};

struct _CbObjectEditBounceInfo {
    struct _CbObjectEditDirectionBounceInfo left;
    struct _CbObjectEditDirectionBounceInfo right;
    struct _CbObjectEditDirectionBounceInfo up;
    struct _CbObjectEditDirectionBounceInfo down;
};

struct _CbObjectEditDirectionBounceInfo {
    _Bool active;
    double referenceScrollOffsetPos;
    double referenceObjectPosInScrollView;
};

struct _CbRegionEventTransferContext {
    long long _field1;
    int _field2;
    struct DfRegionEventTransferMetaData *_field3;
    int _field4;
    _Bool _field5;
    id _field6;
};

struct _CbSliderRange {
    double _field1;
    double _field2;
};

struct _DfPlugInDescrSet {
    long long _field1;
    id _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    id _field6;
    _Bool _field7;
    CDStruct_d20431f8 _field8;
    long long _field9[4];
    long long _field10;
    long long _field11[40];
    long long _field12[40];
    id _field13[40];
    id _field14[40];
};

struct _Df_BarGridDrawInfoList_t {
    long long _field1;
    CDStruct_e28e794b _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    long long _field12;
    _Bool _field13;
    long long _field14;
    long long _field15;
    long long _field16[20];
    int _field17;
    long long _field18;
    long long _field19;
    int _field20;
    int _field21;
    struct _Df_BarGridDrawInfoList_t *_field22;
};

struct _Df_TimeGridDrawInfoList_t {
    int _field1;
    int _field2;
    int _field3;
    struct _Df_TimeGridDrawInfoList_t *_field4;
};

struct _LGLOOPAUTHORING {
    short _field1;
    short _field2;
    short _field3;
    char _field4[50];
    char _field5[50];
    char _field6[50];
    char *_field7;
};

struct _LGPlugInInfo {
    int cbSize;
    int numInputs;
    int numOutputs;
    int numOutBuses;
    int fInstrument;
    _Bool fIsLogicPlugIn;
    _Bool fIsFiltered;
    unsigned int manufacturerID;
    unsigned int productID;
    unsigned int plugInID;
    unsigned int architectureID;
    int plugInIndex;
    _Bool fIsMidiPlugin;
    int numOutsForBus[25];
    _Bool fIsLoaded;
    int fCurrent;
    void *reference;
    NSString *nsName;
    NSString *nsShortName;
    unsigned int auComponentType;
};

struct _LGPluginParameter {
    int _field1;
    int _field2;
    long long _field3;
    float _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
};

struct _LgClipMidiEvent {
    long long _field1;
    long long _field2;
    unsigned char _field3;
    int _field4;
    int _field5;
    unsigned char _field6;
};

struct _LgClipTime {
    unsigned int quantization;
    int count;
};

struct _LgFlexZone_t {
    long long _field1;
    long long _field2;
    long long _field3;
    float _field4;
    float _field5;
};

struct _LgProgressBar {
    double _field1;
    id _field2;
    id _field3;
    int _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __CFURL;

struct __hash_node_base<std::__1::__hash_node<int, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<int, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*> *__next_;
};

struct __list_node_base<GView *, void *> {
    struct __list_node_base<GView *, void *> *_field1;
    struct __list_node_base<GView *, void *> *_field2;
};

struct __list_node_base<const CTrack *, void *> {
    struct __list_node_base<const CTrack *, void *> *_field1;
    struct __list_node_base<const CTrack *, void *> *_field2;
};

struct __shared_weak_count;

struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
    struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
    } _field2;
    struct __compressed_pair<unsigned long, std::__1::less<int>> {
        unsigned long long _field1;
    } _field3;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __wrap_iter<CGenGenreLib *> {
    struct CGenGenreLib *_field1;
};

struct __wrap_iter<CGenInstLib *> {
    struct CGenInstLib *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct ab_color_t {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct auto_ptr<const IGenInstNoteNrHelper> {
    struct IGenInstNoteNrHelper *__ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct bitset<4> {
    unsigned long long __first_;
};

struct in_addr {
    unsigned int _field1;
};

struct integer_iterator<unsigned long> {
    unsigned long long m_value;
};

struct internal_state;

struct iterator {
    struct CRegion *_field1;
    struct TTrackNr _field2;
};

struct list<GView *, std::__1::allocator<GView *>> {
    struct __list_node_base<GView *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<GView *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<const CTrack *, std::__1::allocator<const CTrack *>> {
    struct __list_node_base<const CTrack *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const CTrack *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct lua_State;

struct map<GPartHandler::TElementKey, int, std::__1::less<GPartHandler::TElementKey>, std::__1::allocator<std::__1::pair<const GPartHandler::TElementKey, int>>> {
    struct __tree<std::__1::__value_type<GPartHandler::TElementKey, int>, std::__1::__map_value_compare<GPartHandler::TElementKey, std::__1::__value_type<GPartHandler::TElementKey, int>, std::__1::less<GPartHandler::TElementKey>, true>, std::__1::allocator<std::__1::__value_type<GPartHandler::TElementKey, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GPartHandler::TElementKey, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GPartHandler::TElementKey, std::__1::__value_type<GPartHandler::TElementKey, int>, std::__1::less<GPartHandler::TElementKey>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<LgPluginID, float, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, float>>> {
    struct __tree<std::__1::__value_type<LgPluginID, float>, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, float>, std::__1::less<LgPluginID>, true>, std::__1::allocator<std::__1::__value_type<LgPluginID, float>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<LgPluginID, float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, float>, std::__1::less<LgPluginID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<LgPluginID, short, std::__1::less<LgPluginID>, std::__1::allocator<std::__1::pair<const LgPluginID, short>>> {
    struct __tree<std::__1::__value_type<LgPluginID, short>, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, short>, std::__1::less<LgPluginID>, true>, std::__1::allocator<std::__1::__value_type<LgPluginID, short>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<LgPluginID, short>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<LgPluginID, std::__1::__value_type<LgPluginID, short>, std::__1::less<LgPluginID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<TAbsPureClock, RegionPositionCacheEntry, std::__1::less<TAbsPureClock>, std::__1::allocator<std::__1::pair<const TAbsPureClock, RegionPositionCacheEntry>>> {
    struct __tree<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::__map_value_compare<TAbsPureClock, std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::less<TAbsPureClock>, true>, std::__1::allocator<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TAbsPureClock, std::__1::__value_type<TAbsPureClock, RegionPositionCacheEntry>, std::__1::less<TAbsPureClock>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, GImageArrayMixin::TType, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GImageArrayMixin::TType>>> {
    struct __tree<std::__1::__value_type<int, GImageArrayMixin::TType>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GImageArrayMixin::TType>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GImageArrayMixin::TType>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GImageArrayMixin::TType>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GImageArrayMixin::TType>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, GPart *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GPart *>>> {
    struct __tree<std::__1::__value_type<int, GPart *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GPart *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GPart *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GPart *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GPart *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, GRP<GValue>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GRP<GValue>>>> {
    struct __tree<std::__1::__value_type<int, GRP<GValue>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GRP<GValue>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GRP<GValue>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GRP<GValue>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GRP<GValue>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, GView *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GView *>>> {
    struct __tree<std::__1::__value_type<int, GView *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GView *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GView *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GView *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, JobState_t, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, JobState_t>>> {
    struct __tree<std::__1::__value_type<int, JobState_t>, std::__1::__map_value_compare<int, std::__1::__value_type<int, JobState_t>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, JobState_t>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, JobState_t>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, JobState_t>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, const CEv *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, const CEv *>>> {
    struct __tree<std::__1::__value_type<int, const CEv *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, const CEv *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, const CEv *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, const CEv *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, const CEv *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long long, const void *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, const void *>>> {
    struct __tree<std::__1::__value_type<long long, const void *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, const void *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, const void *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, const void *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, const void *>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, CGenBeatedPatternIxs, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGenBeatedPatternIxs>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGenBeatedPatternIxs>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenBeatedPatternIxs>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGenBeatedPatternIxs>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGenBeatedPatternIxs>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenBeatedPatternIxs>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, CGenDrumMapBase *, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, CGenDrumMapBase *>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, CGenDrumMapBase *>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<int, int>, GIText, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<int, int>, GIText>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<int, int>, GIText>, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, GIText>, std::__1::less<std::__1::pair<int, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<int, int>, GIText>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<int, int>, GIText>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<int, int>, std::__1::__value_type<std::__1::pair<int, int>, GIText>, std::__1::less<std::__1::pair<int, int>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<long, GAutoSync *, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, GAutoSync *>>> {
    struct __tree<std::__1::__value_type<long, GAutoSync *>, std::__1::__map_value_compare<long, std::__1::__value_type<long, GAutoSync *>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, GAutoSync *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, GAutoSync *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, GAutoSync *>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<float, float> {
    float _field1;
    float _field2;
};

struct pair<int, int>;

struct re_guts;

struct set<GGeoRect<float>, std::__1::less<GGeoRect<float>>, std::__1::allocator<GGeoRect<float>>> {
    struct __tree<GGeoRect<float>, std::__1::less<GGeoRect<float>>, std::__1::allocator<GGeoRect<float>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GGeoRect<float>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<GGeoRect<float>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GRP<GPartSync>, std::__1::less<GRP<GPartSync>>, std::__1::allocator<GRP<GPartSync>>> {
    struct __tree<GRP<GPartSync>, std::__1::less<GRP<GPartSync>>, std::__1::allocator<GRP<GPartSync>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GRP<GPartSync>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<GRP<GPartSync>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GSyncControlValue *, std::__1::less<GSyncControlValue *>, std::__1::allocator<GSyncControlValue *>> {
    struct __tree<GSyncControlValue *, std::__1::less<GSyncControlValue *>, std::__1::allocator<GSyncControlValue *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GSyncControlValue *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<GSyncControlValue *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<NSObject<GMessageToCocoaBridgeUser>*, std::__1::less<NSObject<GMessageToCocoaBridgeUser>*>, std::__1::allocator<NSObject<GMessageToCocoaBridgeUser>*>> {
    struct __tree<NSObject<GMessageToCocoaBridgeUser>*, std::__1::less<NSObject<GMessageToCocoaBridgeUser>*>, std::__1::allocator<NSObject<GMessageToCocoaBridgeUser>*>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<NSObject<GMessageToCocoaBridgeUser>*, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<NSObject<GMessageToCocoaBridgeUser>*>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> _field1;
};

struct shared_ptr<CGenPatterns> {
    struct CGenPatterns *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<CMetroResult> {
    struct CMetroResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<MATronDrive> {
    struct MATronDrive *_field1;
    struct __shared_weak_count *_field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct tMapGenData;

struct unique_ptr<CAudioFileIO, std::__1::default_delete<CAudioFileIO>> {
    struct __compressed_pair<CAudioFileIO *, std::__1::default_delete<CAudioFileIO>> {
        struct CAudioFileIO *__first_;
    } __ptr_;
};

struct unique_ptr<CGenClaveCaches, std::__1::default_delete<CGenClaveCaches>> {
    struct __compressed_pair<CGenClaveCaches *, std::__1::default_delete<CGenClaveCaches>> {
        struct CGenClaveCaches *_field1;
    } _field1;
};

struct unique_ptr<CGenGenerator, std::__1::default_delete<CGenGenerator>> {
    struct __compressed_pair<CGenGenerator *, std::__1::default_delete<CGenGenerator>> {
        struct CGenGenerator *__first_;
    } __ptr_;
};

struct unique_ptr<CGenGenerator::GenerateRuntimeData, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> {
    struct __compressed_pair<CGenGenerator::GenerateRuntimeData *, std::__1::default_delete<CGenGenerator::GenerateRuntimeData>> {
        struct GenerateRuntimeData *_field1;
    } _field1;
};

struct unique_ptr<CGenGenerator::LuaStateCache, std::__1::default_delete<CGenGenerator::LuaStateCache>> {
    struct __compressed_pair<CGenGenerator::LuaStateCache *, std::__1::default_delete<CGenGenerator::LuaStateCache>> {
        struct LuaStateCache *_field1;
    } _field1;
};

struct unique_ptr<IGeneratorLibraryBundleLocationsInternal, std::__1::default_delete<IGeneratorLibraryBundleLocationsInternal>> {
    struct __compressed_pair<IGeneratorLibraryBundleLocationsInternal *, std::__1::default_delete<IGeneratorLibraryBundleLocationsInternal>> {
        struct IGeneratorLibraryBundleLocationsInternal *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<int, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<grid_event, std::__1::allocator<grid_event>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, std::__1::hash<int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>>>, std::__1::equal_to<int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
    struct __hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>, std::__1::allocator<std::__1::__hash_node<int, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<int, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<int>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<int>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>> {
    struct CEvLaunch **_field1;
    struct CEvLaunch **_field2;
    struct __compressed_pair<CEvLaunch **, std::__1::allocator<CEvLaunch *>> {
        struct CEvLaunch **_field1;
    } _field3;
};

struct vector<CGenLayerBitmaskAndBPRange, std::__1::allocator<CGenLayerBitmaskAndBPRange>> {
    struct CGenLayerBitmaskAndBPRange *__begin_;
    struct CGenLayerBitmaskAndBPRange *__end_;
    struct __compressed_pair<CGenLayerBitmaskAndBPRange *, std::__1::allocator<CGenLayerBitmaskAndBPRange>> {
        struct CGenLayerBitmaskAndBPRange *__first_;
    } __end_cap_;
};

struct vector<CGenRange<double>, std::__1::allocator<CGenRange<double>>> {
    struct CGenRange<double> *__begin_;
    struct CGenRange<double> *__end_;
    struct __compressed_pair<CGenRange<double>*, std::__1::allocator<CGenRange<double>>> {
        struct CGenRange<double> *__first_;
    } __end_cap_;
};

struct vector<CHarmBarline, std::__1::allocator<CHarmBarline>> {
    struct CHarmBarline *__begin_;
    struct CHarmBarline *__end_;
    struct __compressed_pair<CHarmBarline *, std::__1::allocator<CHarmBarline>> {
        struct CHarmBarline *__first_;
    } __end_cap_;
};

struct vector<CHarmSection, std::__1::allocator<CHarmSection>> {
    struct CHarmSection *__begin_;
    struct CHarmSection *__end_;
    struct __compressed_pair<CHarmSection *, std::__1::allocator<CHarmSection>> {
        struct CHarmSection *__first_;
    } __end_cap_;
};

struct vector<CMetroAnalyzerHints::BeatHint, std::__1::allocator<CMetroAnalyzerHints::BeatHint>> {
    struct BeatHint *__begin_;
    struct BeatHint *__end_;
    struct __compressed_pair<CMetroAnalyzerHints::BeatHint *, std::__1::allocator<CMetroAnalyzerHints::BeatHint>> {
        struct BeatHint *__first_;
    } __end_cap_;
};

struct vector<CMetroAnalyzerHints::TempoHint, std::__1::allocator<CMetroAnalyzerHints::TempoHint>> {
    struct TempoHint *__begin_;
    struct TempoHint *__end_;
    struct __compressed_pair<CMetroAnalyzerHints::TempoHint *, std::__1::allocator<CMetroAnalyzerHints::TempoHint>> {
        struct TempoHint *__first_;
    } __end_cap_;
};

struct vector<CMetroAnalyzerHints::TimeSignatureHint, std::__1::allocator<CMetroAnalyzerHints::TimeSignatureHint>> {
    struct TimeSignatureHint *__begin_;
    struct TimeSignatureHint *__end_;
    struct __compressed_pair<CMetroAnalyzerHints::TimeSignatureHint *, std::__1::allocator<CMetroAnalyzerHints::TimeSignatureHint>> {
        struct TimeSignatureHint *__first_;
    } __end_cap_;
};

struct vector<CPlugInUserCommunicator *, std::__1::allocator<CPlugInUserCommunicator *>> {
    struct CPlugInUserCommunicator **_field1;
    struct CPlugInUserCommunicator **_field2;
    struct __compressed_pair<CPlugInUserCommunicator **, std::__1::allocator<CPlugInUserCommunicator *>> {
        struct CPlugInUserCommunicator **_field1;
    } _field3;
};

struct vector<CRegion *, std::__1::allocator<CRegion *>> {
    struct CRegion **_field1;
    struct CRegion **_field2;
    struct __compressed_pair<CRegion **, std::__1::allocator<CRegion *>> {
        struct CRegion **_field1;
    } _field3;
};

struct vector<CTrack, std::__1::allocator<CTrack>> {
    struct CTrack *_field1;
    struct CTrack *_field2;
    struct __compressed_pair<CTrack *, std::__1::allocator<CTrack>> {
        struct CTrack *_field1;
    } _field3;
};

struct vector<CVirtualTrack, std::__1::allocator<CVirtualTrack>> {
    struct CVirtualTrack *_field1;
    struct CVirtualTrack *_field2;
    struct __compressed_pair<CVirtualTrack *, std::__1::allocator<CVirtualTrack>> {
        struct CVirtualTrack *_field1;
    } _field3;
};

struct vector<EPlugInID, std::__1::allocator<EPlugInID>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<EPlugInID *, std::__1::allocator<EPlugInID>> {
        int *_field1;
    } _field3;
};

struct vector<GAttachment *, std::__1::allocator<GAttachment *>>;

struct vector<GListener *, std::__1::allocator<GListener *>> {
    struct GListener **_field1;
    struct GListener **_field2;
    struct __compressed_pair<GListener **, std::__1::allocator<GListener *>> {
        struct GListener **_field1;
    } _field3;
};

struct vector<GMenuItem *, std::__1::allocator<GMenuItem *>> {
    struct GMenuItem **_field1;
    struct GMenuItem **_field2;
    struct __compressed_pair<GMenuItem **, std::__1::allocator<GMenuItem *>> {
        struct GMenuItem **_field1;
    } _field3;
};

struct vector<GSender *, std::__1::allocator<GSender *>> {
    struct GSender **_field1;
    struct GSender **_field2;
    struct __compressed_pair<GSender **, std::__1::allocator<GSender *>> {
        struct GSender **_field1;
    } _field3;
};

struct vector<GView *, std::__1::allocator<GView *>> {
    struct GView **_field1;
    struct GView **_field2;
    struct __compressed_pair<GView **, std::__1::allocator<GView *>> {
        struct GView **_field1;
    } _field3;
};

struct vector<LgTronSequence *, std::__1::allocator<LgTronSequence *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<LgTronSequence *__strong *, std::__1::allocator<LgTronSequence *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<MAMem2, std::__1::allocator<MAMem2>>;

struct vector<MATronDriveEvent, std::__1::allocator<MATronDriveEvent>> {
    struct MATronDriveEvent *__begin_;
    struct MATronDriveEvent *__end_;
    struct __compressed_pair<MATronDriveEvent *, std::__1::allocator<MATronDriveEvent>> {
        struct MATronDriveEvent *__first_;
    } __end_cap_;
};

struct vector<MetroAudioPeakNode, std::__1::allocator<MetroAudioPeakNode>> {
    struct MetroAudioPeakNode *__begin_;
    struct MetroAudioPeakNode *__end_;
    struct __compressed_pair<MetroAudioPeakNode *, std::__1::allocator<MetroAudioPeakNode>> {
        struct MetroAudioPeakNode *__first_;
    } __end_cap_;
};

struct vector<MetroAudioRMSNode, std::__1::allocator<MetroAudioRMSNode>> {
    struct MetroAudioRMSNode *__begin_;
    struct MetroAudioRMSNode *__end_;
    struct __compressed_pair<MetroAudioRMSNode *, std::__1::allocator<MetroAudioRMSNode>> {
        struct MetroAudioRMSNode *__first_;
    } __end_cap_;
};

struct vector<MetroBassLineNode, std::__1::allocator<MetroBassLineNode>> {
    struct MetroBassLineNode *__begin_;
    struct MetroBassLineNode *__end_;
    struct __compressed_pair<MetroBassLineNode *, std::__1::allocator<MetroBassLineNode>> {
        struct MetroBassLineNode *__first_;
    } __end_cap_;
};

struct vector<MetroBeat, std::__1::allocator<MetroBeat>> {
    struct MetroBeat *__begin_;
    struct MetroBeat *__end_;
    struct __compressed_pair<MetroBeat *, std::__1::allocator<MetroBeat>> {
        struct MetroBeat *__first_;
    } __end_cap_;
};

struct vector<MetroChordCandidatesNode, std::__1::allocator<MetroChordCandidatesNode>> {
    struct MetroChordCandidatesNode *__begin_;
    struct MetroChordCandidatesNode *__end_;
    struct __compressed_pair<MetroChordCandidatesNode *, std::__1::allocator<MetroChordCandidatesNode>> {
        struct MetroChordCandidatesNode *__first_;
    } __end_cap_;
};

struct vector<MetroChordNode, std::__1::allocator<MetroChordNode>> {
    struct MetroChordNode *__begin_;
    struct MetroChordNode *__end_;
    struct __compressed_pair<MetroChordNode *, std::__1::allocator<MetroChordNode>> {
        struct MetroChordNode *__first_;
    } __end_cap_;
};

struct vector<MetroMelodyNode, std::__1::allocator<MetroMelodyNode>> {
    struct MetroMelodyNode *__begin_;
    struct MetroMelodyNode *__end_;
    struct __compressed_pair<MetroMelodyNode *, std::__1::allocator<MetroMelodyNode>> {
        struct MetroMelodyNode *__first_;
    } __end_cap_;
};

struct vector<MetroMusicalContentNode, std::__1::allocator<MetroMusicalContentNode>> {
    struct MetroMusicalContentNode *__begin_;
    struct MetroMusicalContentNode *__end_;
    struct __compressed_pair<MetroMusicalContentNode *, std::__1::allocator<MetroMusicalContentNode>> {
        struct MetroMusicalContentNode *__first_;
    } __end_cap_;
};

struct vector<MetroRhythmicContentNode, std::__1::allocator<MetroRhythmicContentNode>> {
    struct MetroRhythmicContentNode *__begin_;
    struct MetroRhythmicContentNode *__end_;
    struct __compressed_pair<MetroRhythmicContentNode *, std::__1::allocator<MetroRhythmicContentNode>> {
        struct MetroRhythmicContentNode *__first_;
    } __end_cap_;
};

struct vector<MetroScaleNode, std::__1::allocator<MetroScaleNode>> {
    struct MetroScaleNode *__begin_;
    struct MetroScaleNode *__end_;
    struct __compressed_pair<MetroScaleNode *, std::__1::allocator<MetroScaleNode>> {
        struct MetroScaleNode *__first_;
    } __end_cap_;
};

struct vector<MetroSignKeyNode, std::__1::allocator<MetroSignKeyNode>> {
    struct MetroSignKeyNode *__begin_;
    struct MetroSignKeyNode *__end_;
    struct __compressed_pair<MetroSignKeyNode *, std::__1::allocator<MetroSignKeyNode>> {
        struct MetroSignKeyNode *__first_;
    } __end_cap_;
};

struct vector<MetroSignTimeNode, std::__1::allocator<MetroSignTimeNode>> {
    struct MetroSignTimeNode *__begin_;
    struct MetroSignTimeNode *__end_;
    struct __compressed_pair<MetroSignTimeNode *, std::__1::allocator<MetroSignTimeNode>> {
        struct MetroSignTimeNode *__first_;
    } __end_cap_;
};

struct vector<MetroSwingNode, std::__1::allocator<MetroSwingNode>> {
    struct MetroSwingNode *__begin_;
    struct MetroSwingNode *__end_;
    struct __compressed_pair<MetroSwingNode *, std::__1::allocator<MetroSwingNode>> {
        struct MetroSwingNode *__first_;
    } __end_cap_;
};

struct vector<MetroTempoNode, std::__1::allocator<MetroTempoNode>> {
    struct MetroTempoNode *__begin_;
    struct MetroTempoNode *__end_;
    struct __compressed_pair<MetroTempoNode *, std::__1::allocator<MetroTempoNode>> {
        struct MetroTempoNode *__first_;
    } __end_cap_;
};

struct vector<MetroTuningNode, std::__1::allocator<MetroTuningNode>> {
    struct MetroTuningNode *__begin_;
    struct MetroTuningNode *__end_;
    struct __compressed_pair<MetroTuningNode *, std::__1::allocator<MetroTuningNode>> {
        struct MetroTuningNode *__first_;
    } __end_cap_;
};

struct vector<PointData_t, std::__1::allocator<PointData_t>> {
    struct PointData_t *_field1;
    struct PointData_t *_field2;
    struct __compressed_pair<PointData_t *, std::__1::allocator<PointData_t>> {
        struct PointData_t *_field1;
    } _field3;
};

struct vector<TAbsPureClock, std::__1::allocator<TAbsPureClock>> {
    struct TAbsPureClock *_field1;
    struct TAbsPureClock *_field2;
    struct __compressed_pair<TAbsPureClock *, std::__1::allocator<TAbsPureClock>> {
        struct TAbsPureClock *_field1;
    } _field3;
};

struct vector<TEventInfo, std::__1::allocator<TEventInfo>> {
    struct TEventInfo *__begin_;
    struct TEventInfo *__end_;
    struct __compressed_pair<TEventInfo *, std::__1::allocator<TEventInfo>> {
        struct TEventInfo *__first_;
    } __end_cap_;
};

struct vector<TMusicXMLHarmony, std::__1::allocator<TMusicXMLHarmony>> {
    struct TMusicXMLHarmony *__begin_;
    struct TMusicXMLHarmony *__end_;
    struct __compressed_pair<TMusicXMLHarmony *, std::__1::allocator<TMusicXMLHarmony>> {
        struct TMusicXMLHarmony *__first_;
    } __end_cap_;
};

struct vector<TMusicXMLMeasure, std::__1::allocator<TMusicXMLMeasure>> {
    struct TMusicXMLMeasure *__begin_;
    struct TMusicXMLMeasure *__end_;
    struct __compressed_pair<TMusicXMLMeasure *, std::__1::allocator<TMusicXMLMeasure>> {
        struct TMusicXMLMeasure *__first_;
    } __end_cap_;
};

struct vector<TMusicXMLTimeSignature, std::__1::allocator<TMusicXMLTimeSignature>> {
    struct TMusicXMLTimeSignature *__begin_;
    struct TMusicXMLTimeSignature *__end_;
    struct __compressed_pair<TMusicXMLTimeSignature *, std::__1::allocator<TMusicXMLTimeSignature>> {
        struct TMusicXMLTimeSignature *__first_;
    } __end_cap_;
};

struct vector<TNoteInfo, std::__1::allocator<TNoteInfo>> {
    struct TNoteInfo *_field1;
    struct TNoteInfo *_field2;
    struct __compressed_pair<TNoteInfo *, std::__1::allocator<TNoteInfo>> {
        struct TNoteInfo *_field1;
    } _field3;
};

struct vector<TRegionInfo, std::__1::allocator<TRegionInfo>> {
    struct TRegionInfo *_field1;
    struct TRegionInfo *_field2;
    struct __compressed_pair<TRegionInfo *, std::__1::allocator<TRegionInfo>> {
        struct TRegionInfo *_field1;
    } _field3;
};

struct vector<WeightedGaussian, std::__1::allocator<WeightedGaussian>> {
    struct WeightedGaussian *__begin_;
    struct WeightedGaussian *__end_;
    struct __compressed_pair<WeightedGaussian *, std::__1::allocator<WeightedGaussian>> {
        struct WeightedGaussian *__first_;
    } __end_cap_;
};

struct vector<_LgClipMidiEvent, std::__1::allocator<_LgClipMidiEvent>> {
    struct _LgClipMidiEvent *__begin_;
    struct _LgClipMidiEvent *__end_;
    struct __compressed_pair<_LgClipMidiEvent *, std::__1::allocator<_LgClipMidiEvent>> {
        struct _LgClipMidiEvent *__first_;
    } __end_cap_;
};

struct vector<char, std::__1::allocator<char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int>>> {
    struct pair<int, int> *__begin_;
    struct pair<int, int> *__end_;
    struct __compressed_pair<std::__1::pair<int, int>*, std::__1::allocator<std::__1::pair<int, int>>> {
        struct pair<int, int> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<CGenPatterns>, std::__1::allocator<std::__1::shared_ptr<CGenPatterns>>> {
    shared_ptr_c8a64f46 *_field1;
    shared_ptr_c8a64f46 *_field2;
    struct __compressed_pair<std::__1::shared_ptr<CGenPatterns>*, std::__1::allocator<std::__1::shared_ptr<CGenPatterns>>> {
        shared_ptr_c8a64f46 *_field1;
    } _field3;
};

struct vector<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>, std::__1::allocator<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>>> {
    struct vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>> *_field1;
    struct vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>> *_field2;
    struct __compressed_pair<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>*, std::__1::allocator<std::__1::vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>>>> {
        struct vector<CEvLaunch *, std::__1::allocator<CEvLaunch *>> *_field1;
    } _field3;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct weak_ptr<LGDOCUMENT> {
    struct LGDOCUMENT *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<MATronDrive> {
    struct MATronDrive *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    long long _field2;
    long long _field3;
    id _field4;
} CDStruct_254bb6c4;

typedef struct {
    _Bool isValid;
    long long leftMin;
    long long leftMax;
    long long rightMin;
    long long rightMax;
    long long moveLeftMax;
    long long moveRightMax;
    int moveUpMax;
    int moveDownMax;
} CDStruct_7934c616;

typedef struct {
    unsigned char note;
    unsigned char velocity;
    unsigned char channel;
    unsigned char mb3;
} CDStruct_cf3a1dbf;

typedef struct {
    unsigned int destinationEndpoint;
    unsigned char MIDIChannel;
} CDStruct_efd05b99;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    double _field1[2];
} CDStruct_c4e36f22;

typedef struct {
    CDUnknownFunctionPointerType render;
    CDUnknownFunctionPointerType peek;
    CDUnknownFunctionPointerType setPriming;
    CDUnknownFunctionPointerType isIdle;
    CDUnknownFunctionPointerType startTimeInterval;
    CDUnknownFunctionPointerType endTimeInterval;
} CDStruct_1b89fbd9;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
} CDStruct_4e53fc95;

typedef struct {
    char _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
} CDStruct_25972916;

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
} CDStruct_1b0a96df;

typedef struct {
    char streamType;
    char messageType;
    char messageID;
    char streamID;
    char streamPartID;
    char streamStatus;
    unsigned short packetNr;
} CDStruct_008b722c;

typedef struct {
    char _field1;
    char _field2;
    char _field3;
    char _field4;
} CDStruct_b2f7276a;

typedef struct {
    char _field1;
} CDStruct_2920cfb7;

typedef struct {
    int genCtrlNr;
    unsigned char midiCh;
} CDStruct_5115be14;

typedef struct {
    int startFrame;
    int endFrame;
    _Bool reverse;
    _Bool loop;
    int loopStartFrame;
    int loopEndFrame;
    int loopXFade;
    int numFileFrames;
    int coarseTune;
    int fineTune;
    int keyNote;
} CDStruct_fcdc8ab6;

typedef struct {
    int _field1;
    int _field2;
    short _field3;
} CDStruct_bcba07cc;

typedef struct {
    int Type;
    long long MidiRegionID;
    long long AudioFileID;
    long long AudioRegionID;
} CDStruct_ae571156;

typedef struct {
    long long param;
    _Bool isRelativeChange;
    int minValue;
    int maxValue;
    int curValue;
} CDStruct_8977d9ea;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long _field1;
    long long _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    unsigned short _field10;
} CDStruct_66cc36f5;

typedef struct {
    long long _field1;
    long long _field2;
    int _field3;
} CDStruct_8a6d1c2f;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    int _field8;
} CDStruct_db489c38;

typedef struct {
    long long selLeft;
    long long selRight;
    long long indicatorLeft;
    long long indicatorRight;
    int lowestNote;
    int highestNote;
    long long draggedCorner;
    _Bool fShowIndicatorLines;
} CDStruct_f57c2985;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
} CDStruct_d20431f8;

typedef struct {
    long long beatsPerBar;
    long long beatDenom;
    long long formatDenom;
} CDStruct_e28e794b;

typedef struct {
    long long start;
    long long end;
} CDStruct_b40ec427;

typedef struct {
    _Bool isInitialized;
    int gridType;
    float labelWidth;
    struct _Df_TimeGridDrawInfoList_t *timeGridEntries;
    struct _Df_TimeGridDrawInfoList_t *biggestTimeGridEntry;
    struct _Df_BarGridDrawInfoList_t *barGridEntries;
} CDStruct_3a9866bf;

typedef struct {
    long long clockPos;
    float pos;
    long long clockLength;
    float length;
    struct CGPoint mousePos;
} CDStruct_f0737623;

typedef struct {
    CDStruct_198678f7 _field1;
    CDStruct_198678f7 _field2;
} CDStruct_3c1748cc;

typedef struct {
    CDStruct_e28e794b _field1;
    int _field2;
    _Bool _field3;
    int _field4;
} CDStruct_2e0d3620;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    int trackNr;
    int folderID;
} CDStruct_3d4e291e;

typedef struct CMetroAnalyzer<CMetroInputModuleModuleSRC> {
    CDUnknownFunctionPointerType *_field1;
    struct CMultiDimRingBuffer<float> _field2;
    struct vector<float, std::__1::allocator<float>> _field3;
    struct CMetroInputModuleModuleSRC _field4;
    id _field5;
    id _field6;
    id _field7;
    int _field8;
    double _field9;
    double _field10;
    double _field11;
    _Bool _field12;
    int _field13;
    long long _field14;
    unsigned long long _field15;
    _Bool _field16;
    float _field17;
    _Bool _field18;
    struct Delegate *_field19;
    id _field20;
} CMetroAnalyzer_54fbe830;

typedef struct RbRecReadChunk<float> {
    int _field1;
    float *_field2;
    long long _field3;
} RbRecReadChunk_804bdac0;

typedef struct __wrap_iter<CGenGenreLib *> {
    struct CGenGenreLib *_field1;
} __wrap_iter_f0813f3a;

typedef struct __wrap_iter<CGenInstLib *> {
    struct CGenInstLib *_field1;
} __wrap_iter_3807ba2b;

typedef struct auto_ptr<const IGenInstNoteNrHelper> {
    struct IGenInstNoteNrHelper *__ptr_;
} auto_ptr_9f8f0b23;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct bitset<4> {
    unsigned long long __first_;
} bitset_dc343b9a;

typedef struct list<const CTrack *, std::__1::allocator<const CTrack *>> {
    struct __list_node_base<const CTrack *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const CTrack *, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_87e0eb21;

typedef struct map<int, GView *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, GView *>>> {
    struct __tree<std::__1::__value_type<int, GView *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, GView *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, GView *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, GView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, GView *>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_ff87a840;

typedef struct map<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<CGenPatterns>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_804e6146;

typedef struct multimap<long, GAutoSync *, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, GAutoSync *>>> {
    struct __tree<std::__1::__value_type<long, GAutoSync *>, std::__1::__map_value_compare<long, std::__1::__value_type<long, GAutoSync *>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, GAutoSync *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, GAutoSync *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, GAutoSync *>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multimap_47412a0d;

typedef struct shared_ptr<CGenPatterns> {
    struct CGenPatterns *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c8a64f46;

typedef struct shared_ptr<MATronDrive> {
    struct MATronDrive *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_974285fc;

typedef struct vector<CGenRange<double>, std::__1::allocator<CGenRange<double>>> {
    struct CGenRange<double> *__begin_;
    struct CGenRange<double> *__end_;
    struct __compressed_pair<CGenRange<double>*, std::__1::allocator<CGenRange<double>>> {
        struct CGenRange<double> *__first_;
    } __end_cap_;
} vector_26e016ee;

typedef struct vector<CRegion *, std::__1::allocator<CRegion *>> {
    struct CRegion **_field1;
    struct CRegion **_field2;
    struct __compressed_pair<CRegion **, std::__1::allocator<CRegion *>> {
        struct CRegion **_field1;
    } _field3;
} vector_e75b7d21;

typedef struct vector<CVirtualTrack, std::__1::allocator<CVirtualTrack>> {
    struct CVirtualTrack *_field1;
    struct CVirtualTrack *_field2;
    struct __compressed_pair<CVirtualTrack *, std::__1::allocator<CVirtualTrack>> {
        struct CVirtualTrack *_field1;
    } _field3;
} vector_e94a763c;

typedef struct vector<MATronDriveEvent, std::__1::allocator<MATronDriveEvent>> {
    struct MATronDriveEvent *__begin_;
    struct MATronDriveEvent *__end_;
    struct __compressed_pair<MATronDriveEvent *, std::__1::allocator<MATronDriveEvent>> {
        struct MATronDriveEvent *__first_;
    } __end_cap_;
} vector_79368cc7;

typedef struct vector<TAbsPureClock, std::__1::allocator<TAbsPureClock>> {
    struct TAbsPureClock *_field1;
    struct TAbsPureClock *_field2;
    struct __compressed_pair<TAbsPureClock *, std::__1::allocator<TAbsPureClock>> {
        struct TAbsPureClock *_field1;
    } _field3;
} vector_92e605ca;

typedef struct vector<TMusicXMLMeasure, std::__1::allocator<TMusicXMLMeasure>> {
    struct TMusicXMLMeasure *__begin_;
    struct TMusicXMLMeasure *__end_;
    struct __compressed_pair<TMusicXMLMeasure *, std::__1::allocator<TMusicXMLMeasure>> {
        struct TMusicXMLMeasure *__first_;
    } __end_cap_;
} vector_3a6dcf99;

typedef struct vector<TRegionInfo, std::__1::allocator<TRegionInfo>> {
    struct TRegionInfo *_field1;
    struct TRegionInfo *_field2;
    struct __compressed_pair<TRegionInfo *, std::__1::allocator<TRegionInfo>> {
        struct TRegionInfo *_field1;
    } _field3;
} vector_963f8eea;

typedef struct vector<_LgClipMidiEvent, std::__1::allocator<_LgClipMidiEvent>> {
    struct _LgClipMidiEvent *__begin_;
    struct _LgClipMidiEvent *__end_;
    struct __compressed_pair<_LgClipMidiEvent *, std::__1::allocator<_LgClipMidiEvent>> {
        struct _LgClipMidiEvent *__first_;
    } __end_cap_;
} vector_e4c77c11;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__first_;
    } __end_cap_;
} vector_e0f2bd7e;

typedef struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int>>> {
    struct pair<int, int> *__begin_;
    struct pair<int, int> *__end_;
    struct __compressed_pair<std::__1::pair<int, int>*, std::__1::allocator<std::__1::pair<int, int>>> {
        struct pair<int, int> *__first_;
    } __end_cap_;
} vector_6541f396;

typedef struct vector<std::__1::shared_ptr<CGenPatterns>, std::__1::allocator<std::__1::shared_ptr<CGenPatterns>>> {
    shared_ptr_c8a64f46 *_field1;
    shared_ptr_c8a64f46 *_field2;
    struct __compressed_pair<std::__1::shared_ptr<CGenPatterns>*, std::__1::allocator<std::__1::shared_ptr<CGenPatterns>>> {
        shared_ptr_c8a64f46 *_field1;
    } _field3;
} vector_8dba8fe8;

