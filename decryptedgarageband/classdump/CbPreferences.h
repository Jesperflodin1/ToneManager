//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DfPreferences.h"

@class NSArray, NSLock, NSString, NSURL;

@interface CbPreferences : DfPreferences
{
    _Bool m_isSharedFactoryLibrary;
    NSString *factoryLibraryFolder;
    NSString *userApplicationSupportFolder;
    NSString *userDocumentsDirectory;
    NSString *legacyUserDocumentsDirectory;
    NSString *userMiscAppDataDirectory;
    NSString *userInstrLibFolder;
    NSString *userSoftTrackSettingsFolder;
    NSString *userLoopIndexFile;
    NSString *userLoopJamPackFolder;
    NSString *userSharingFolder;
    _Bool _allowBgAudioForAudioBusOrInterappAudio;
    NSLock *_setLastSongBookmarkLock;
    NSLock *_lastSongBookmarkLock;
    _Bool _isFirstLaunchAfterInstallOrUpdate;
    _Bool _allowAutoDownloadForNextSongToOpen;
    _Bool _debugContent_AllowToOpenSongWithMissingContent;
    _Bool _debugContent_UseCupertinoLocServer;
    _Bool _debugContent_EnableIAPContentDownload;
    _Bool _debugContent_UseItunesIAPContent;
    NSURL *_songDocURLForCurrentQuickAction;
}

+ (CDStruct_d20431f8)extractVersionNumbersFromAppVersionString:(id)arg1;
+ (id)sharedPreferences;
@property(nonatomic) _Bool debugContent_UseItunesIAPContent; // @synthesize debugContent_UseItunesIAPContent=_debugContent_UseItunesIAPContent;
@property(nonatomic) _Bool debugContent_EnableIAPContentDownload; // @synthesize debugContent_EnableIAPContentDownload=_debugContent_EnableIAPContentDownload;
@property(nonatomic) _Bool debugContent_UseCupertinoLocServer; // @synthesize debugContent_UseCupertinoLocServer=_debugContent_UseCupertinoLocServer;
@property(nonatomic) _Bool debugContent_AllowToOpenSongWithMissingContent; // @synthesize debugContent_AllowToOpenSongWithMissingContent=_debugContent_AllowToOpenSongWithMissingContent;
@property(nonatomic) _Bool allowAutoDownloadForNextSongToOpen; // @synthesize allowAutoDownloadForNextSongToOpen=_allowAutoDownloadForNextSongToOpen;
@property(retain, nonatomic) NSURL *songDocURLForCurrentQuickAction; // @synthesize songDocURLForCurrentQuickAction=_songDocURLForCurrentQuickAction;
@property(nonatomic) _Bool isFirstLaunchAfterInstallOrUpdate; // @synthesize isFirstLaunchAfterInstallOrUpdate=_isFirstLaunchAfterInstallOrUpdate;
@property(copy, nonatomic) NSString *userSoftTrackSettingsFolder; // @synthesize userSoftTrackSettingsFolder;
@property(copy, nonatomic) NSString *userInstrLibFolder; // @synthesize userInstrLibFolder;
@property(copy, nonatomic) NSString *userMiscAppDataDirectory; // @synthesize userMiscAppDataDirectory;
@property(copy, nonatomic) NSString *userDocumentsDirectory; // @synthesize userDocumentsDirectory;
@property(copy, nonatomic) NSString *legacyUserDocumentsDirectory; // @synthesize legacyUserDocumentsDirectory;
@property(copy, nonatomic) NSString *userApplicationSupportFolder; // @synthesize userApplicationSupportFolder;
@property(readonly, nonatomic, getter=isUsingSharedLibrary) _Bool usingSharedLibrary; // @synthesize usingSharedLibrary=m_isSharedFactoryLibrary;
@property(copy, nonatomic) NSString *factoryLibraryFolder; // @synthesize factoryLibraryFolder;
- (void).cxx_destruct;
- (void)_ensureDefaultBusyThreadSettingIfNeeded;
- (_Bool)showsChineseInstruments;
- (void)setShowsChineseInstruments:(_Bool)arg1;
- (_Bool)isChineseLanguage;
- (_Bool)isChineseUser;
- (_Bool)chineseKeyboardsEnabled;
- (_Bool)shouldOpenInputMenuAsPopover;
- (_Bool)shouldOpenPopoverAsFormSheet;
- (_Bool)shouldOpenSettingsAsPopover;
- (_Bool)shouldOpenSongPartsAsPopover;
- (_Bool)shouldOpenMediaImportAsPopover;
- (_Bool)usePopoverWhenPossible;
- (void)setShouldShowAudioFileImportNewFilesBadge:(_Bool)arg1;
- (_Bool)shouldShowAudioFileImportNewFilesBadge;
- (long long)audioFileImportCachedNewSupportedFilesCount;
- (void)setAudioFileImportCachedNewSupportedFilesCount:(long long)arg1;
- (long long)audioFileImportCachedSupportedFilesCount;
- (void)setAudioFileImportCachedSupportedFilesCount:(long long)arg1;
- (_Bool)showPitchModeMarkers;
- (_Bool)isSamplerContentInstalled;
- (void)setSamplerContentInstalled:(_Bool)arg1;
- (_Bool)restoreDemoSongs;
- (void)setRestoreDemoSongs:(_Bool)arg1;
- (_Bool)restoreFactoryContent;
- (void)setRestoreFactoryContent:(_Bool)arg1;
- (_Bool)restoreFactoryDefaults;
- (void)setRestoreFactoryDefaults:(_Bool)arg1;
- (_Bool)firstTimeRun;
- (void)setDemoSongDownloaded:(_Bool)arg1;
- (_Bool)demoSongDownloaded;
- (_Bool)isRunningInStore;
- (id)userRetailStoreDocumentsFolder;
- (_Bool)liveBlurAllowedForTrackPanel;
- (_Bool)liveBlurAllowedForInstrumentBrowser;
- (_Bool)backgroundBlurAllowed;
- (id)animatableInstruments;
- (id)lastSelectedContentModeInInstrumentBrowser;
- (void)setLastSelectedContentModeInInstrumentBrowser:(id)arg1;
- (id)lastSelectedGridInInstrumentBrowser;
- (void)setLastSelectedGridInInstrumentBrowser:(id)arg1;
- (id)lastSelectedAudioUnitPageInInstrumentBrowser;
- (void)setLastSelectedAudioUnitPageInInstrumentBrowser:(id)arg1;
- (id)lastSelectedInterappAudioPageInInstrumentBrowser;
- (void)setLastSelectedInterappAudioPageInInstrumentBrowser:(id)arg1;
- (id)lastSelectedInstrumentInInstrumentBrowser;
- (void)setLastSelectedInstrumentInInstrumentBrowser:(id)arg1;
- (_Bool)monitoringAlertHasBeenShown;
- (void)setMonitoringAlertHasBeenShownFlag:(_Bool)arg1;
- (_Bool)isInputEQEnabled;
- (void)setInputEQEnabled:(_Bool)arg1;
- (id)easySamplerLibrarySamplerInstrumentsPath:(_Bool)arg1;
- (id)easySamplerLibrarySamplerFilesPath:(_Bool)arg1;
- (id)ultrabeatUserSampleFilesPath:(_Bool)arg1;
- (id)albumName;
- (id)composerName;
- (id)artistName;
- (id)albumNameIfExists;
- (id)composerNameIfExists;
- (id)artistNameIfExists;
- (id)userName;
- (_Bool)avoidSpacedNames;
- (void)setLastAppVersionStringForRecentInputMethodsDataCache:(id)arg1;
- (id)lastAppVersionStringForRecentInputMethodsDataCache;
- (void)setExportSettingsKey:(id)arg1;
- (id)exportSettingsKey;
- (void)setUseCoverArtwork:(_Bool)arg1;
- (_Bool)useCoverArtwork;
- (void)setCoverArtworkChanged:(_Bool)arg1;
- (_Bool)coverArtworkChanged;
- (double)autoFreezeSampleTime;
- (void)setAutoFreezeSampleTime:(double)arg1;
- (double)autoFreezeCPUDeltaPerTrack;
- (void)setAutoFreezeCPUDeltaPerTrack:(double)arg1;
- (double)autoFreezeGlobalMiniumValue;
- (void)setAutoFreezeGlobalMiniumValue:(double)arg1;
- (double)autoFreezeTrackMiniumValue;
- (void)setAutoFreezeTrackMiniumValue:(double)arg1;
- (_Bool)debug_resetFreezeFlagsOnSongLoad;
- (_Bool)isAutomaticFreezeEnabled;
- (void)setDidForceLoopReindex:(_Bool)arg1;
- (_Bool)didForceLoopReindex;
- (_Bool)lastSearchForFavoritesState;
- (void)setLastSearchForFavoritesState:(_Bool)arg1;
- (id)lastFileSearchText;
- (void)setLastFileSearchText:(id)arg1;
- (id)lastLoopSearchText;
- (void)setLastLoopSearchText:(id)arg1;
- (id)lastDraggedIndexPath;
- (void)setLastDraggedIndexPath:(id)arg1;
- (id)lastSelectedDescriptors;
- (void)setLastSelectedDescriptors:(id)arg1;
- (id)lastSelectedGenres;
- (void)setLastSelectedGenres:(id)arg1;
- (id)lastSelectedInstrument;
- (void)setLastSelectedInstrument:(id)arg1;
- (void)setLastSelectedInstrumentBrowserInfos:(id)arg1;
- (id)lastSelectedInstrumentBrowserInfos;
- (_Bool)isMoreControlsEnabled;
- (void)setMoreControlsEnabled:(_Bool)arg1;
- (int)numberOfInstrumentTracks;
- (int)numberOfAudioTracks;
- (_Bool)isAudioOutputOnlySession;
- (void)setAudioOutputOnlySession:(_Bool)arg1;
- (void)setAudioLatency:(int)arg1;
- (int)audioLatency;
- (int)numVoicesIntValue;
- (void)setNumVoicesIntValue:(int)arg1;
@property(nonatomic) _Bool enableAutomaticNonDestructiveLUFSNormalization;
@property(nonatomic) _Bool storeWelcomeScreenShown;
@property(nonatomic) _Bool jamSessionCompatibilityAlertShown;
@property(readonly, nonatomic) _Bool useAutomaticSectionLengthInSongCreation;
@property(readonly, nonatomic) _Bool useReducedNumOfInstruments;
- (id)audiobusURLScheme;
- (double)autoSaveOnProgress_LastSaveTimeInterval;
- (long long)maxAllowedAlchemyTracks;
- (long long)maxAllowedDrummerTracks;
- (long long)maxAllowedTracks;
- (void)setArrangeHasBeenUsedForAddingFiles:(_Bool)arg1;
- (_Bool)arrangeHasBeenUsedForAddingFiles;
- (_Bool)demoSongAuthoringModeEnabled;
- (_Bool)authoringModeEnabled;
- (_Bool)debug_scriptingModeEnabled;
- (_Bool)debug_disableMetalBackgroundBlur;
- (_Bool)debug_stepSequencerEnableAuthoring;
- (_Bool)debug_mark_code_translations;
- (_Bool)debug_fake_chinese_translation;
- (_Bool)debug_delete_loops_cache_on_startup;
- (_Bool)debug_ForceMiniArrangeStyle_Arrange_InCellRecordingMode;
- (_Bool)debug_use_tron_metronome;
- (_Bool)debug_tron_allow_play_scrolling;
- (_Bool)debug_tron_animate_cellState_status;
- (_Bool)debug_update_tron_at_60fps;
- (_Bool)debug_show_tron_touch_radius;
- (_Bool)debug_show_grid_import_from_regions;
- (_Bool)debug_show_grid_file_tab;
- (_Bool)debug_ForceOldCellRecordingEngine;
- (_Bool)debug_GridReviewAuthoringModeEnabled;
- (_Bool)debug_GridAuthoringModeEnabled;
- (_Bool)debug_canImportMIDIFiles;
- (_Bool)debug_showStartupWhatsNewScreen;
- (_Bool)debug_showStartupWelcomeScreen;
- (void)debug_setCustomUpgradeURLString:(id)arg1;
- (id)debug_customUpgradeURLString;
- (_Bool)debug_resetUpgradeChecks;
- (void)debug_setResetUpgradeChecks:(_Bool)arg1;
- (_Bool)debug_useDebugUpgradePlist;
- (_Bool)debug_useExpressionForIntensity;
- (_Bool)debug_smartStringHighlightDisabled;
- (_Bool)debug_disableMidiClockPatternMode;
- (_Bool)debug_useZippedMIDI;
- (_Bool)debug_saveUserSettingAsPatch;
- (_Bool)debug_saveAuthoringSettingAsPatch;
- (_Bool)debug_switchMonitoringAlert;
- (_Bool)debug_enableMetronomFlash;
- (_Bool)debug_copyExportedFilesToSharingArea;
- (_Bool)debug_disableAudioFileImportScanner;
- (_Bool)debug_mobileGuideDisabled;
- (_Bool)debug_disableReachabilityCheck;
- (_Bool)debug_logFreezeEnable;
- (_Bool)debug_exsTrackFreezeEnabled;
- (_Bool)debug_helpDebugModeEnabled;
- (_Bool)debug_ShowOverloadAlert;
- (_Bool)debug_disableMultiThreadedSongCreationAndLoading;
- (int)debug_memoryLeakTestNumber;
- (_Bool)shouldResetPreferences;
- (void)setUsingMeasurementMode:(_Bool)arg1;
- (_Bool)isUsingMeasurementMode;
- (void)setUsingDebugSettings:(_Bool)arg1;
- (_Bool)isUsingDebugSettings;
@property(readonly, nonatomic) _Bool debugRemoveAPDCache;
@property(readonly, nonatomic) _Bool debugBatteryStressTest;
- (_Bool)audioUnitsEnabled;
- (_Bool)alchemyEnabled;
- (_Bool)drummerEnabled;
- (_Bool)gridEnabled;
- (_Bool)remixToolsEnabled;
- (_Bool)backgroundAudioEnabled;
- (void)setAllowBackgroundAudioForAudioBusOrInterappAudio:(_Bool)arg1;
- (_Bool)allowBackgroundAudioForAudioBusOrInterappAudio;
- (_Bool)allowBackgroundAudioUserPref;
- (void)setAllowBackgroundAudioUserPref:(_Bool)arg1;
- (_Bool)backgroundAudioSupported;
- (_Bool)showEmptyArrange;
- (long long)debugMemoryLevel;
- (_Bool)shouldShowMemoryWarnings;
- (void)setShowDebugControls:(_Bool)arg1;
- (_Bool)showDebugControls;
@property(readonly, nonatomic) NSString *logFilePath;
- (id)newAvailableLoopBundleID;
- (void)setNewAvailableLoopBundleID:(id)arg1;
- (void)setAdditionalGenreKeywords:(id)arg1;
- (id)additionalGenreKeywords;
- (void)setPreviouslyInstalledContentBundleIDs:(id)arg1;
- (id)previouslyInstalledContentBundleIDs;
- (id)additionalContentDownloadContentPListName;
- (id)additionalContentDownloadContentBaseURL;
- (id)additionalContentDownloadRSSBaseURL;
- (id)additionalContentDownloadBaseURL;
- (_Bool)debugContent_UseLiveServer;
@property(nonatomic) _Bool changedContentServerToProduction;
@property(nonatomic) _Bool debugContent_UseCupertinoServer;
@property(nonatomic) _Bool debugContent_UseRellingenServer;
@property(nonatomic) _Bool debugContent_ResetNewContentBadges;
@property(nonatomic) _Bool debugContent_ShowAdditionalContentBundleVersion;
- (_Bool)debugContent_ShouldClearAdditionalContentAndResetBit;
@property(nonatomic) _Bool debugContent_EnableTower;
- (void)updateSpecialContentVersion;
- (void)setDebugContent_SpecialContentBundleVersion:(id)arg1;
- (id)debugContent_SpecialContentBundleVersion;
- (id)pathForIapContentContentBundlePlistWithIdentifier:(id)arg1;
- (id)iapContentBundleIdentifierForProductID:(id)arg1;
- (id)iapContentRootFolder;
- (void)setDebugShowDateOniPhone:(_Bool)arg1;
- (_Bool)debugShowDateOniPhone;
- (_Bool)debugLogICloudData;
@property(nonatomic) _Bool lastDeviceICloudSettingOn;
@property(readonly, nonatomic) _Bool useICloud;
- (void)setUseICloudWithoutPostingNotification:(_Bool)arg1;
- (_Bool)hideAudiobusFunctionality;
- (_Bool)hideThirdPartySharing;
- (_Bool)isMultiUserDevice;
- (id)_userMacHomeDirectory;
- (id)interSongClipboardFolder;
@property(readonly, copy, nonatomic) NSString *userLoopIndexFile;
@property(readonly, copy, nonatomic) NSString *userSharingFolder;
@property(readonly, copy, nonatomic) NSString *userLoopsJamPacksFolder;
@property(readonly, copy, nonatomic) NSString *factoryStepSequencerRowModelsFolder;
- (id)factoryStepSequencerPatternsFolder:(id)arg1;
@property(readonly, copy, nonatomic) NSString *factoryDrumsContentMappingFolder;
- (id)allStepSequencerRowModelsFolders;
- (id)allStepSequencerPatternsFolders:(id)arg1;
- (id)allDrumsContentMappingFolders;
@property(readonly, copy, nonatomic) NSString *factoryGridsFolder;
- (id)allGuitarAmpSpecialAudioFolders;
@property(readonly, copy, nonatomic) NSString *factoryGuitarAmpSpecialAudioFolder;
- (id)allDefaultMetronomeFullPaths;
@property(readonly, copy, nonatomic) NSString *defaultMetronomeFullPath;
- (id)allMetronomeSettingsFolders;
- (id)allSoftTrackSettingsFolders;
- (id)allTrackSettingsFolders;
@property(readonly, copy, nonatomic) NSString *factoryMetronomeSettingsFolder;
- (id)allEasySamplerFolders;
@property(readonly, copy, nonatomic) NSString *factoryDrumsGenreCharacterMap;
@property(readonly, copy, nonatomic) NSString *factoryDrumsGeneratorLib;
@property(readonly, copy, nonatomic) NSString *ultraBeatSamplesFolder;
@property(readonly, copy, nonatomic) NSString *factoryEasySamplerFolder;
- (id)allTouchInstrumentContentFolders;
@property(readonly, copy, nonatomic) NSString *factoryTouchInstrumentContentFolder;
- (id)allDemoSongsFolders;
@property(readonly, copy, nonatomic) NSString *factoryDemoSongsFolder;
- (id)allMIDIFilesFolders;
@property(readonly, copy, nonatomic) NSString *factoryMIDIFilesFolder;
- (id)allTemplatesFolderNewInstruments;
@property(readonly, copy, nonatomic) NSString *factoryTemplatesFolderNewInstrument;
- (id)allTemplatesFolderNewProjects;
@property(readonly, copy, nonatomic) NSString *factoryTemplatesFolderNewProject;
- (id)allInstrTemplatesFolders;
- (id)factoryInstrTemplatesFolder;
- (id)allInstrLibFolders;
@property(readonly, copy, nonatomic) NSString *factoryInstrLibFolder;
- (id)allGridsFolders;
@property(readonly, copy, nonatomic) NSArray *allLoopIndexFiles;
@property(readonly, copy, nonatomic) NSString *factoryLoopIndexFile;
- (id)allLoopLibraryFolders;
@property(readonly, copy, nonatomic) NSString *factoryLoopLibraryFolder;
- (id)allContentFoldersForPathComponent:(id)arg1 libBundlesOnly:(_Bool)arg2 includeOldIAP:(_Bool)arg3;
- (id)allContentFoldersForPathComponent:(id)arg1 libBundlesOnly:(_Bool)arg2;
- (id)allContentFoldersForPathComponent:(id)arg1;
- (id)appendPathComponent:(id)arg1 toFolders:(id)arg2 localized:(_Bool)arg3;
- (id)allContentFolders;
- (id)pathForAdditionalContentBundleIdentifier:(id)arg1;
- (id)pathForAdditionalContentBundlePlistWithIdentifier:(id)arg1;
- (id)additionalContentRootFolder;
@property(readonly, nonatomic) _Bool inAppLibraryExists;
@property(readonly, nonatomic) _Bool developmentLibraryExists;
- (id)basicContentBundleName;
@property(readonly, nonatomic) NSString *remoteClipboardDirectory;
@property(readonly, nonatomic) NSString *tempDirectory;
@property(readonly, nonatomic) NSString *preferencesDirectory;
@property(readonly, nonatomic) NSString *sandboxLibraryDirectory;
@property(readonly, nonatomic) NSString *sharedImExportFilesDirectory;
@property(readonly, nonatomic) NSString *sharedImExportFilesFolderName;
@property(readonly, nonatomic) NSString *sharedDocumentsDirectory;
@property(readonly, nonatomic) NSString *sandboxDocumentsDirectory;
@property(readonly, nonatomic) NSString *applicationBundleDirectory;
@property(readonly, nonatomic) NSString *sandboxHomeDirectory;
- (void)setSharingAreaMigrationDone;
- (_Bool)sharingAreaMigrationDone;
- (void)setDocManagerMigrationDone;
- (_Bool)docManagerMigrationDone;
@property(nonatomic) long long docBrowserLocationsExplanationDialogStatus;
@property(nonatomic) long long docBrowserMigrationInfoStatus;
@property(nonatomic) int lastOpenViewId;
- (id)lastSongBookmark;
- (void)setLastSongBookmark:(id)arg1;
@property(readonly, nonatomic) NSArray *recentlyOpenedSongBookmarks;
- (void)_updateRecentlyOpenedSongBookmarks:(id)arg1 songName:(id)arg2;
- (void)cleanupRecentlyOpenedSongBookmarks;
@property(readonly, nonatomic) NSArray *recentlyOpenedSongDocumentIDs;
- (void)_updateRecentlyOpenedSongDocumentIDsWithDocID:(id)arg1;
@property(readonly, nonatomic) _Bool openLastSongAtStart;
@property(readonly, nonatomic) NSURL *audioUnitsStoreURL;
@property(readonly, nonatomic) NSString *appStoreID;
@property(readonly, nonatomic) _Bool deviceHasLimitedCapabilities;
- (int)compareRunningAppVersionNumberToVersionNumberString:(id)arg1;
@property(retain, nonatomic) NSString *appVersionForWhichStartupScreenWasLastShown;
@property(readonly, nonatomic) NSString *originalAppVersion;
@property(readonly, nonatomic) NSString *appVersion;
@property(readonly, nonatomic) NSString *appShortBundleVersion;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)init;
- (void)resetPreferences;
- (void)_init;
- (_Bool)_addSkipBackupAttributeToItemAtPath:(id)arg1;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (void)_createDirAtPath:(id)arg1;
- (void)_writeContentVersion;
- (void)_writeAppVersion;
- (void)_updateOriginalPurchasedVersion:(id)arg1;
- (void)_writeOriginalPurchasedVersion:(id)arg1;
- (void)setExportAudioQuality:(unsigned long long)arg1;
- (unsigned long long)exportAudioQuality;

@end

