//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CbSIIMFretboardModel, CbSIIMFretboardView, CbSIIMFretsAndComperInstrumentController, NSArray;

@interface CbSIIMFretboardController : NSObject
{
    CbSIIMFretsAndComperInstrumentController *_rigController;
    CbSIIMFretboardView *_fretboardView;
    CbSIIMFretboardModel *_fretboardModel;
    float _tremoloMaxPitchBend;
    double _scaleLength;
    NSArray *_openStringNotes;
    int _pitchBendBaseValue;
    int _pitchBendIncrement;
    _Bool _easyMode;
    _Bool _fretlessMode;
    _Bool _stringBendEnabled;
    _Bool _hasTapLayer;
    int _midiMonoBaseChannel;
    long long _midiMonoBendRange;
    double _instrumentPitchBendRange;
}

@property(readonly) double instrumentPitchBendRange; // @synthesize instrumentPitchBendRange=_instrumentPitchBendRange;
@property(readonly) int pitchBendIncrement; // @synthesize pitchBendIncrement=_pitchBendIncrement;
@property(readonly) int pitchBendBaseValue; // @synthesize pitchBendBaseValue=_pitchBendBaseValue;
@property(nonatomic) int midiMonoBaseChannel; // @synthesize midiMonoBaseChannel=_midiMonoBaseChannel;
@property(nonatomic) long long midiMonoBendRange; // @synthesize midiMonoBendRange=_midiMonoBendRange;
@property(nonatomic) _Bool hasTapLayer; // @synthesize hasTapLayer=_hasTapLayer;
@property(nonatomic) _Bool stringBendEnabled; // @synthesize stringBendEnabled=_stringBendEnabled;
@property(nonatomic) _Bool fretlessMode; // @synthesize fretlessMode=_fretlessMode;
@property(nonatomic) _Bool easyMode; // @synthesize easyMode=_easyMode;
@property(retain) NSArray *openStringNotes; // @synthesize openStringNotes=_openStringNotes;
@property(nonatomic) double scaleLength; // @synthesize scaleLength=_scaleLength;
@property(retain) CbSIIMFretboardView *fretboardView; // @synthesize fretboardView=_fretboardView;
@property(nonatomic) CbSIIMFretsAndComperInstrumentController *rigController; // @synthesize rigController=_rigController;
@property(retain, nonatomic) CbSIIMFretboardModel *fretboardModel; // @synthesize fretboardModel=_fretboardModel;
- (void).cxx_destruct;
- (void)stopAllStrings;
- (void)_processPitchBendWithTouch:(id)arg1 touchLocation:(struct CGPoint)arg2 stringIndex:(long long)arg3 fretIndex:(long long)arg4;
- (void)sendPitchbend:(int)arg1 mb3:(unsigned char)arg2 toChannel:(int)arg3 forStringModel:(id)arg4;
- (void)resetPitchbendForStringModel:(id)arg1 mb3:(unsigned char)arg2;
- (void)sendNoteOff:(int)arg1 toInstrumentID:(int)arg2 mb3:(unsigned char)arg3 toChannel:(int)arg4;
- (void)sendNoteOn:(int)arg1 toInstrumentID:(int)arg2 withVelocity:(unsigned char)arg3 mb3:(unsigned char)arg4 toChannel:(int)arg5;
- (id)debugStringForArticulation:(long long)arg1;
- (_Bool)shouldUseTapChannelForArticulation:(long long)arg1;
- (unsigned char)mb3ForArticulation:(long long)arg1;
- (int)minNoteVelocity;
- (int)maxNoteVelocity;
- (void)_actuateString:(id)arg1 withViewAtIndex:(unsigned long long)arg2 fretIndex:(unsigned long long)arg3 withNoteValue:(unsigned long long)arg4 forTouch:(id)arg5 withDecay:(_Bool)arg6 articulation:(long long)arg7 forcedVelocity:(unsigned char)arg8;
- (void)_actuateString:(id)arg1 withViewAtIndex:(unsigned long long)arg2 fretIndex:(unsigned long long)arg3 withNoteValue:(unsigned long long)arg4 forTouch:(id)arg5 withDecay:(_Bool)arg6 articulation:(long long)arg7;
- (void)_stopString:(id)arg1 withViewAtIndex:(unsigned long long)arg2 resetPitchbend:(_Bool)arg3 alsoResetView:(_Bool)arg4;
- (unsigned long long)_intervalForScaleDegree:(unsigned long long)arg1 withTonicNoteValue:(unsigned long long)arg2;
- (unsigned long long)noteValueForString:(id)arg1 andFretIndex:(unsigned long long)arg2;
- (void)removeTouchFromNeckStrings:(id)arg1;
- (void)stopStrumForStringAtIndex:(long long)arg1;
- (void)touchNeckStringAtIndex:(long long)arg1 atFretIndex:(long long)arg2 forTouch:(id)arg3 touchesMoved:(_Bool)arg4;
- (void)dealloc;
- (id)init;
- (void)_syncBendRangeWithSmartSettings;

@end

