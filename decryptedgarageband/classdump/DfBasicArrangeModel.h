//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"

@class DfChord, DfClip, DfDocument, DfEvent, DfFlexMarker, DfMarker, DfObjectSolo, DfRegion, DfTrack, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, UIImage;

@interface DfBasicArrangeModel : NSObject <NSCoding>
{
    DfDocument *m_Document;
    int m_MainFolderID;
    _Bool m_MainFolderIsRootFolder;
    DfRegion *m_MainFolderRegion;
    _Bool m_IsChangingMainFolder;
    NSMutableDictionary *m_TracksDict;
    NSMutableDictionary *m_RootTracksDict;
    NSMutableArray *m_TracksArray;
    NSMutableArray *m_VisibleTracksArray;
    NSMutableArray *m_VisibleRootTracksArray;
    NSMutableArray *m_MainAndRootAndSpecialTracks;
    NSMutableArray *m_RootTracksArray;
    NSMutableArray *m_RootRegions;
    NSMutableArray *m_Regions;
    NSMutableSet *m_SelectedRegions;
    NSMutableSet *m_SelectedRootRegions;
    NSMutableSet *m_AutomaticLoopedRegions;
    NSMutableArray *m_RecordingRegions;
    NSMutableArray *m_Markers;
    NSMutableArray *m_TimeSignatures;
    NSMutableArray *m_Chords;
    DfTrack *m_MasterTrack;
    DfTrack *m_MediaTrack;
    DfTrack *m_ghostTrack;
    DfTrack *m_CurrentTrack;
    DfTrack *m_preCurrentTrack;
    DfTrack *m_preCurrentSamplerTrack;
    DfRegion *m_CurrentRegion;
    DfMarker *m_CurrentMarker;
    DfEvent *m_CurrentEvent;
    unsigned long long m_CurrentEventIndex;
    DfFlexMarker *m_CurrentFlexMarker;
    long long m_CurrentSnapClock;
    long long m_SelectionClock[3];
    unsigned int m_hasSelectedObjects:1;
    CDStruct_b40ec427 m_VisibleClockRange[3];
    CDStruct_7934c616 m_RegionEditLimits;
    unsigned int m_RegionMoveTransaction:1;
    unsigned int m_RegionStartClockTransaction:1;
    unsigned int m_RegionEndClockTransaction:1;
    unsigned int m_RegionLoopEndClockTransaction:1;
    unsigned long long m_EventCounter;
    unsigned long long m_SelectedEventCounter;
    struct _LgScore *m_Score;
    _Bool m_currentActiveChordTrackingEnabled;
    DfChord *m_currentActiveChord;
    long long m_currentActiveChordIndex;
    DfChord *m_currentActiveChordNext;
    DfClip *m_currentActiveArrangeClip;
    long long m_currentActiveArrangeClipSPL;
    DfObjectSolo *m_objectSoloHelper;
    long long m_CurrentRecordingInitialStartClock;
    unsigned int m_caughtByUser:1;
    unsigned int m_isInEditMode:1;
    int m_currentEditAction;
    UIImage *m_arrangeMarkerCarryover;
    UIImage *m_masterTrackMarkerCarryover;
    _Bool m_countIn;
    _Bool m_metronom;
    _Bool m_isRecordingAudio;
    DfTrack *m_RecordingMidiTrack;
    int m_TrappedRecordingRegions;
    _Bool m_flexEnabled;
    _Bool m_shouldUpdateFlexModes;
    _Bool m_spotEraseEnabled;
    _Bool m_shouldTempMuteRegionsOnCurrentTrackWhilePlaying;
    _Bool m_shouldTempMuteRegionsOnCurrentTrackWhileRecording;
    int m_LCDDisplayMode;
    int m_quantizeMode[3];
    int m_quantizeGroup[3];
    _Bool m_quantizeAutomatic[3];
    _Bool m_snapToGrid;
    long long m_BarClockInterval[3];
    long long m_BeatClockInterval[3];
    long long m_TickClockInterval[3];
    float m_BarInterval[3];
    float m_BeatInterval[3];
    float m_TickInterval[3];
    float m_LastZoomIndex[3];
    double m_SongPartsLeftNeighborWindowMaxSize[3];
    double m_SongPartsRightNeighborWindowMaxSize[3];
    double m_SongPartsLeftNeighborWindowEffectiveSize[3];
    double m_SongPartsRightNeighborWindowEffectiveSize[3];
    long long m_CoordClockOffset[3];
    float m_CoordOffset[3];
    int m_firstVisibleSongPartMarkerID;
    int m_lastVisibleSongPartMarkerID;
    long long m_firstVisibleSongPartMarkerStartClockBeforeUndoRedo;
    _Bool m_effectiveVisibleSongPartMarkerIDsWhileMainFolderIsNotRootAreSet;
    int m_effectiveFirstVisibleSongPartMarkerIDWhileMainFolderIDIsNotRoot;
    int m_effectiveLastVisibleSongPartMarkerIDWhileMainFolderIDIsNotRoot;
    long long m_ArrangeVisibleAndEditingOverwriteEndClock;
    _Bool m_moveAutomationDataEnabled;
    NSMutableArray *m_preparedFreezeTracks;
    NSMutableArray *m_preFreezeMutedTracks;
    _Bool m_freezeWasCanceled;
    _Bool m_stopAfterFreeze;
    _Bool m_PasteLocationIsActiveArrangeClipAbsoluteSPL;
    int m_CurrentlyAddingOrDuplicatingTrackCounter;
    int m_useRoundForMainFolderEndClockAdjustment;
    short m_SignatureIsOddHack;
    _Bool m_DisablePostTrackOrRegionWillBeDeletedFromModelNotification;
    float m_ZoomIndex[3];
    float m_ZoomIndexMin[3];
    float m_ZoomIndexMax[3];
    _Bool m_mediaTrackIsVisible;
    int m_mediaTrackType;
    NSMutableDictionary *m_mediaProperties;
    NSMutableArray *m_MediaMarkers;
    int m_midiEditorType;
    long long m_ArrangeSPLVisibility;
    long long m_lastGrid;
    _Bool m_lastChromatic;
    NSString *m_movieFullPathBackup;
    _Bool m_TrackRecordEnableIsVisible;
    _Bool _shouldAutoCreateGenInstRegionsIfNeeded;
    _Bool _shouldAutoInitializeCreatedGenInstRegions;
}

+ (int)mapLegacyStringBasedChannelBrowserIconID:(id)arg1 inputMethodKey:(id)arg2;
+ (id)tempDocument;
+ (void)setTempDocument:(id)arg1;
+ (_Bool)shouldForceChannelToNoTransposeMode:(id)arg1;
+ (_Bool)deletePersistentIntersongClipboardIfExists;
+ (_Bool)loadPersistentIntersongClipboardIntoCurrentClipboardIfExists;
+ (_Bool)saveSongClipboardToPersistentIntersongClipboardIfNeccessary:(id)arg1;
+ (id)interSongClipboardBundleName;
+ (id)interSongClipboardFolder;
+ (_Bool)pasteClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 onNewTracksIntoDocument:(id)arg3 deleteTracksWithKnownUUIDs:(_Bool)arg4;
+ (id)getSamplerFilesFileNamesFromSamplerInstrumentFile:(id)arg1;
+ (id)getSamplerInstrumentFileNamesFromCurrentLogicClipboard;
+ (id)getAudioFileNamesFromCurrentLogicClipboard:(_Bool)arg1 filterOutLibraryContent:(_Bool)arg2;
+ (_Bool)getTracksClippedFlagForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)saveAllRegionsOfDocument:(id)arg1 intoClipboardBundleAtFolderPath:(id)arg2 withName:(id)arg3 includeAudioAndSamplerFiles:(_Bool)arg4 overwriteExisting:(_Bool)arg5 auditableTracksOnly:(_Bool)arg6 maxTrackCount:(long long)arg7 outNumberOfTracks:(long long *)arg8 outMaxTrackCountNotEnough:(_Bool *)arg9 unmutedSessionTrackUUIDsInTargetSong:(id)arg10 mutedSessionTrackUUIDsInTargetSong:(id)arg11;
+ (long long)getNumberOfTracksInCurrentClipboard;
+ (id)getSamplerFilesFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getSamplerInstrumentsFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getAudioFolderPathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)getDataFilePathForClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)saveCurrentClipboardToClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 includeAudioAndSamplerFiles:(_Bool)arg3 overwriteExisting:(_Bool)arg4 additionalMetaData:(id)arg5;
+ (id)getRelativePathFromFullBundleResourcePath:(id)arg1 explicitBundleName:(id)arg2 keepBundleName:(_Bool)arg3;
+ (id)getContentBundleNameFromFullPath:(id)arg1;
+ (id)_bundlePathComponentSearchString:(id)arg1;
+ (id)getFullPathFromRelativeLibraryPath:(id)arg1;
+ (_Bool)fileReferenceIsFromLibraryBundle:(id)arg1 includeAdditionalContentBundles:(_Bool)arg2;
+ (id)fixLibraryFileReferenceToLocalLibraryBundleIfNeccessary:(id)arg1 includeAdditionalContentBundles:(_Bool)arg2;
+ (_Bool)loadClipboardWithClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2 outAdditionalMetaData:(id *)arg3;
+ (_Bool)loadClipboardWithClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (_Bool)existsClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (_Bool)deleteClipboardBundleAtFolderPath:(id)arg1 withName:(id)arg2;
+ (id)clipboardBundleExtension;
+ (id)getLogicObjectsPasteboardFlagsDictionary;
+ (_Bool)checkInstalledPackageIDsForLogicObjectsPasteboard:(id)arg1;
+ (id)getInstalledPackageIDsForLogicObjectsPasteboard;
+ (void)setLogicObjectsPasteboardFlagsFromDictionary:(id)arg1 audioFilesPath:(id)arg2 samplerFilesRootPath:(id)arg3;
+ (void)resetLogicObjectsPasteboardFlags;
+ (_Bool)currentPasteboardIsFromDocument:(id)arg1;
+ (_Bool)_specialMarkerExistsInPasteboard;
+ (id)_postivePasteboardMarkerData;
+ (_Bool)specialMarkerExistsInPasteboard;
+ (void)prepareLocalSongPasteboard;
+ (void)removeSpecialPasteboardType;
+ (void)addSpecialPasteboardType;
+ (void)_handleEnterForgroundForPasteboard:(id)arg1;
+ (float)standardZoomIndexMax:(int)arg1;
+ (float)standardZoomIndexMin:(int)arg1;
+ (id)libraryChannelStripFullPathForInputMethodKey:(id)arg1 andChannelStripFileName:(id)arg2;
+ (Class)trackClass;
+ (Class)regionClass;
+ (long long)newDocumentBarCount;
+ (void)initialize;
+ (_Bool)useSongParts;
+ (id)mediaTrackNameForType:(int)arg1;
@property(nonatomic) _Bool shouldAutoInitializeCreatedGenInstRegions; // @synthesize shouldAutoInitializeCreatedGenInstRegions=_shouldAutoInitializeCreatedGenInstRegions;
@property(nonatomic) _Bool shouldAutoCreateGenInstRegionsIfNeeded; // @synthesize shouldAutoCreateGenInstRegionsIfNeeded=_shouldAutoCreateGenInstRegionsIfNeeded;
@property(nonatomic) _Bool disablePostTrackOrRegionWillBeDeletedFromModelNotification; // @synthesize disablePostTrackOrRegionWillBeDeletedFromModelNotification=m_DisablePostTrackOrRegionWillBeDeletedFromModelNotification;
@property(nonatomic) _Bool shouldTempMuteRegionsOnCurrentTrackWhileRecording; // @synthesize shouldTempMuteRegionsOnCurrentTrackWhileRecording=m_shouldTempMuteRegionsOnCurrentTrackWhileRecording;
@property(nonatomic) _Bool shouldTempMuteRegionsOnCurrentTrackWhilePlaying; // @synthesize shouldTempMuteRegionsOnCurrentTrackWhilePlaying=m_shouldTempMuteRegionsOnCurrentTrackWhilePlaying;
@property(nonatomic) _Bool spotEraseEnabled; // @synthesize spotEraseEnabled=m_spotEraseEnabled;
@property(nonatomic) _Bool stopAfterFreeze; // @synthesize stopAfterFreeze=m_stopAfterFreeze;
@property _Bool freezeWasCanceled; // @synthesize freezeWasCanceled=m_freezeWasCanceled;
@property _Bool shouldUpdateFlexModes; // @synthesize shouldUpdateFlexModes=m_shouldUpdateFlexModes;
@property(nonatomic) DfDocument *document; // @synthesize document=m_Document;
- (void).cxx_destruct;
- (void)updateSignatureIsOddHack;
- (void)setSignatureIsOddHack:(short)arg1;
- (_Bool)notify:(id)arg1;
- (void)inputEQWasEnabledForChannel:(id)arg1;
- (_Bool)isCaughtByUser;
- (void)setCaughtByUser:(_Bool)arg1;
- (void)endEdit:(int)arg1;
- (void)beginEdit:(int)arg1;
- (void)prepareSelectedRegionsForEditing:(_Bool)arg1;
- (_Bool)pasteLogicObjectsFromPasteBoardToMainGridAtLocation:(struct LgGridLocation)arg1;
- (_Bool)pasteLogicObjectsFromPasteBoard:(id)arg1;
- (_Bool)pasteLogicObjectsFromPasteBoard;
- (void)_setAffectedSPLAfterPaste:(long long)arg1;
- (long long)currentPasteClock;
- (void)setPasteLocationIsActiveArrangeClipAbsoluteSPL:(_Bool)arg1;
- (_Bool)specialPasteCurrentLogicClipbaordOnNewTracksAtClock:(long long)arg1;
- (void)_afterPaste:(_Bool)arg1;
- (void)_beforePaste;
- (void)copySelectedEventsFromRegionsOnTrackToPasteBoard:(id)arg1;
- (void)copySelectedClipsFromGridToPasteBoard:(int)arg1;
- (void)copySelectedLogicObjectsFromSeqToPasteBoard:(int)arg1;
- (_Bool)cutSelectedEventsOfType:(unsigned long long)arg1 fromRegionsOrAutomationOnTrackToPasteBoard:(id)arg2;
- (_Bool)cutSelectedLogicObjectsToPasteBoard:(int)arg1;
- (void)_fillCutCopyPasteHelpersWithCurrentInfoForSource:(int)arg1;
- (long long)lastCopyToPasteboardRegionMaxClock;
- (long long)lastCopyToPasteboardRegionMinClock;
- (id)lastCopyToPasteboardSourceTrackInputMethodKey;
- (_Bool)lastCopyToPasteBoardContainsPodcastRegions;
- (_Bool)lastCopyToPasteBoardContainsAudioRegions;
- (_Bool)lastCopyToPasteBoardContainsMidiRegions;
- (_Bool)lastCopyToPasteboardContainsRegionsFromMultipleTracks;
- (_Bool)lastCopyToPasteBoardContainsAudioClips;
- (_Bool)lastCopyToPasteBoardContainsMidiClips;
- (_Bool)lastCopyToPasteboardContainsClipsFromMultipleColumns;
- (_Bool)lastCopyToPasteboardContainsClipsFromMultipleTracks;
- (id)_lastCopyToPasteBoardDocumentRef;
- (int)lastCopyToPasteBoardSourceType;
- (void)resetLogicObjectsPasteboardFlags;
- (_Bool)deleteSelectedLogicObjects:(int)arg1;
- (_Bool)allowEditGlobal;
- (void)deleteSelectedItems:(_Bool)arg1;
- (void)abortEdit;
- (_Bool)isEditing;
- (void)quantizedClock:(long long)arg1 lowClock:(long long *)arg2 highClock:(long long *)arg3 quantizeType:(int)arg4;
- (void)quantizedClock:(long long)arg1 lowClock:(long long *)arg2 highClock:(long long *)arg3 withMode:(int)arg4;
- (int)getAutomaticQuantizeModeForClockMode:(int)arg1;
- (_Bool)isClockSnapEnabled;
- (long long)currentSnapClock;
- (void)setCurrentSnapClock:(long long)arg1;
- (void)updateAutomaticQuantizeModeIfNeededForClockMode:(int)arg1;
- (int)quantizeGroupForMode:(int)arg1;
- (void)setQuantizeGroup:(int)arg1 forMode:(int)arg2;
- (_Bool)snapToGridEnabled;
- (void)setSnapToGridEnabled:(_Bool)arg1;
- (_Bool)quantizeAutomaticEnabledForMode:(int)arg1;
- (void)setQuantizeAutomaticEnabled:(_Bool)arg1 forMode:(int)arg2;
- (int)quantizeModeForMode:(int)arg1;
- (void)setQuantizeMode:(int)arg1 forMode:(int)arg2;
- (float)calculateZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4 minIndex:(double)arg5 maxIndex:(double)arg6;
- (void)setZoomIndexWithoutAnyInternalUpdates:(float)arg1 forMode:(int)arg2 updateCoordOffset:(_Bool)arg3;
- (_Bool)setZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4 minIndex:(double)arg5 maxIndex:(double)arg6;
- (_Bool)setZoomIndexForCoordDistance:(double)arg1 betweenClock1:(long long)arg2 andClock2:(long long)arg3 forMode:(int)arg4;
- (double)coordDistanceBetweenClock1:(long long)arg1 andClock2:(long long)arg2 Mode:(int)arg3 onGrid:(int)arg4 abs:(_Bool)arg5;
- (float)lastZoomIndexForMode:(int)arg1;
- (float)zoomIndexMax:(int)arg1;
- (float)zoomIndexMin:(int)arg1;
- (void)setZoomIndexMin:(float)arg1 andMax:(float)arg2 forMode:(int)arg3;
- (void)setZoomIndex:(float)arg1 forMode:(int)arg2;
- (void)updateAutomaticSnapToGridEnableForMode:(int)arg1;
- (_Bool)isAtZoomIndexMinForMode:(int)arg1;
- (float)zoomIndexForMode:(int)arg1;
- (float)quantizeOffsetCoord:(float)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (float)quantizeCoord:(float)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (long long)gridPositionForClock:(long long)arg1 quantizeType:(int)arg2 direction:(int)arg3;
- (long long)gridPositionForClock:(long long)arg1 mode:(int)arg2 direction:(int)arg3;
- (long long)quantizeClock:(long long)arg1 withMode:(int)arg2 onGrid:(int)arg3;
- (_Bool)filterClock:(long long)arg1 toClock:(long long *)arg2 withMode:(int)arg3;
- (long long)clockForOffsetCoord:(float)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (long long)clockForCoord:(float)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (float)offsetCoordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (float)coordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3;
- (long long)clockFromDisplay:(float)arg1 Mode:(int)arg2;
- (float)clockToDisplay:(long long)arg1 Mode:(int)arg2;
- (float)offsetCoordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3 Alignment:(int)arg4;
- (float)coordForClock:(long long)arg1 Mode:(int)arg2 onGrid:(int)arg3 Alignment:(int)arg4;
- (float)coordOffsetForMode:(int)arg1;
- (long long)coordClockOffsetForMode:(int)arg1;
- (void)setCoordClockOffset:(long long)arg1 forMode:(int)arg2;
- (void)_updateCoordOffsetAndOtherHelpersForMode:(int)arg1;
- (_Bool)createUndoStepForRegion:(id)arg1 withString:(id)arg2 checkGrooveMaster:(_Bool)arg3;
- (void)createUndoStepForRegion:(id)arg1 withString:(id)arg2;
- (void)createUndoStepForTrackAutomationData:(id)arg1 withString:(id)arg2;
- (void)createUndoStepForTempoWithString:(id)arg1;
- (void)createUndoStepForTransposeWithString:(id)arg1;
- (void)createUndoStepWithPointerGroup:(int)arg1 andSeqID:(long long)arg2 withString:(id)arg3;
- (void)createUndoStepForMarkerWithString:(id)arg1;
- (void)createUndoStepForArrangeAndAutomationWithString:(id)arg1;
- (_Bool)createUndoStep:(id)arg1 checkGrooveMaster:(_Bool)arg2;
- (void)createUndoStep:(id)arg1;
- (void)automaticMasterTrackFadeOutNeedsUpdateIfAvailable;
- (_Bool)updateEndOfFolderWithIDToLatestRegions:(int)arg1 onlySelectedRegions:(_Bool)arg2;
- (_Bool)updateEndOfMainFolderMarker:(_Bool)arg1;
- (void)documentIsAboutToStartRecording:(_Bool)arg1;
- (void)documentIsAboutToStartPlaying:(_Bool)arg1;
- (void)quickStart;
- (void)tempMuteRegionsOnTrack:(id)arg1;
- (void)tempMuteRegionsOnCurrentTrack;
- (void)tempUnMuteAllRegionsInMainFolder;
- (_Bool)shouldUseRecordingTakesAndReplaceModeInsteadOfTakesMode;
- (void)documentDidStopRecording:(_Bool)arg1;
- (_Bool)_isTakeRecordingMode;
- (_Bool)shouldUseTakeRecordingFromSPL;
- (long long)takeRecordingCycleLength;
- (long long)takeRecordingCycleStart;
- (long long)movieEndClock;
- (void)updateDefaultCycleLength;
- (void)updateIdle;
- (void)handleClockDidUpdateAfterGlobalNotficicationWasSent;
- (void)updateClock:(long long)arg1;
- (void)updateCellRecClock:(long long)arg1;
- (void)updateScore;
- (void)update;
- (_Bool)mainFolderIsRootFolder;
- (void)setFolderEndClock:(long long)arg1 ofFolderWithID:(int)arg2 postNotification:(_Bool)arg3;
- (void)setMainFolderEndClock:(long long)arg1 postNotification:(_Bool)arg2;
- (long long)folderEndClock:(int)arg1;
- (long long)folderStartClock:(int)arg1;
- (long long)mainFolderEndClock;
- (long long)mainFolderStartClock;
- (void)_updateMainFolderRegion:(_Bool)arg1;
- (void)setMainFolderID:(int)arg1;
- (int)mainFolderID;
- (long long)currentRecordingInitialStartClock;
- (void)autoFixChannelStripFullPathForChannel:(id)arg1;
- (id)libraryChannelStripFullPathForTrack:(id)arg1 andChannelStripFileName:(id)arg2;
- (id)channelStripFolderBasePathForTrack:(id)arg1;
- (_Bool)userDidManuallyChangeTempo;
- (void)setUserDidManuallyChangeTempo:(_Bool)arg1;
- (void)disableAutomaticRecordingForLastSongPartIfNeeded;
- (long long)quantizedFolderAutomaticRecordingEndClockForClock:(long long)arg1 folderID:(int)arg2;
- (long long)quantizedMainfFolderAutomaticRecordingEndClockForClock:(long long)arg1;
- (_Bool)automaticRecordingIsActive;
- (_Bool)automaticRecordingIsActiveForFolderID:(int)arg1;
- (void)setAutomaticRecordingActiveForLastSongPart:(_Bool)arg1;
- (_Bool)isAutomaticRecordingActiveForLastSongPart;
- (_Bool)shouldRecordWithCycleRecordingIfCycleIsActive;
- (_Bool)shouldRecordWithMergeRecording;
- (int)getBounceStartClock:(long long *)arg1 andEndClock:(long long *)arg2 useCycle:(_Bool)arg3 shouldAddEffectTail:(_Bool *)arg4;
- (id)movieFullPathBackup;
- (void)setMovieFullPathBackup:(id)arg1;
- (void)setLastChromatic:(_Bool)arg1;
- (_Bool)lastChromatic;
- (void)setLastGrid:(long long)arg1;
- (long long)lastGrid;
- (_Bool)countInEnabled;
- (void)setCountInEnabled:(_Bool)arg1;
- (_Bool)metronomEnabled;
- (void)setMetronomEnabled:(_Bool)arg1;
- (void)setMasterTrackVisible:(_Bool)arg1;
- (_Bool)masterTrackIsVisible;
- (id)undoManager;
- (void)setArrangeSPLVisibility:(long long)arg1;
- (long long)arrangeSPLVisibility;
- (long long)latestElementClock;
- (_Bool)recordingAudio;
- (int)midiEditorType;
- (void)setMidiEditorType:(int)arg1;
- (_Bool)isRecording;
- (void)setLCDDisplayMode:(int)arg1;
- (int)LCDDisplayMode;
- (void)setTrackOfScore:(id)arg1;
- (struct _LgScore *)score;
- (CDStruct_b40ec427)visibleClockRangeForMode:(int)arg1;
- (void)setVisibleClockRange:(CDStruct_b40ec427)arg1 forMode:(int)arg2;
- (long long)selectionClockforMode:(int)arg1;
- (void)setSelectionClock:(long long)arg1 forMode:(int)arg2;
- (_Bool)hasSelection;
- (void)clearSelection;
- (void)deselectAll;
@property(readonly, nonatomic) struct LGDOCUMENT *logicDocument;
- (void)dealloc;
- (void)close;
- (_Bool)newDocumentCreated;
- (id)initWithDocument:(id)arg1;
- (id)init;
- (id)timeSignatureForClock:(long long)arg1;
- (long long)indexOfTimeSignatureForClock:(long long)arg1;
- (id)timeSignatures;
- (void)updateTimeSignatures;
- (void)addNewTimeSignatureAtClock:(long long)arg1 beatsPerBar:(long long)arg2 beatDenom:(long long)arg3;
- (id)_updateTimeSignatures:(_Bool)arg1;
- (void)addAppSpecificAssetsMetaDataEntriesForSavingDocumentToDict:(id)arg1;
- (void)convertGenInstTracksAfterSongLoadIfNeeded;
- (void)_autoFixOriginalCSTPathsInArrangeRootTrackChannels;
- (void)songDidLoad;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)removeNotSupportedRootTracksAndGridRowsForGridImportedRowsWithInstIDs:(id)arg1;
- (void)localizeRootTrackNamesAndAffectedGridRowsWithInstIDs:(id)arg1;
- (_Bool)shouldUseCellRecordingEngine;
- (void)notifyActiveArrangeClipAboutChangedContentIfNecessary;
- (void)_deferredNotifyActiveArrangeClipAboutChanged;
- (_Bool)defaultTransposeLockedValueForClip:(id)arg1 pCanBeChangedInUI:(_Bool *)arg2;
- (_Bool)defaultTransposeLockedValueForClip:(id)arg1;
- (void)setActiveArrangeClipSPL:(long long)arg1;
- (long long)activeArrangeClipSPL;
- (void)_updateBufferedCurrentActiveArrangeClipSPL:(_Bool)arg1;
- (void)_handleClipEventForClip:(id)arg1 event:(int)arg2 clock:(long long)arg3;
- (id)activeArrangeClip;
- (void)setActiveArrangeClip:(id)arg1;
- (void)setLastVisibleSongMarker:(id)arg1;
- (void)setFirstVisibleSongMarker:(id)arg1;
- (id)getSongPartsInfoArray;
- (_Bool)setSongPartStructureAndSongLengthFromSongPartsInfoArray:(id)arg1;
- (void)adjustSongPartsToBarlenghtsAfterSignatureChange:(id)arg1;
- (id)currentSongPartsBarlengths;
- (_Bool)canDuplicateSongPartWithMarkerIndex:(long long)arg1;
- (long long)availableBarCountSpaceLeftInSong;
- (_Bool)_adjustTempMaxEndClockRegionsOrSongPartBoundsOrSongEndAfterTempoChange:(int)arg1;
- (_Bool)adjustTempMaxEndClockRootRegionsOrSongPartBoundsOrSongEndAfterTempoChange;
- (_Bool)_trimRegionsToTempMaxEndClockIfNecessary:(id)arg1;
- (_Bool)adjustRegionsOrSongPartBoundsOrFolderEndInFolderWithID:(int)arg1 onlySelectedRegions:(_Bool)arg2 ignoreActiveSongParts:(_Bool)arg3;
- (_Bool)trimRegionsInFolder:(int)arg1 toMaxClock:(long long)arg2 onlySelected:(_Bool)arg3 skipAutoLoopedRegions:(_Bool)arg4;
- (_Bool)doOneShotAutoLoopForRegions:(id)arg1 onlySelectedRegions:(_Bool)arg2;
- (_Bool)doOneShotAutoLoopForSelectedRegionsInActiveSongPart;
- (id)_regionsInSongPartWithIndex:(long long)arg1 sourceRegions:(id)arg2 includingLeftOverlapping:(_Bool)arg3 andRightOperlapping:(_Bool)arg4 onlyForTrack:(id)arg5 onlyAudio:(_Bool)arg6;
- (id)rootRegionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(_Bool)arg2 andRightOperlapping:(_Bool)arg3 onlyForTrack:(id)arg4 onlyAudio:(_Bool)arg5;
- (id)regionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(_Bool)arg2 andRightOperlapping:(_Bool)arg3 onlyForTrack:(id)arg4 onlyAudio:(_Bool)arg5;
- (id)regionsInSongPartWithIndex:(long long)arg1 includingLeftOverlapping:(_Bool)arg2 andRightOperlapping:(_Bool)arg3 onlyForTrack:(id)arg4;
- (id)regionsInActiveSongPartsIncludingLeftOverlapping:(_Bool)arg1 andRightOperlapping:(_Bool)arg2 onlyForTrack:(id)arg3;
- (id)regionsInActiveSongPartsIncludingLeftOverlapping:(_Bool)arg1 andRightOperlapping:(_Bool)arg2;
- (double)songPartsRightNeighborWindowEffectiveSizeForMode:(int)arg1;
- (double)songPartsLeftNeighborWindowEffectiveSizeForMode:(int)arg1;
- (double)songPartsRightNeighborWindowMaxSizeForMode:(int)arg1;
- (double)songPartsLeftNeighborWindowMaxSizeForMode:(int)arg1;
- (void)setSongPartsRightNeighborWindowMaxSize:(double)arg1 forMode:(int)arg2;
- (void)setSongPartsLeftNeighborWindowMaxSize:(double)arg1 forMode:(int)arg2;
- (void)moveSongPartWithMarkerIndex:(long long)arg1 toNewIndex:(long long)arg2 makeUndo:(_Bool)arg3;
- (void)duplicateSongPartWithMarkerIndex:(long long)arg1 makeUndo:(_Bool)arg2;
- (void)setLengthOfSongPartWithMarkerIndex:(long long)arg1 toBarCount:(int)arg2 makeUndo:(_Bool)arg3;
- (void)deleteSongPartWithMarkerIndex:(long long)arg1 makeUndo:(_Bool)arg2 updateActiveSongPartsIfNecessary:(_Bool)arg3;
- (void)adjustLastSongPartLengthAndSongEndOrMainFolderEndToLatestRegionEndClock:(long long)arg1;
- (void)autoAdjustFolderLengthWithID:(int)arg1 selectedRegionsOnly:(_Bool)arg2;
- (void)adjustLastSongPartLengthAndSongEndOrMainFolderEndToLatestRegionEnd;
- (void)adjustLastSongPartLengthToSongEnd;
- (void)_setSongEndToLatestMarkerEndClock;
- (void)setSongEndToLatestMarkerEndClock;
- (void)returnSPLToPreviousRegionStartOnTrackOrActiveSongPartsStart:(id)arg1;
- (void)returnSPLToActiveSongPartsStart;
- (void)setSpeed:(float)arg1 ofRegionsInMainFolder:(id)arg2 removeOverLaps:(_Bool)arg3 respectActiveSongParts:(_Bool)arg4;
- (void)didChangeSpeedOfRegionsInMainFolder:(id)arg1 removeOverLaps:(_Bool)arg2 respectActiveSongParts:(_Bool)arg3;
- (void)prepareChangeSpeedOfRegionsInMainFolder:(id)arg1 respectActiveSongParts:(_Bool)arg2;
- (void)setFollowTempo:(_Bool)arg1 ofRegionsInMainFolder:(id)arg2 removeOverLaps:(_Bool)arg3 respectActiveSongParts:(_Bool)arg4;
- (void)_afterMultipleRegionsDidChangeLength_RemoveOverLaps:(_Bool)arg1 respectSongPartsAndSongEnd:(_Bool)arg2;
- (void)_prepareForMultipleRegionsWillChangeLength:(_Bool)arg1;
- (void)setTransposeOfRegionsInActiveSongParts:(long long)arg1 onTrack:(id)arg2 includeClips:(_Bool)arg3 includeActiveArrangeClip:(_Bool)arg4;
- (long long)getTransposeOfRegionsInActiveSongPartsOnTrack:(id)arg1 includeClips:(_Bool)arg2 includeActiveArrangeClip:(_Bool)arg3;
- (_Bool)canTransposeRegionsOnTrack:(id)arg1 includeClips:(_Bool)arg2 includeActiveArrangeClip:(_Bool)arg3;
- (void)quantizeRegionsInActiveSongParts:(int)arg1 onTrack:(id)arg2 includeClips:(_Bool)arg3 includeActiveArrangeClip:(_Bool)arg4;
- (int)getQuantizeTypeOfRegionsInActiveSongPartsOnTrack:(id)arg1 includeClips:(_Bool)arg2 includeActiveArrangeClip:(_Bool)arg3;
- (void)makeSongCompatibleForSongPartsIfNeccessary;
- (_Bool)shouldCreateGenInstRegionsForNewSongPartOrSongPartLengthChange;
- (void)addNewSongPartWithLength:(long long)arg1 makeUndo:(_Bool)arg2;
- (void)_checkIfSongPartsAreValid;
- (int)indexOfLastActiveSongPartMarker;
- (int)indexOfFirstActiveSongPartMarker;
- (_Bool)allSongPartsActive;
- (float)coordWidthOfActiveSongPartsForMode:(int)arg1;
- (long long)firstActiveSongPartStartClock;
- (long long)lastActiveSongPartEndClock;
- (long long)arrangeOriginalVisibleAndEditingEndClock;
- (long long)arrangeEffectiveVisibleAndEditingEndClock;
- (void)setArrangeVisibleAndEditingOverwriteEndClock:(long long)arg1 sendMainFolderEndChangedNotificationIfNecessary:(_Bool)arg2;
- (long long)arrangeVisibleAndEditingOverwriteEndClock;
- (_Bool)setSongPositionToActiveSongPartsEndIfNecessary;
- (_Bool)setSongPositionToActiveSongPartsStartIfNecessary;
- (_Bool)setSongPositionToSongPartStartWithIndexIfNecessary:(long long)arg1;
- (_Bool)setActiveSongPartToCurrentSPLPositionIfNecessary;
- (void)setActiveSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2 forceUpdate:(_Bool)arg3;
- (void)setActiveSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2;
- (void)setCycleAccordingToSongPartsFromMarkerIndex:(int)arg1 toMarkerIndex:(int)arg2;
- (void)updateCycleAccordingToActiveSongPartsOrMainFolder;
- (void)checkIfActiveSongPartsStillExistAndUpdateInternals:(_Bool)arg1;
- (void)_setCoordClockOffsetForSongPartMarker:(id)arg1 forMode:(int)arg2;
- (_Bool)setZoomIndexToFitActiveSongPartsInCoordDistance:(double)arg1 forMode:(int)arg2;
- (id)nameForNewSongPart;
- (void)clearAllButOneSongPartMarkers;
- (void)clearAllPartsMarkers;
- (void)glueSelectedMarkerMakeUndo:(_Bool)arg1;
- (void)setBorderOfCurrentMarker:(long long)arg1;
- (void)exchangeSelectedMarkerWith:(id)arg1;
- (_Bool)deleteSelectedMarkerMakeUndo:(_Bool)arg1;
- (_Bool)deleteContentOfSelectedMarkerMakeUndo:(_Bool)arg1;
- (_Bool)isMarkerDeletionAllowed;
- (void)applyMarkerChangeBorder;
- (void)beforeMarkerChangeBorderMakeUndo:(_Bool)arg1;
- (void)applyMarkerMove;
- (void)beforeMarkerMoveMakeUndo:(_Bool)arg1 withDivide:(_Bool)arg2;
- (void)sortMarkerFillGap;
- (void)sortMarker;
- (void)clearArrangementImagesForAllMarker;
- (id)masterTrackImageBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (id)arrangementImageBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)setArrangementImagesForAllMarker;
- (id)masterTrackMarkerCarryover;
- (id)arrangeMarkerCarryover;
- (id)regionsEnclosedByMarker:(id)arg1;
- (_Bool)isClockEnclosedBySelectedMarker:(long long)arg1;
- (id)markerAtClock:(long long)arg1;
- (long long)firstSelectedMarkerStartClock;
- (long long)latestSelectedMarkerEndClock;
- (long long)latestMarkerEndClock;
- (void)setMarkersEndClock:(long long)arg1;
- (void)setMarkersStartClock:(long long)arg1;
- (void)moveMarkersToClock:(long long)arg1 andTrack:(CDStruct_1ef3fb1f)arg2;
- (long long)relativeMarkerEndClock:(long long)arg1;
- (long long)relativeMarkerStartClock:(long long)arg1;
- (void)setNameOfSelectedMarkers:(id)arg1 makeUndo:(_Bool)arg2;
- (struct _LgMarker *)markerHandleForID:(int)arg1;
- (id)markerForID:(int)arg1;
- (unsigned long long)countSelectedMarker;
- (unsigned long long)countMarkers;
- (void)deselectAllMarkers;
- (void)markAllMarkers:(_Bool)arg1;
- (void)markSelectedMarkers:(_Bool)arg1;
- (void)selectAllMarkers;
- (void)setCurrentMarker:(id)arg1;
- (void)setCurrentMarker:(id)arg1 setSelectionClock:(_Bool)arg2;
- (void)setSelectedMarker:(id)arg1 as:(_Bool)arg2;
- (void)setSelectionOfASingleMarker:(id)arg1 as:(_Bool)arg2;
- (id)selectedMarker;
- (id)currentMarker;
- (id)addMarkerInTheGapBetweenLastMarkerAndSongEnd;
- (void)addMarkerBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)addMarker;
- (id)nameForNewMarker;
- (id)uniqueMarkerName:(id)arg1 andCount:(int)arg2;
- (id)markers;
- (void)updateMarker;
- (id)_updateMarker:(_Bool)arg1;
- (int)mergeMarker:(struct _LgSongIterator *)arg1:(const struct _LgMarker *)arg2;
- (void)importTempoListFromAudioRegion:(id)arg1;
- (void)autoAdjustLUFSRegionGainForSelectedAudioRegions;
- (id)currentRegionSoloRegion;
- (void)stopRegionSolo;
- (void)playRegionSolo:(id)arg1;
- (_Bool)exportComposition:(id)arg1 forTypes:(long long)arg2 onTrack:(id)arg3 andTrack:(id)arg4 withCreatorFlags:(unsigned long long)arg5 barClockStart:(long long)arg6;
- (void)refreshStatsInComposition:(id)arg1 minimumRegionStartLgClock:(long long)arg2 withCreatorFlags:(unsigned long long)arg3;
- (_Bool)applyAnalysisResults:(unsigned long long)arg1 forAudioRegion:(id)arg2 absoluteAlignmentClock:(long long)arg3 options:(long long)arg4;
- (_Bool)applyAnalysisResults:(unsigned long long)arg1 forAudioRegion:(id)arg2;
- (_Bool)getAnalysisResultsBasicBeatsClockInfo:(CDStruct_db489c38 *)arg1 forAudioRegion:(id)arg2;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 basedOnAnalysisResultsOfRegion:(id)arg3 includeUpbeat:(_Bool)arg4 forceToAudioRegionEnd:(_Bool)arg5 createUndo:(_Bool)arg6 removeOverlaps:(_Bool)arg7;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 clockStart:(long long)arg3 clockEnd:(long long)arg4 includeUpbeat:(_Bool)arg5 forceToAudioRegionEnd:(_Bool)arg6 createUndo:(_Bool)arg7 removeOverlaps:(_Bool)arg8;
- (id)convertSelectedAudioRegionToEasySamplerInstrument;
- (void)prepareRegionsTempMaxEndClocksBeforeTempoChanges:(_Bool)arg1 inFolder:(int)arg2;
- (void)_prepareRegionsTempMaxEndClocks:(id)arg1 theMaxClock:(long long)arg2 forceAllRegions:(_Bool)arg3;
- (void)resetRegionsTempMaxEndClocks;
- (_Bool)arrangeContainsAutomaticLoopedRegions;
- (_Bool)fillRegionGapOnTrack:(id)arg1 atClockWithEmptyRegionsIfNeeded:(long long)arg2 onlyInActiveSongParts:(_Bool)arg3 minClockLength:(long long)arg4 quantizeToBars:(_Bool)arg5;
- (long long)lengthOfRegionGapOnTrack:(id)arg1 atClock:(long long)arg2 onlyInActiveSongParts:(_Bool)arg3 quantizeToBars:(_Bool)arg4 outStartClock:(long long *)arg5;
- (id)createEmptyMidiRegionsOnTrack:(id)arg1 startClock:(long long)arg2 endClock:(long long)arg3 defaultPieceLength:(long long)arg4 minClockLength:(long long)arg5 quantizeToBars:(_Bool)arg6;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 startClock:(long long)arg3 endClock:(long long)arg4 createUndo:(_Bool)arg5 removeOverlaps:(_Bool)arg6;
- (id)createEmptyMidiRegionOnTrack:(id)arg1 withName:(id)arg2 forNoteAtStartClock:(long long)arg3 length:(long long)arg4 createUndo:(_Bool)arg5 removeOverlaps:(_Bool)arg6 extendRegionToContainerFolderOrSongPartsSize:(_Bool)arg7;
- (void)deselectRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (void)selectRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (void)_setRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3 selected:(_Bool)arg4;
- (void)deselectRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)selectRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)_setRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2 selected:(_Bool)arg3;
- (id)regionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (_Bool)glueSelectedRegions;
- (_Bool)divideSelectedRegionsAtClock:(long long)arg1 divideSelectionFlag:(int)arg2;
- (_Bool)divideSelectedRegionsAtClock:(long long)arg1;
- (void)divideRegionsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (void)divideRegionsAndTrackEventsBetweenStartClock:(long long)arg1 andEndClock:(long long)arg2;
- (id)midiRegionForSeqID:(long long)arg1;
- (void)setRegionsLoopEndClock:(long long)arg1;
- (void)setRegionsEndClock:(long long)arg1;
- (void)setRegionsStartClock:(long long)arg1;
- (void)moveRegionsToClock:(long long)arg1 andTrackNr:(int)arg2;
- (long long)relativeRegionLoopEndClock:(long long)arg1;
- (long long)relativeRegionEndClock:(long long)arg1;
- (int)relativeRegionTrackNr:(int)arg1;
- (long long)relativeRegionStartClock:(long long)arg1;
- (void)setNameOfSelectedRegions:(id)arg1 makeUndo:(_Bool)arg2;
- (long long)countRegionsOfTrack:(id)arg1;
- (long long)latestRegionEndClock:(_Bool)arg1;
- (struct _LgRegion *)regionHandleForID:(CDStruct_ae571156)arg1;
- (id)_regionForID:(CDStruct_ae571156)arg1 inArray:(id)arg2;
- (id)regionForID:(CDStruct_ae571156)arg1;
- (id)selectedRegionsIdenticalName;
- (unsigned long long)countSelectedRegions;
- (unsigned long long)hasSelectedRegions;
- (unsigned long long)countSelectedRegionsOfTrackID:(CDStruct_1ef3fb1f)arg1;
- (unsigned long long)countSelectedRegionsOfType:(int)arg1;
- (_Bool)hasSelectedRegionsOfType:(int)arg1;
- (void)deselectAllRegionsNotLocatedOnTrackWithID:(CDStruct_1ef3fb1f)arg1;
- (_Bool)selectAllRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1 behindClock:(long long)arg2;
- (_Bool)selectAllRegionsFromClock:(long long)arg1;
- (void)deselectAllRegionsNotInActiveSongPartsOrNotOnTrack:(id)arg1;
- (void)deselectAllRegionsNotInActiveSongParts;
- (void)selectAllRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1 onlyWithinActiveSongParts:(_Bool)arg2;
- (void)selectAllRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1;
- (void)selectAllRegionsWithinActiveSongPartsOnTracks:(id)arg1;
- (void)selectAllRegionsWithinActiveSongParts;
- (void)deselectAllRegionsOfTrackWithID:(CDStruct_1ef3fb1f)arg1;
- (void)deselectAllRegionsExceptOfTrackWithID:(CDStruct_1ef3fb1f)arg1;
- (void)deselectAllRegions;
- (void)markAllRegions:(_Bool)arg1;
- (void)markSelectedRegions:(_Bool)arg1;
- (void)selectAllRegions;
- (void)deleteRegionsOnTrack:(id)arg1 hideTrack:(_Bool)arg2 unsoloTrack:(_Bool)arg3 makeUndo:(_Bool)arg4;
- (void)deleteRegionWithoutSE:(id)arg1;
- (void)setCurrentRegion:(id)arg1 selectTrack:(_Bool)arg2;
- (void)setCurrentRegion:(id)arg1 selectTrack:(_Bool)arg2 setSelectionClock:(_Bool)arg3;
- (void)setSelectedRegion:(id)arg1 as:(_Bool)arg2;
- (void)minAndMaxClockOfRegionsInFolderWithID:(int)arg1 selectedRegionsOnly:(_Bool)arg2 minClock:(long long *)arg3 maxClock:(long long *)arg4;
- (_Bool)restrictTrackChangeOfSelectedRegions:(int *)arg1;
- (void)updateRegionEditLimits;
- (void)resetRegionEditLimits;
- (CDStruct_7934c616)regionEditLimits;
- (id)defaultNameForRegionsOnTrack:(id)arg1;
- (void)removeRecordingRegions;
- (void)createRecordingRegions;
- (_Bool)shouldCreateRecordingRegionForTrackEvenIfNotRecordEnabled:(id)arg1;
- (void)_createClipPerformanceRecordingRegionForTrack:(id)arg1 clip:(id)arg2 startClock:(long long)arg3;
- (id)recordingRegions;
- (void)c_newRootRegionCreated:(void *)arg1;
- (unsigned long long)totalRegionCount;
- (id)selectedRegion;
- (id)currentRegion;
- (id)automaticLoopedRegions;
- (id)selectedRootRegions;
- (id)rootRegions;
- (id)selectedRegions;
- (id)regions;
- (void)_copyRootRegionsIntoMainFolderRegionContainers;
- (void)_removeAllMainFolderRegionsFromModelAndNotifyAboutDeletion:(_Bool)arg1;
- (void)updateCurrentExistingRegions:(_Bool)arg1;
- (void)updateRegions;
- (id)_updateRegions:(_Bool)arg1;
- (void)_updateRegionsFromFolderWithID:(int)arg1 inContainer:(id)arg2 isRootRegionsExtraCollectRun:(_Bool)arg3;
- (int)mergeRegion:(struct _LgSongIterator *)arg1:(const struct _LgRegion *)arg2;
- (void)setDefaultTrackEqFreqsIfNecessaryForTrack:(id)arg1;
- (void)convertLegacyTracksWhileSongLoadingIfNeeded;
- (_Bool)multiTrackRecordingActive;
- (void)_checkAndResetSoloSafeStatesOfRootTracksIfNeeded;
- (void)convertGenInstTrackAndRegionsToNormalMidiTrackForTracksWithInstID:(int)arg1;
- (_Bool)replaceTracksWithSubmixBounce:(id)arg1 keepUsedGridRowsIfNeeded:(_Bool)arg2 makeUndo:(_Bool)arg3;
- (id)createNewAudioTrackForSubMixBouncingResultAndMakeUndo:(_Bool)arg1;
- (void)deleteMultipleTracks:(id)arg1 makeUndo:(_Bool)arg2 undoStepName:(id)arg3;
- (id)duplicateTrack:(id)arg1 addNewTrackAtEndOfList:(_Bool)arg2;
- (id)duplicateTrack:(id)arg1;
- (void)_decCurrentlyAddingOrDuplicatingTrackCounter:(_Bool)arg1;
- (void)_incCurrentlyAddingOrDuplicatingTrackCounter;
- (_Bool)currentlyAddingOrDuplicatingTrack;
- (id)createTrackOfType:(int)arg1 withChannelStrip:(id)arg2 andNumberOfChannels:(unsigned long long)arg3 atTrackIndex:(long long)arg4 inputMethodKey:(id)arg5 makeUndo:(_Bool)arg6 categoryName:(id)arg7 chStripName:(id)arg8;
- (id)createTrackOfType:(int)arg1 withChannelStrip:(id)arg2 andNumberOfChannels:(unsigned long long)arg3 atTrackIndex:(long long)arg4 inputMethodKey:(id)arg5 makeUndo:(_Bool)arg6;
- (id)defaultInputMethodKeyForLoopTrack:(id)arg1;
- (void)setMediaTrackType:(int)arg1 preventClearOfTrack:(_Bool)arg2;
- (void)setMediaTrackType:(int)arg1;
- (id)mediaTrackTypeAsNonLocalizedString;
- (int)mediaTrackType;
- (void)setMediaTrackVisible:(_Bool)arg1;
- (_Bool)mediaTrackIsVisible;
- (id)tracksContainingSelectedRegions;
- (void)setTrackRecordEnableIsVisible:(_Bool)arg1;
- (_Bool)trackRecordEnableIsVisible;
- (long long)deleteTracksWithSessionTrackUUIDs:(id)arg1 mutedTracksOnly:(_Bool)arg2 makeUndo:(_Bool)arg3 undoStepName:(id)arg4;
- (void)addMasterTrackFadeout:(_Bool)arg1;
- (void)addMasterTrackFadeout:(_Bool)arg1 endClock:(long long)arg2 milliSeconds:(double)arg3;
- (_Bool)updateMonoStereoConfigOfAudioTracks;
- (_Bool)canTrackBeSwitchedToStereo:(id)arg1;
- (_Bool)shouldQuantizeRegionsAfterRecordingForTrack:(id)arg1;
- (void)synchronizeRecEnableStatesOfTracks;
- (void)recallRecEnableStatesOfTracks;
- (void)postTrackSelectionNotificationsForOldTrack:(id)arg1 newTrack:(id)arg2;
- (id)trackForAutomationSeqID:(long long)arg1;
- (long long)countInputMonitoringEnabledChannels;
- (long long)countRecEnabledMidiTracksByIncludingCurrentTrackEvenIfFrozen:(_Bool)arg1;
- (long long)countRecEnabledAudioTracksByIncludingCurrentTrackEvenIfFrozen:(_Bool)arg1;
- (long long)_countRecEnabledTracksByIncludingCurrentTrackEvenIfFrozen:(_Bool)arg1 type:(int)arg2;
- (long long)countRecEnabledTracksByIncludingCurrentTrackEvenIfFrozen:(_Bool)arg1;
- (void)recEnableAndInputMonitoringOffForAllExceptCurrentTrack;
- (void)monitoringOffAllTracksExceptCurrentTrack;
- (void)monitoringOffAllTracks;
- (void)_monitoringOffAllTracksButSkipInstID:(int)arg1;
- (void)recEnableOffAllTracksExceptCurrentTrack;
- (void)recEnableOffAllTracks;
- (void)_recEnableOffAllTracksButSkipTrack:(id)arg1;
- (void)soloOffAllTracks;
- (void)muteOffAllTracks;
- (void)selectSITrackForMTRecording;
- (id)recEnabledSITrack;
- (_Bool)shouldPreventRecEnablingForTrack:(id)arg1;
- (void)repairFreezeStatus;
- (void)recallFreezePreparedTracks:(_Bool)arg1;
- (void)resetFreezePreparedTracks;
- (void)storeFreezePreparedTracks;
- (_Bool)hasFreezedPreparedTrack;
- (int)countFreezedPreparedTracks;
- (int)countFreezedTracks:(_Bool)arg1 alsoIfOnlyFreezePrepared:(_Bool)arg2;
- (int)countFreezedTracks:(_Bool)arg1;
- (void)resetFreezeTracks:(_Bool)arg1 alsoIfOnlyFreezePrepared:(_Bool)arg2;
- (void)resetFreezeTracks:(_Bool)arg1;
- (void)freezePrepareAllFrozenTracks;
- (_Bool)allowEditOnFreezedTracks:(_Bool)arg1 alsoIfOnlyFreezePrepared:(_Bool)arg2;
- (_Bool)allowEditOnFreezedTracks:(_Bool)arg1;
- (_Bool)allowEditOnTrackWithInstID:(long long)arg1;
- (_Bool)allowEditOnTrack:(id)arg1 alsoIfOnlyFreezePrepared:(_Bool)arg2;
- (_Bool)allowEditOnTrack:(id)arg1;
- (void)removeSessionTrackUUIDIfIsConnectedHostForTrack:(id)arg1;
- (_Bool)trackIsEasySamplerTrack:(id)arg1;
- (unsigned long long)countTracksOfType:(int)arg1;
- (unsigned long long)numTracks;
- (id)usedAudioUnitIDStrings;
- (unsigned long long)countAudioUnitRootTracks;
- (unsigned long long)countAlchemyRootTracks;
- (unsigned long long)countDrummerRootTracks;
- (unsigned long long)countGenInstRootTracks;
- (id)rootTrackForInstID:(long long)arg1;
- (id)mainTrackForInstID:(long long)arg1;
- (id)_trackForInstID:(long long)arg1 inTracks:(id)arg2;
- (id)trackForID:(CDStruct_1ef3fb1f)arg1;
- (id)trackForUUID:(id)arg1;
- (_Bool)hasRealInstrumentTracks;
- (_Bool)areOtherTracksSoloed:(id)arg1;
- (void)autoUnhideRootTracksWithRegionsIfNecessary;
- (void)updateVisibleTracks;
- (void)ensureAutomationIsActiveForAllRootTracks;
- (id)lastTrack;
- (id)firstTrack;
- (id)preCurrentSamplerTrack;
- (id)preCurrentTrack;
- (id)grooveMasterTrack;
- (void)setGhostTrack:(id)arg1;
- (id)ghostTrack;
- (id)editorTrack;
- (void)reSelectCurrentTrack:(_Bool)arg1;
- (void)reSelectCurrentTrack;
- (void)setCurrentTrackWithID:(CDStruct_1ef3fb1f)arg1;
- (_Bool)_masterTrackAllowedToBeSelectedAfterUndo;
- (void)setCurrentTrack:(id)arg1 doDeselect:(_Bool)arg2;
- (void)setCurrentTrack:(id)arg1;
- (CDStruct_1ef3fb1f)currentTrackID;
- (id)currentTrack;
- (id)mediaTrack;
- (id)masterTrack;
- (id)rootTracks;
- (id)visibleRootTracks;
- (id)visibleTracks;
- (id)tracks;
- (void)_clearAllChannelAndTrackCaches;
- (void)_removeAllMainFolderTracksFromModelIfNotRootInTracks;
- (void)trackWillBeDeletedFromModel:(id)arg1;
- (void)updateTracks;
- (void)_tracksUpdated;
- (id)_updateTracks:(_Bool)arg1;
- (void)_sortTrackArrayByTrackNr:(id)arg1;
- (void)_deleteCollectedUnknownTracksWithNumbers:(id)arg1 andUUIDs:(id)arg2 inFolderWithID:(int)arg3 oldTrackObjectsByUUIDs:(id)arg4;
- (int)addTrack:(struct _LgSongIterator *)arg1:(const struct _LgTrack *)arg2;
- (void)_checkForDuplicateGinstsInTracks;
- (void)updateFlexQuantizeForRegions:(id)arg1;
- (void)updateFlexQuantizeForSelRegions;
- (_Bool)selectedRegionIsOnGrooveMaster;
- (_Bool)hasAudioRegionsWithoutTransients;
- (id)currentFlexMarker;
- (void)setCurrentFlexMarker:(id)arg1;
- (void)updateFlexMarkerBypassStatesInTracks:(id)arg1;
- (void)updateFlexModes;
- (void)setFlexEnabled:(_Bool)arg1;
- (_Bool)isFlexEnabled;
- (void)setMediaProperties:(id)arg1;
- (id)mediaProperties;
- (void)moveSelectedChords:(long long)arg1;
- (void)deleteSelectedChords;
- (void)selectAllChords;
- (void)deselectAllChords;
- (void)_setAllChordsSelected:(_Bool)arg1;
- (void)clearChordTrack;
- (void)setCurrentActiveChordTrackingEnabled:(_Bool)arg1;
- (_Bool)currentActiveChordTrackingEnabled;
- (void)_updateCurrentActiveChord:(_Bool)arg1;
- (id)currentActiveChord;
- (id)chordForClock:(long long)arg1;
- (long long)indexOfChordForClock:(long long)arg1;
- (id)chords;
- (void)updateChords;
- (id)addNewChordAtClock:(long long)arg1;
- (id)addChordWithCChordRef:(void *)arg1 atClock:(long long)arg2;
- (id)_updateChords:(_Bool)arg1;
- (void)resetUIMarkedFlagsOfAllEventsInRegionsOnTrack:(id)arg1;
- (void)deselectAllEvents;
- (_Bool)hasSelectedEventOfType:(unsigned long long)arg1;
- (void)updateCurrentEvent;
- (void)setCurrentEvent:(id)arg1 index:(unsigned long long)arg2;
- (void)setCurrentEvent:(id)arg1;
- (unsigned long long)currentEventIndex;
- (id)currentEvent;
- (void)operationOfTrack:(id)arg1 operation:(int)arg2 andType:(unsigned long long)arg3;
- (long long)minAndMaxOfNoteEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 minValue:(long long *)arg4 maxValue:(long long *)arg5 onlySelected:(_Bool)arg6 clampToRegionBounds:(_Bool)arg7;
- (void)minAndMaxClockOfSelectedEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 type:(unsigned long long)arg4 andFilter:(struct _LgEventFilter *)arg5;
- (void)minAndMaxClockOfEventsOfTrack:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 type:(unsigned long long)arg4 andFilter:(struct _LgEventFilter *)arg5;
- (void)updateSelectedEventsOfTrack:(id)arg1 andType:(unsigned long long)arg2;
- (_Bool)hasTrackEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (_Bool)hasTrackSelectedEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countSelectedEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)deselectAllEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)selectAllEventsOfTrack:(id)arg1 andType:(unsigned long long)arg2;
- (void)selectAllEventsOfTrack:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3 startClock:(long long)arg4 endClock:(long long)arg5;
- (id)createArrayOfTrackEventsFromTrack:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfEventsFromTrack:(id)arg1 ofType:(unsigned long long)arg2 withFilter:(struct _LgEventFilter *)arg3 betweenStartClock:(long long)arg4 andEndClock:(long long)arg5 scoreHandle:(struct _LgScore *)arg6;
- (id)createArrayOfEventsFromTrack:(id)arg1 ofType:(unsigned long long)arg2 withFilter:(struct _LgEventFilter *)arg3 betweenStartClock:(long long)arg4 andEndClock:(long long)arg5;
- (_Bool)faderEventsControlWAHPedal:(id)arg1 onGuitarTrack:(id)arg2;
- (void)deleteFaderEventsInRegionsOnTrack:(id)arg1 withUndoString:(id)arg2;
- (id)collectFaderEventNumbersInRegionsOnTrack:(id)arg1;
- (_Bool)regionsOnTrackContainFaderEvents:(id)arg1;
- (void)deleteFaderEventsInSelectedRegionsWithUndoString:(id)arg1;
- (id)collectFaderEventNumbersInSelectedRegions;
- (_Bool)selectedRegionsContainFaderEvents;
- (_Bool)selectEventsFromRegion:(id)arg1 startClock:(long long)arg2 endClock:(long long)arg3 lowerValue:(long long)arg4 upperValue:(long long)arg5 minNoteLength:(long long)arg6 withFilter:(struct _LgEventFilter *)arg7 withMode:(int)arg8 ofType:(unsigned long long)arg9 Mark:(int)arg10 singleSelection:(_Bool)arg11;
- (void)operationOfRegion:(id)arg1 operation:(int)arg2 andType:(unsigned long long)arg3;
- (void)minAndMaxOfNoteEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 minValue:(long long *)arg4 maxValue:(long long *)arg5 onlySelected:(_Bool)arg6;
- (void)minAndMaxClockOfSelectedEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 andType:(unsigned long long)arg4;
- (void)minAndMaxClockOfEventsOfRegion:(id)arg1 minClock:(long long *)arg2 maxClock:(long long *)arg3 andType:(unsigned long long)arg4;
- (void)updateSelectedEventsOfRegion:(id)arg1 andType:(unsigned long long)arg2;
- (void)minVelocityofSelectedNoteEvents:(long long *)arg1 andMaxVelocity:(long long *)arg2 inRegion:(id)arg3;
- (_Bool)hasRegionEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (_Bool)hasRegionSelectedEvents:(id)arg1 ofType:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (unsigned long long)countSelectedEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)deselectAllEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (void)selectAllEventsOfRegion:(id)arg1 andType:(unsigned long long)arg2;
- (void)selectAllEventsOfRegion:(id)arg1 type:(unsigned long long)arg2 andFilter:(struct _LgEventFilter *)arg3;
- (id)createArrayOfTransientFromRegion:(id)arg1 betweenStartClock:(long long)arg2 andEndClock:(long long)arg3;
- (id)createArrayOfFlexEventsFromRegion:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfNoteEventsFromRegion:(id)arg1 withFilter:(struct _LgEventFilter *)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (id)createArrayOfControllerEventsFromRegion:(id)arg1 withControllerNumber:(CDStruct_5115be14)arg2 betweenStartClock:(long long)arg3 andEndClock:(long long)arg4;
- (int)c_UpdateCurrentEvent:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_UpdateSelectedEventCounter:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_UpdateSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxOfNotes:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxClockOfEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxClockOfSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_MinMaxVelocityOfSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_Select:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_Deselect:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_AutomationHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_ControllerHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_ScoreHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_NoteHitTest:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CollectFlexEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CollectTransients:(struct _LgSongIterator *)arg1:(const struct _LgTransient *)arg2;
- (int)c_CollectEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CountEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (int)c_CountSelectedEvents:(struct _LgSongIterator *)arg1:(const struct _LgEvent *)arg2;
- (void)afterEventIterate;
- (void)beforeEventIterate;
- (_Bool)isMoveAutomationDataEnabled;
- (void)setMoveAutomationDataEnabled:(_Bool)arg1;

@end

