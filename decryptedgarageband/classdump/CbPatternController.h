//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CbRegionEventTransfer, DfDocument, DfTrack, NSArray, NSDictionary, NSMutableArray, NSMutableString, NSString;
@protocol CbPatternStatusDisplayer, NSObject><CbMidiInputProtocol;

@interface CbPatternController : NSObject
{
    DfDocument *_document;
    DfTrack *_track;
    NSString *_timeSignature;
    NSMutableString *_keyString;
    NSMutableString *_grooveSetName;
    NSMutableString *_grooveCategoryName;
    NSString *_grooveSetsFactoryRootPath;
    id <NSObject><CbMidiInputProtocol> _midiDelegate;
    id <CbPatternStatusDisplayer> _statusDisplay;
    _Bool _disableStatusDisplayUpdates;
    CbRegionEventTransfer *_eventTransfer;
    NSArray *_suffixArray;
    NSMutableArray *_grooveSetPathsArray;
    NSDictionary *_enharmonicEquivDict;
    NSArray *_timeSignatureArray;
    _Bool _useZippedMIDI;
}

+ (id)grooveSetBasePathForGrooveCategoryName:(id)arg1 grooveSetName:(id)arg2;
@property(nonatomic) _Bool useZippedMIDI; // @synthesize useZippedMIDI=_useZippedMIDI;
@property(copy, nonatomic) NSString *grooveCategoryName; // @synthesize grooveCategoryName=_grooveCategoryName;
@property(nonatomic) __weak DfTrack *track; // @synthesize track=_track;
@property(nonatomic) __weak DfDocument *document; // @synthesize document=_document;
@property(copy, nonatomic) NSString *grooveSetName; // @synthesize grooveSetName=_grooveSetName;
@property(copy, nonatomic) NSString *keyString; // @synthesize keyString=_keyString;
@property(nonatomic) __weak id <CbPatternStatusDisplayer> statusDisplay; // @synthesize statusDisplay=_statusDisplay;
@property(nonatomic) __weak id <NSObject><CbMidiInputProtocol> midiDelegate; // @synthesize midiDelegate=_midiDelegate;
- (void).cxx_destruct;
- (void)switchToTrack:(id)arg1;
- (_Bool)itemExistsAtPath:(id)arg1 isDirectory:(_Bool)arg2;
- (void)sendDiagnosticsInfoWithTouchCount:(int)arg1 filePath:(id)arg2;
- (void)stop;
- (int)commitCurrentGrooveTransferData:(_Bool)arg1;
- (void)removeGrooveEventsWithUID:(unsigned short)arg1;
- (id)enharmonicEquivalent:(id)arg1;
- (unsigned short)startGrooveWithZipInfo:(id)arg1 transpose:(int)arg2 chordInfo:(id)arg3 mb3sToFilter:(id)arg4;
- (unsigned short)startGrooveFromMidiFile:(id)arg1 transpose:(int)arg2 chordInfo:(id)arg3 mb3sToFilter:(id)arg4;
- (unsigned short)startGrooveWithZipInfo:(id)arg1 transpose:(int)arg2 chordInfo:(id)arg3;
- (unsigned short)startGrooveFromMidiFile:(id)arg1 transpose:(int)arg2 chordInfo:(id)arg3;
- (unsigned short)startGrooveWithZipInfo:(id)arg1 transpose:(int)arg2;
- (unsigned short)startGrooveFromMidiFile:(id)arg1 transpose:(int)arg2;
- (void)_updateGrooveSetPathsArray;
- (_Bool)altsShouldExistForChord:(id)arg1;
- (void)cacheGrooves;
- (void)handleTimeSignatureChange;
- (void)updateForChordInfo:(id)arg1;
- (void)setGrooveIndex:(unsigned long long)arg1;
- (void)_updateTimeSignature;
- (void)dealloc;
- (id)initWithGrooveCategoryName:(id)arg1 grooveSetName:(id)arg2 keyString:(id)arg3 document:(id)arg4 track:(id)arg5;
- (id)currentGrooveSetBasePath;

@end

