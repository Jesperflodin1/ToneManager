//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "ABRequestListenerDelegate-Protocol.h"
#import "DBLocalEndpointDelegate-Protocol.h"

@class ABAPIKeyValidator, ABButtonTrigger, ABConnectionGraph, ABConnectionPanel, ABIAALaunchURLManager, ABMIDIEndpointManager, ABPeer, ABPeerResourceHost, ABPeerResourceManager, ABPeerStateReceiver, ABPeerStateSender, ABRegistry, ABRequestResponseManager, ABSignatureValidator, ABTerminationManager, DBLocalEndpoint, DBRegistry, NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSURL;
@protocol ABAudiobusControllerStateIODelegate;

@interface ABAudiobusController : NSObject <DBLocalEndpointDelegate, ABRequestListenerDelegate>
{
    NSMutableArray *_audioSenderPorts;
    NSMutableArray *_audioReceiverPorts;
    NSMutableArray *_audioFilterPorts;
    NSMutableArray *_MIDISenderPorts;
    NSMutableArray *_MIDIFilterPorts;
    NSMutableArray *_MIDIReceiverPorts;
    NSMutableArray *_virtualPorts;
    _Bool _wasConnected;
    _Bool _wasConnectedViaAudiobus;
    _Bool _wasConnectedViaIAA;
    _Bool _wasConnectedViaABMIDI;
    _Bool _inAudiobusConnectionGraph;
    _Bool _invalidated;
    NSArray *_appsToBeLogged;
    _Bool _loadAppIconWithPeerResources;
    NSMutableDictionary *_kvoObservers;
    _Bool _configuredLink;
    ABTerminationManager *_terminationManager;
    ABIAALaunchURLManager *_iaaLaunchURLManager;
    ABAPIKeyValidator *_apiKeyValidator;
    _Bool _shouldDisableCoreMIDISend;
    _Bool _shouldDisableCoreMIDISendPrivate;
    _Bool _shouldDisableCoreMIDIReceive;
    _Bool _shouldDisableCoreMIDIReceivePrivate;
    _Bool _shouldHideIAATransportPanel;
    NSArray *_previousGraphNodes;
    _Bool _graphUpdateInProgress;
    ABConnectionGraph *_latestConnectionGraph;
    _Bool _developerMode;
    _Bool _allowsConnectionsToSelf;
    _Bool _memberOfActiveAudiobusSession;
    _Bool _audiobusAppRunning;
    _Bool _inForeground;
    _Bool _hideConnectionPanel;
    _Bool _launchPeersOverAudiobus;
    _Bool _appIsMultitrackAudioHost;
    NSSet *_connectedPeers;
    NSSet *_connectedPorts;
    id <ABAudiobusControllerStateIODelegate> _stateIODelegate;
    CDUnknownBlockType _showInterAppAudioTransportPanelBlock;
    CDUnknownBlockType _enableReceivingCoreMIDIBlock;
    CDUnknownBlockType _enableSendingCoreMIDIBlock;
    DBLocalEndpoint *_localEndpoint;
    NSURL *_launchURL;
    ABPeer *_controllerPeer;
    DBRegistry *_registry;
    ABPeer *_selfPeer;
    ABRegistry *_peerRegistry;
    NSMutableSet *_initializingPeers;
    NSMutableSet *_remoteControlPeers;
    NSMutableArray *_triggers;
    NSMutableArray *_remoteTriggers;
    NSArray *_apps;
    ABPeerResourceHost *_resourceHost;
    ABPeerResourceManager *_resourceManager;
    ABConnectionPanel *_connectionPanel;
    ABConnectionGraph *_connectionGraph;
    NSMutableSet *_rejectedIdentifiers;
    NSString *_incomingIdentifier;
    ABButtonTrigger *_filterBypassTrigger;
    ABButtonTrigger *_playPauseTrigger;
    ABPeerStateSender *_stateSender;
    ABPeerStateReceiver *_stateReceiver;
    ABSignatureValidator *_signatureValidator;
    ABMIDIEndpointManager *_MIDIEndpointManager;
    ABRequestResponseManager *_requestResponseManager;
}

+ (void)sendConnectionStateAckWithStatus:(unsigned char)arg1 sequence:(unsigned char)arg2 toPeer:(id)arg3;
+ (id)createConnectionStateAckMessageWithStatus:(unsigned char)arg1 sequence:(unsigned char)arg2;
+ (unsigned long long)majorSDKVersion;
+ (void)resetAllPeeredConnections;
+ (void)initialize;
@property(nonatomic) _Bool appIsMultitrackAudioHost; // @synthesize appIsMultitrackAudioHost=_appIsMultitrackAudioHost;
@property(readonly, nonatomic) ABRequestResponseManager *requestResponseManager; // @synthesize requestResponseManager=_requestResponseManager;
@property(retain, nonatomic) ABMIDIEndpointManager *MIDIEndpointManager; // @synthesize MIDIEndpointManager=_MIDIEndpointManager;
@property(nonatomic) _Bool launchPeersOverAudiobus; // @synthesize launchPeersOverAudiobus=_launchPeersOverAudiobus;
@property(nonatomic) _Bool hideConnectionPanel; // @synthesize hideConnectionPanel=_hideConnectionPanel;
@property(nonatomic) _Bool inForeground; // @synthesize inForeground=_inForeground;
@property(retain, nonatomic) ABSignatureValidator *signatureValidator; // @synthesize signatureValidator=_signatureValidator;
@property(retain, nonatomic) ABPeerStateReceiver *stateReceiver; // @synthesize stateReceiver=_stateReceiver;
@property(retain, nonatomic) ABPeerStateSender *stateSender; // @synthesize stateSender=_stateSender;
@property(retain, nonatomic) ABButtonTrigger *playPauseTrigger; // @synthesize playPauseTrigger=_playPauseTrigger;
@property(retain, nonatomic) ABButtonTrigger *filterBypassTrigger; // @synthesize filterBypassTrigger=_filterBypassTrigger;
@property(retain, nonatomic) NSString *incomingIdentifier; // @synthesize incomingIdentifier=_incomingIdentifier;
@property(retain, nonatomic) NSMutableSet *rejectedIdentifiers; // @synthesize rejectedIdentifiers=_rejectedIdentifiers;
@property(retain, nonatomic) ABConnectionGraph *connectionGraph; // @synthesize connectionGraph=_connectionGraph;
@property(retain, nonatomic) ABConnectionPanel *connectionPanel; // @synthesize connectionPanel=_connectionPanel;
@property(retain, nonatomic) ABPeerResourceManager *resourceManager; // @synthesize resourceManager=_resourceManager;
@property(retain, nonatomic) ABPeerResourceHost *resourceHost; // @synthesize resourceHost=_resourceHost;
@property(retain, nonatomic) NSArray *apps; // @synthesize apps=_apps;
@property(retain, nonatomic) NSMutableArray *remoteTriggers; // @synthesize remoteTriggers=_remoteTriggers;
@property(retain, nonatomic) NSMutableArray *triggers; // @synthesize triggers=_triggers;
@property(readonly, nonatomic) NSMutableSet *remoteControlPeers; // @synthesize remoteControlPeers=_remoteControlPeers;
@property(retain, nonatomic) NSMutableSet *initializingPeers; // @synthesize initializingPeers=_initializingPeers;
@property(retain, nonatomic) ABRegistry *peerRegistry; // @synthesize peerRegistry=_peerRegistry;
@property(retain, nonatomic) ABPeer *selfPeer; // @synthesize selfPeer=_selfPeer;
@property(readonly, nonatomic) DBRegistry *registry; // @synthesize registry=_registry;
@property(retain, nonatomic) ABPeer *controllerPeer; // @synthesize controllerPeer=_controllerPeer;
@property(retain, nonatomic) NSURL *launchURL; // @synthesize launchURL=_launchURL;
@property(retain, nonatomic) DBLocalEndpoint *localEndpoint; // @synthesize localEndpoint=_localEndpoint;
@property(copy, nonatomic) CDUnknownBlockType enableSendingCoreMIDIBlock; // @synthesize enableSendingCoreMIDIBlock=_enableSendingCoreMIDIBlock;
@property(copy, nonatomic) CDUnknownBlockType enableReceivingCoreMIDIBlock; // @synthesize enableReceivingCoreMIDIBlock=_enableReceivingCoreMIDIBlock;
@property(copy, nonatomic) CDUnknownBlockType showInterAppAudioTransportPanelBlock; // @synthesize showInterAppAudioTransportPanelBlock=_showInterAppAudioTransportPanelBlock;
@property(nonatomic) id <ABAudiobusControllerStateIODelegate> stateIODelegate; // @synthesize stateIODelegate=_stateIODelegate;
@property(nonatomic) _Bool audiobusAppRunning; // @synthesize audiobusAppRunning=_audiobusAppRunning;
@property(nonatomic) _Bool memberOfActiveAudiobusSession; // @synthesize memberOfActiveAudiobusSession=_memberOfActiveAudiobusSession;
@property(retain, nonatomic) NSSet *connectedPorts; // @synthesize connectedPorts=_connectedPorts;
@property(retain, nonatomic) NSSet *connectedPeers; // @synthesize connectedPeers=_connectedPeers;
@property(nonatomic) _Bool allowsConnectionsToSelf; // @synthesize allowsConnectionsToSelf=_allowsConnectionsToSelf;
@property(readonly, nonatomic) NSArray *audioReceiverPortsIncludingIntermediatePorts; // @synthesize audioReceiverPortsIncludingIntermediatePorts=_audioReceiverPorts;
@property(readonly, nonatomic) NSArray *audioSenderPortsIncludingIntermediatePorts; // @synthesize audioSenderPortsIncludingIntermediatePorts=_audioSenderPorts;
- (void).cxx_destruct;
- (void)peerWillTerminate:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (id)didReceiveRequestWithName:(id)arg1 subName:(id)arg2 data:(id)arg3;
- (void)updateShouldDisableCoreMIDIReceive;
- (_Bool)shouldDisableCoreMIDIReceive;
- (void)updateShouldDisableCoreMIDISend;
- (_Bool)shouldDisableCoreMIDISend;
- (void)executeUpdateShouldHideInterAppAudioTransportPanel;
- (void)updateShouldHideInterAppAudioTransportPanel;
- (_Bool)shouldHideInterAppAudioTransportPanel;
- (void)didReceiveMessageDictionary:(id)arg1 fromPeer:(id)arg2;
- (void)scheduledTimerFired:(id)arg1;
- (id)scheduledTimerWithTimeInterval:(double)arg1 repeats:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeObservationsOfObject:(id)arg1 forKeyPath:(id)arg2;
- (void)peerObservationForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observePeer:(id)arg1 property:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (id)observersForPeer:(id)arg1 keyPath:(id)arg2;
- (id)observersForPeer:(id)arg1;
- (void)iconOfPeerDicChange:(id)arg1;
- (void)peerInfoDictReceived:(id)arg1 fromPeer:(id)arg2;
- (void)didChangeValueForKeyAudiobusConnected;
- (void)willChangeValueForKeyAudiobusConnected;
- (_Bool)controllerPeerIsAudiobus3AndHigher;
- (_Bool)controllerPeerIsAudiobus2;
- (void)updateFeatures;
- (id)peerWithName:(id)arg1 uniqueID:(id)arg2;
- (_Bool)isLocallyConnectedAudiobusRemote;
- (_Bool)isAudiobusRemote;
- (_Bool)isAudiobus;
- (_Bool)portNameIsUnique:(id)arg1;
- (id)activePortsConnectedToPeer:(id)arg1;
- (id)triggerMatchingIdentifier:(unsigned int)arg1;
- (id)findLaunchURL;
- (void)loadPeerIconResourceForPeer:(id)arg1 fromPeer:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)hasConnectedPortSharingAudioUnit:(struct OpaqueAudioComponentInstance *)arg1 withPort:(id)arg2;
- (void)updatePortConnectionStatus;
- (id)destinationsCompoundTitleForPeers:(id)arg1 ports:(id)arg2;
- (id)sourcesCompoundTitleForPeers:(id)arg1 ports:(id)arg2;
- (id)compoundTitleBasedOnPort:(id)arg1;
- (id)compoundIconForPeers:(id)arg1 ports:(id)arg2 showsDestinations:(_Bool)arg3;
- (id)intermediateReceiverNodeForIntermediateSenderNode:(id)arg1 inGraph:(id)arg2;
- (id)peersInPorts:(id)arg1;
- (void)updateSourcesAndDestinationsRecursive:(id)arg1;
- (id)removeAudiobusNodesFromList:(id)arg1;
- (id)keepNodesOfType:(id)arg1 fromNodes:(id)arg2;
- (id)sortNodesByType:(id)arg1;
- (void)performAudiobusPeeringWithPeer:(id)arg1 identifier:(id)arg2;
- (void)completeGraphUpdateForConnectionGraph:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)makeConnectionsForConnectionGraph:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unmutePorts:(CDUnknownBlockType)arg1;
- (void)mutePortsToBeMovedOrDeleted:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateAssociatedGraphNodes:(id)arg1;
- (void)applyConnectionGraph:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)capabilities;
- (void)writePortMetadataPeer:(id)arg1 toDictionary:(id)arg2;
- (id)registrationMetadata;
- (void)updateExtraTriggerInfo:(id)arg1;
- (void)updateRegistrationMetadata;
- (void)requestPeerImageResources:(id)arg1;
- (id)allResourcesToLoadForPeer:(id)arg1;
- (_Bool)isRemoteControl;
- (void)triggerAttributeChanged:(id)arg1;
- (void)executeReportPeerAttributesChanged:(id)arg1;
- (void)reportPeerAttributesChanged:(id)arg1;
- (void)respondToPortConnectionChange;
- (void)updateLinkState;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)audioEngineWillStart;
- (void)iaaHostPing:(id)arg1;
- (void)iaaHostStatusUpdate:(id)arg1;
- (void)peerRegistryRemovedPeer:(id)arg1;
- (void)peerRegistryAddedPeer:(id)arg1;
- (void)peerDidDisappear:(id)arg1;
- (void)peerDidDisappearNotification:(id)arg1;
- (void)peerDidAppear:(id)arg1;
- (void)peerDidAppearNotification:(id)arg1;
- (void)handleMessageBytes:(const char *)arg1 length:(unsigned long long)arg2 fromPeer:(id)arg3;
- (void)endpoint:(id)arg1 didReceiveBytes:(const char *)arg2 length:(unsigned long long)arg3 fromPeer:(id)arg4;
- (void)applicationWillEnterBackground:(id)arg1;
- (void)applicationDidEnterForeground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)developerModeDidChange;
- (void)controllerPeerMetadataDidChange;
- (void)addPeer:(id)arg1;
@property(nonatomic) _Bool enableNetwork; // @dynamic enableNetwork;
- (void)setNeedsStatusBarAppearanceUpdate;
@property(nonatomic) int connectionPanelPosition; // @dynamic connectionPanelPosition;
- (void)activatePort:(id)arg1;
- (void)activatePeer:(id)arg1 afterDelay:(double)arg2 completion:(CDUnknownBlockType)arg3 launchAudiobusFirst:(_Bool)arg4;
- (void)activatePeer:(id)arg1 afterDelay:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)activatePeer:(id)arg1;
- (void)executeActivatePeer:(id)arg1;
@property(readonly, nonatomic) NSSet *peers; // @dynamic peers;
@property(readonly, nonatomic) _Bool interAppAudioConnected;
@property(readonly, nonatomic) _Bool audiobusMIDIPortConnected;
@property(readonly, nonatomic) _Bool audiobus3AndHigherConnected;
@property(readonly, nonatomic) _Bool audiobus2Connected;
@property(readonly, nonatomic) _Bool audiobusConnected;
@property(readonly, nonatomic) _Bool connected; // @dynamic connected;
- (void)removeVirtualPort:(id)arg1;
- (void)addVirtualPort:(id)arg1;
@property(readonly, nonatomic) NSArray *MIDIReceiverPorts;
- (id)MIDIReceiverPortNamed:(id)arg1;
- (void)sortMIDIReceiverPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeMIDIReceiverPort:(id)arg1;
- (void)addMIDIReceiverPort:(id)arg1;
@property(readonly, nonatomic) NSArray *MIDIFilterPorts;
- (id)MIDIFilterPortNamed:(id)arg1;
- (void)sortMIDIFilterPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeMIDIFilterPort:(id)arg1;
- (void)addMIDIFilterPort:(id)arg1;
- (void)enableLocalOnForAllMIDISenderPorts;
@property(readonly, nonatomic) NSArray *MIDISenderPorts;
- (id)MIDISenderPortNamed:(id)arg1;
- (void)sortMIDISenderPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeMIDISenderPort:(id)arg1;
- (void)addMIDISenderPort:(id)arg1;
- (void)executeCheckMIDIPorts;
- (void)checkMIDIPorts;
- (void)updateMIDIEndpointManager;
- (id)MIDIPorts;
@property(readonly, nonatomic) NSArray *audioFilterPorts;
- (id)audioFilterPortNamed:(id)arg1;
- (void)sortAudioFilterPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeAudioFilterPort:(id)arg1;
- (void)addAudioFilterPort:(id)arg1;
@property(readonly, nonatomic) NSArray *audioReceiverPorts;
- (id)audioReceiverPortNamed:(id)arg1;
- (void)sortAudioReceiverPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeAudioReceiverPort:(id)arg1;
- (void)addAudioReceiverPort:(id)arg1;
@property(readonly, nonatomic) NSArray *audioSenderPorts;
- (id)audioSenderPortNamed:(id)arg1;
- (void)sortAudioSenderPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeAudioSenderPort:(id)arg1;
- (void)addAudioSenderPort:(id)arg1;
- (void)updateConnectionGraphWithPort:(id)arg1;
- (id)portWithUniqueID:(unsigned int)arg1;
- (id)portWithName:(id)arg1;
- (id)allPorts;
@property(readonly, nonatomic) NSArray *filterPorts; // @dynamic filterPorts;
- (id)filterPortNamed:(id)arg1;
- (void)sortFilterPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeFilterPort:(id)arg1;
- (void)addFilterPort:(id)arg1;
@property(readonly, nonatomic) NSArray *receiverPorts; // @dynamic receiverPorts;
- (id)receiverPortNamed:(id)arg1;
- (void)sortReceiverPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeReceiverPort:(id)arg1;
- (void)addReceiverPort:(id)arg1;
@property(readonly, nonatomic) NSArray *senderPorts; // @dynamic senderPorts;
- (id)senderPortNamed:(id)arg1;
- (void)sortSenderPortsUsingComparitor:(CDUnknownBlockType)arg1;
- (void)removeSenderPort:(id)arg1;
- (void)addSenderPort:(id)arg1;
- (id)audiobusTriggersForPeer:(id)arg1;
- (void)addAudiobusTrigger:(id)arg1 forPeer:(id)arg2;
- (void)removeTrigger:(id)arg1;
- (void)addTrigger:(id)arg1 isRemote:(_Bool)arg2;
- (void)addTrigger:(id)arg1 isLocalOnly:(_Bool)arg2;
- (void)addRemoteTriggerMatrix:(id)arg1 rows:(unsigned long long)arg2 cols:(unsigned long long)arg3 transposable:(_Bool)arg4;
- (void)addRemoteTriggerMatrix:(id)arg1 rows:(unsigned long long)arg2 cols:(unsigned long long)arg3;
- (void)addLocalOnlyTrigger:(id)arg1;
- (void)addRemoteTrigger:(id)arg1;
- (void)addTrigger:(id)arg1;
- (id)appsToBeLogged;
- (void)setAppsToBeLogged:(id)arg1;
- (id)createConnectionPanel;
- (id)createDBRegistry:(id)arg1;
- (id)createDBLocalEndpoint;
- (void)invalidate;
- (void)dealloc;
- (id)initWithApiKey:(id)arg1 skipAPIKeyCheck:(_Bool)arg2;
- (id)initWithApiKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

