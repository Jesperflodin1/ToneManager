//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "CALayerDelegate-Protocol.h"
#import "MAVeControlProtocol-Protocol.h"
#import "MAVeDrawingProtocol-Protocol.h"
#import "MAVeResponderProtocol-Protocol.h"
#import "MAVeScalablePropertyProtocol-Protocol.h"
#import "MAVeValueHostProtocol-Protocol.h"

@class CALayer, NSDictionary, NSMutableDictionary, NSMutableSet, NSString;
@protocol MAAssetManagerProtocol><MAAssetManagerFilterProtocol><MAAssetManagerColorProtocol><MAAssetManagerFontProtocol><MAAssetManagerEditorProtocol><MAAssetManagerDebugProtocol, MAVeValueClient, NSObject;

@interface MAVeElementBase : NSObject <MAVeValueHostProtocol, MAVeScalablePropertyProtocol, MAVeResponderProtocol, MAVeDrawingProtocol, MAVeControlProtocol, CALayerDelegate>
{
    NSMutableDictionary *_values;
    _Bool _snapsToIntegerValues;
    _Bool _isLiveResize;
    _Bool _inDealloc;
    _Bool _displayDefaultDisabled;
    NSString *_assetSetPath;
    NSString *_resourceBundleID;
    id <MAAssetManagerProtocol><MAAssetManagerFilterProtocol><MAAssetManagerColorProtocol><MAAssetManagerFontProtocol><MAAssetManagerEditorProtocol><MAAssetManagerDebugProtocol> _assetManager;
    id <NSObject> _target;
    SEL _action;
    unsigned long long _actionTriggerMask;
    CALayer *_contentLayer;
    unsigned long long _triggerMask;
    CALayer *_rootLayer;
    id <MAVeValueClient> _valueClient;
    NSMutableDictionary *_designParameters;
    NSMutableDictionary *_scalingRules;
    NSMutableDictionary *_scaledValues;
    double _scaleFactor;
    long long _savedTriggerState;
    NSMutableSet *_observedValuesToIgnore;
}

+ (Class)contentLayerClass;
@property(retain, nonatomic) NSMutableSet *observedValuesToIgnore; // @synthesize observedValuesToIgnore=_observedValuesToIgnore;
@property long long savedTriggerState; // @synthesize savedTriggerState=_savedTriggerState;
@property(nonatomic) _Bool displayDefaultDisabled; // @synthesize displayDefaultDisabled=_displayDefaultDisabled;
@property(nonatomic) _Bool inDealloc; // @synthesize inDealloc=_inDealloc;
@property(nonatomic) double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property(retain, nonatomic) NSMutableDictionary *scaledValues; // @dynamic scaledValues;
@property(retain, nonatomic) NSMutableDictionary *scalingRules; // @dynamic scalingRules;
@property(retain, nonatomic) NSMutableDictionary *designParameters; // @dynamic designParameters;
@property(nonatomic) id <MAVeValueClient> valueClient; // @dynamic valueClient;
@property(nonatomic) __weak CALayer *rootLayer; // @synthesize rootLayer=_rootLayer;
@property(nonatomic) unsigned long long triggerMask; // @synthesize triggerMask=_triggerMask;
@property(retain, nonatomic) CALayer *contentLayer; // @synthesize contentLayer=_contentLayer;
@property(nonatomic) unsigned long long actionTriggerMask; // @synthesize actionTriggerMask=_actionTriggerMask;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) __weak id <NSObject> target; // @synthesize target=_target;
@property(nonatomic) __weak id <MAAssetManagerProtocol><MAAssetManagerFilterProtocol><MAAssetManagerColorProtocol><MAAssetManagerFontProtocol><MAAssetManagerEditorProtocol><MAAssetManagerDebugProtocol> assetManager; // @synthesize assetManager=_assetManager;
@property(copy, nonatomic) NSString *resourceBundleID; // @synthesize resourceBundleID=_resourceBundleID;
@property(copy, nonatomic) NSString *assetSetPath; // @synthesize assetSetPath=_assetSetPath;
@property(nonatomic) _Bool isLiveResize; // @synthesize isLiveResize=_isLiveResize;
- (void).cxx_destruct;
- (double)convertValue:(double)arg1 toModuloEqualTo:(double)arg2 scale:(double)arg3;
- (void)layoutLayer:(id)arg1 pixelAccuratelyWithSize:(struct CGSize)arg2 position:(struct CGPoint)arg3 anchorPointFromSize:(CDUnknownBlockType)arg4;
- (void)layoutLayer:(id)arg1 pixelAccuratelyWithSize:(struct CGSize)arg2 position:(struct CGPoint)arg3;
- (void)setNeedsLayout;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)decrementValue;
- (void)incrementValue;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
@property(nonatomic) struct CGPoint design_Origin;
@property(nonatomic) struct CGSize design_Size;
- (void)liveResizeChanged;
- (void)abortValueChange;
- (void)endValueChange;
- (void)beginValueChange;
- (void)sendAction:(long long)arg1;
- (void)updateLayers;
- (void)dealloc;
- (id)init;
- (void)setupLayersWithRootLayer:(id)arg1;
- (id)createLayerOfClass:(Class)arg1;
- (id)createLayer;
- (void)assetSetHasChanged;
- (void)resourceBundleIDHasChanged;
- (id)assetSetForPath:(id)arg1;
- (void)valueDidChangeEnabledState:(id)arg1 oldState:(_Bool)arg2;
- (void)valueDidChangeUnit:(id)arg1 oldUnit:(id)arg2;
- (void)valueDidChangeStringValue:(id)arg1 oldStringValue:(id)arg2;
- (void)valueDidChangeDefaultValue:(id)arg1 oldDefaultValue:(double)arg2;
- (void)valueDidChangeMaxValue:(id)arg1 oldMaxValue:(double)arg2;
- (void)valueDidChangeMinValue:(id)arg1 oldMinValue:(double)arg2;
- (void)valueDidChangeValue:(id)arg1 oldValue:(double)arg2;
- (void)abortValueChange:(id)arg1;
- (void)endValueChange:(id)arg1;
- (void)valueChange:(id)arg1;
- (void)stringValueChange:(id)arg1;
- (void)beginValueChange:(id)arg1;
- (id)valueIDForValue:(id)arg1;
- (void)decrementValueWithID:(id)arg1;
- (void)incrementValueWithID:(id)arg1;
- (id)valueWithID:(id)arg1;
- (void)removeValueWithID:(id)arg1;
- (void)removeAllValues;
@property(readonly, nonatomic) NSDictionary *dirtyValues;
@property(readonly, nonatomic) NSDictionary *allValues;
- (id)addValue:(id)arg1 withID:(id)arg2;
@property(retain, nonatomic) NSMutableDictionary *values;
- (id)valueIDsForEvent:(id)arg1;
- (void)prepareValues;
- (void)setUserInfo:(id)arg1 forValueWithID:(id)arg2;
- (void)setUnit:(id)arg1 forValueWithID:(id)arg2;
- (void)setStringValue:(id)arg1 forValueWithID:(id)arg2;
- (void)setValueIncrement:(double)arg1 forValueWithID:(id)arg2;
- (void)setNormedValue:(double)arg1 forValueWithID:(id)arg2;
- (void)setMinValue:(double)arg1 forValueWithID:(id)arg2;
- (void)setMaxValue:(double)arg1 forValueWithID:(id)arg2;
- (void)setIntegerValue:(long long)arg1 forValueWithID:(id)arg2;
- (void)setFloatValue:(float)arg1 forValueWithID:(id)arg2;
- (void)setDoubleValue:(double)arg1 forValueWithID:(id)arg2;
- (void)setDefaultValue:(double)arg1 forValueWithID:(id)arg2;
- (void)setBoolValue:(_Bool)arg1 forValueWithID:(id)arg2;
- (id)userInfoOfValueWithID:(id)arg1;
- (id)unitOfValueWithID:(id)arg1;
- (id)stringValueOfValueWithID:(id)arg1;
- (double)valueIncrementWithID:(id)arg1;
- (void)resetInfValueForValueWithID:(id)arg1;
- (double)normedValueOfValueWithID:(id)arg1;
- (double)minValueOfValueWithID:(id)arg1;
- (double)maxValueOfValueWithID:(id)arg1;
- (long long)integerValueOfValueWithID:(id)arg1;
- (double)infValueOfValueWithID:(id)arg1;
- (float)floatValueOfValueWithID:(id)arg1;
- (double)representedValueOfValueWithID:(id)arg1;
- (double)doubleValueOfValueWithID:(id)arg1;
- (_Bool)valueWithIDDirty:(id)arg1;
- (double)defaultValueOfValueWithID:(id)arg1;
- (_Bool)boolValueOfValueWithID:(id)arg1;
@property(nonatomic) _Bool snapsToIntegerValues;
- (struct CGRect)scaleRectWithName:(id)arg1;
- (struct CGSize)scaleSizeWithName:(id)arg1;
- (struct CGSize)scaledSizeWithRuleForName:(id)arg1 designValue:(struct CGSize)arg2;
- (struct CGPoint)scalePointWithName:(id)arg1;
- (struct CGPoint)scaledPointWithRuleForName:(id)arg1 designValue:(struct CGPoint)arg2;
- (double)scaleFloatWithName:(id)arg1;
- (double)scaledFloatWithRuleForName:(id)arg1 designValue:(double)arg2;
- (id)objectInSegments:(id)arg1 forValueName:(id)arg2 ofType:(int)arg3;
- (id)colorWithCGColor:(struct CGColor *)arg1;
- (struct CGColor *)CGColorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

