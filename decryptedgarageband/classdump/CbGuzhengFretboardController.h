//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "CbSIIMFretboardController.h"

#import "CbGuzhengFretboardDelegateProtocol-Protocol.h"

@class CbGuzhengFretboardView, CbGuzhengIMViewController, NSMutableDictionary, UIColor;

@interface CbGuzhengFretboardController : CbSIIMFretboardController <CbGuzhengFretboardDelegateProtocol>
{
    _Bool _isMuted;
    int _tremoloSpeed;
    int _lastVelocityUsed;
    UIColor *_rootNoteHighlightColor;
    UIColor *_fourthScaleToneHighlightColor;
    UIColor *_stringTintColor;
    NSMutableDictionary *_interactionCountByStringIndex;
}

@property(nonatomic) _Bool isMuted; // @synthesize isMuted=_isMuted;
@property(nonatomic) int lastVelocityUsed; // @synthesize lastVelocityUsed=_lastVelocityUsed;
@property(nonatomic) int tremoloSpeed; // @synthesize tremoloSpeed=_tremoloSpeed;
@property(retain, nonatomic) NSMutableDictionary *interactionCountByStringIndex; // @synthesize interactionCountByStringIndex=_interactionCountByStringIndex;
@property(retain, nonatomic) UIColor *stringTintColor; // @synthesize stringTintColor=_stringTintColor;
@property(retain, nonatomic) UIColor *fourthScaleToneHighlightColor; // @synthesize fourthScaleToneHighlightColor=_fourthScaleToneHighlightColor;
@property(retain, nonatomic) UIColor *rootNoteHighlightColor; // @synthesize rootNoteHighlightColor=_rootNoteHighlightColor;
- (void).cxx_destruct;
- (id)_stringsWithInteractions;
- (void)_decrementInteractionAtIndex:(unsigned long long)arg1;
- (void)_incrementInteractionAtIndex:(unsigned long long)arg1;
- (int)_interactionCountAtIndex:(unsigned long long)arg1;
- (_Bool)_interactionsRemainAtIndex:(unsigned long long)arg1;
- (void)_silenceIfNoInteractionsRemainAndTimerNotRunningAtIndex:(unsigned long long)arg1;
- (void)_silenceIfNoRemainingInteractionsAtIndex:(unsigned long long)arg1;
- (void)_silenceIfTremoloAndNoRemainingInteractionsAtIndex:(unsigned long long)arg1;
- (void)sendTremoloVelocity:(int)arg1;
- (void)_handleTremoloStateChange:(_Bool)arg1;
- (void)_handleTremoloEnd;
- (void)_handleTremoloStart;
- (_Bool)_tremoloActive;
- (void)setTremoloVelocity:(int)arg1;
- (void)sendTremoloSpeed:(int)arg1;
- (id)_highlightColorArrayForRootNoteArray:(id)arg1 scaleToneCount:(unsigned long long)arg2;
- (void)_updateFretboardModelWithIntervals:(id)arg1 intervalOffset:(unsigned long long)arg2 rootNoteOfKey:(int)arg3;
- (void)updateScaleWithIntervals:(id)arg1 intervalOffset:(unsigned long long)arg2 rootNoteOfKey:(int)arg3;
- (void)_actuateString:(id)arg1 withViewAtIndex:(unsigned long long)arg2 withNoteValue:(unsigned long long)arg3 articulation:(long long)arg4 velocity:(int)arg5;
- (void)_handleStringTimerCallbackWithIndex:(unsigned long long)arg1;
- (void)_stopStrumAtIndex:(unsigned long long)arg1;
- (void)_playNoteAtStringIndex:(unsigned long long)arg1 articulation:(long long)arg2 velocity:(int)arg3;
- (void)_sendPitchBend:(int)arg1 toStringAtIndex:(unsigned long long)arg2;
- (void)_resetPitchBendAtStringIndex:(unsigned long long)arg1;
- (void)_resetPitchBendIfNoRemainingInteractionsAtIndex:(unsigned long long)arg1;
- (void)updateCoachingTips;
- (void)_silenceAllRingingNotes;
- (void)endMute;
- (void)startMute;
- (void)_silenceIfBentAndNoInteractionsRemainAtIndex:(unsigned long long)arg1;
- (void)interactionEndedWithLastIndex:(unsigned long long)arg1;
- (long long)_glissandoArticulationForStringAtIndex:(unsigned long long)arg1;
- (int)_velocityForPressure:(double)arg1;
- (void)interactionMovedToIndex:(unsigned long long)arg1 previousIndex:(unsigned long long)arg2 xOffset:(double)arg3 pressure:(double)arg4;
- (int)_adjustedVelocityForVelocity:(int)arg1;
- (void)interactionBeganAtIndex:(unsigned long long)arg1 zone:(unsigned long long)arg2 velocity:(int)arg3;
- (id)openStringNotes;
- (void)setFretboardModel:(id)arg1;
- (id)init;

// Remaining properties
@property(retain, nonatomic) CbGuzhengFretboardView *fretboardView; // @dynamic fretboardView;
@property(nonatomic) CbGuzhengIMViewController *rigController; // @dynamic rigController;

@end

