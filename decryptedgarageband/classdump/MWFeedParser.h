//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSXMLParserDelegate-Protocol.h"

@class MWFeedInfo, MWFeedItem, NSDateFormatter, NSDictionary, NSMutableData, NSMutableString, NSString, NSURL, NSURLConnection, NSURLRequest, NSXMLParser;
@protocol MWFeedParserDelegate;

@interface MWFeedParser : NSObject <NSXMLParserDelegate>
{
    id <MWFeedParserDelegate> delegate;
    NSURLConnection *urlConnection;
    NSMutableData *asyncData;
    NSString *asyncTextEncodingName;
    int connectionType;
    int feedParseType;
    NSXMLParser *feedParser;
    int feedType;
    NSDateFormatter *dateFormatterRFC822;
    NSDateFormatter *dateFormatterRFC3339;
    NSURL *url;
    _Bool aborted;
    _Bool parsing;
    _Bool stopped;
    _Bool failed;
    _Bool parsingComplete;
    _Bool hasEncounteredItems;
    NSString *pathOfElementWithXHTMLType;
    _Bool parseStructureAsContent;
    NSString *currentPath;
    NSMutableString *currentText;
    NSDictionary *currentElementAttributes;
    MWFeedItem *item;
    MWFeedInfo *info;
    NSURLRequest *request;
}

@property(readonly, nonatomic, getter=isParsing) _Bool parsing; // @synthesize parsing;
@property(readonly, nonatomic, getter=didFail) _Bool failed; // @synthesize failed;
@property(readonly, nonatomic, getter=isStopped) _Bool stopped; // @synthesize stopped;
@property(copy, nonatomic) NSString *pathOfElementWithXHTMLType; // @synthesize pathOfElementWithXHTMLType;
@property(retain, nonatomic) MWFeedInfo *info; // @synthesize info;
@property(retain, nonatomic) MWFeedItem *item; // @synthesize item;
@property(retain, nonatomic) NSDictionary *currentElementAttributes; // @synthesize currentElementAttributes;
@property(retain, nonatomic) NSMutableString *currentText; // @synthesize currentText;
@property(retain, nonatomic) NSString *currentPath; // @synthesize currentPath;
@property(retain, nonatomic) NSXMLParser *feedParser; // @synthesize feedParser;
@property(nonatomic) int feedParseType; // @synthesize feedParseType;
@property(nonatomic) int connectionType; // @synthesize connectionType;
@property(retain, nonatomic) NSString *asyncTextEncodingName; // @synthesize asyncTextEncodingName;
@property(retain, nonatomic) NSMutableData *asyncData; // @synthesize asyncData;
@property(retain, nonatomic) NSURLConnection *urlConnection; // @synthesize urlConnection;
@property(nonatomic) id <MWFeedParserDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request;
@property(copy, nonatomic) NSURL *url; // @synthesize url;
- (void).cxx_destruct;
- (_Bool)processAtomLink:(id)arg1 andAddToMWObject:(id)arg2;
- (_Bool)createEnclosureFromAttributes:(id)arg1 andAddToItem:(id)arg2;
- (void)dispatchFeedItemToDelegate;
- (void)dispatchFeedInfoToDelegate;
- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parserDidEndDocument:(id)arg1;
- (void)parserDidStartDocument:(id)arg1;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)parsingFailedWithErrorCode:(int)arg1 andDescription:(id)arg2;
- (void)parsingFinished;
- (void)stopParsing;
- (void)abortParsingEarly;
- (void)startParsingData:(id)arg1 textEncodingName:(id)arg2;
- (_Bool)parse;
- (void)reset;
- (id)initWithFeedRequest:(id)arg1;
- (id)initWithFeedURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

