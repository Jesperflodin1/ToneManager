//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "MAVeElementBase.h"

@class CALayer, NSDictionary, NSMutableArray;

@interface MAVeStepSequencer : MAVeElementBase
{
    NSDictionary *_stepSeqDictionary;
    NSMutableArray *_stepDisplayLayersArray;
    NSMutableArray *_stepDisplayBackgroundLayersArray;
    NSMutableArray *_stepDisplayTieLayersArray;
    NSMutableArray *_stepDisplayTextArray;
    NSMutableArray *_stepDisplayTieDisplayArray;
    NSMutableArray *_stepDisplayStepNumArray;
    double _firstDownValue;
    _Bool _firstDownTie;
    _Bool _firstDownStepNum;
    struct CGPoint _firstDownOrigin;
    long long _firstDownHitPart;
    struct CGPoint _lastDragOrigin;
    SEL _activeStepsChangedAction;
    _Bool _directionFound;
    _Bool _allowsScrollingToActiveStep;
    CALayer *_ghostLayer;
    CALayer *_thumbLayer;
    struct _NSRange _mouseOverRange;
    unsigned long long _mouseOverTie;
    unsigned long long _mouseOverStepNum;
    long long _bipolarMode;
    long long _maxNumberOfSteps;
    id _numStepsColor;
    id _backgroundColor;
    id _fillColor;
    id _fillColorDisabled;
    id _textFontName;
    double _textSize;
    id _textColor;
    long long _currentStep;
    double _currentWidth;
    double _radius;
    double _design_radius;
    id _stepBackgroundColor;
    id _fillColorDisabledHighlightKey;
    id _fillColorHighlightKey;
    id _fillColorMouseOver;
    unsigned long long _characteristic;
}

+ (Class)contentLayerClass;
@property(nonatomic) unsigned long long characteristic; // @synthesize characteristic=_characteristic;
@property(nonatomic) id fillColorMouseOver; // @synthesize fillColorMouseOver=_fillColorMouseOver;
@property(nonatomic) id fillColorHighlightKey; // @synthesize fillColorHighlightKey=_fillColorHighlightKey;
@property(nonatomic) id fillColorDisabledHighlightKey; // @synthesize fillColorDisabledHighlightKey=_fillColorDisabledHighlightKey;
@property(nonatomic) id stepBackgroundColor; // @synthesize stepBackgroundColor=_stepBackgroundColor;
@property(retain, nonatomic) NSDictionary *stepSeqDictionary; // @synthesize stepSeqDictionary=_stepSeqDictionary;
@property(nonatomic) double design_radius; // @synthesize design_radius=_design_radius;
@property(readonly, nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double currentWidth; // @synthesize currentWidth=_currentWidth;
@property(nonatomic) long long currentStep; // @synthesize currentStep=_currentStep;
@property(nonatomic) id textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double textSize; // @synthesize textSize=_textSize;
@property(nonatomic) id textFontName; // @synthesize textFontName=_textFontName;
@property(nonatomic) id fillColorDisabled; // @synthesize fillColorDisabled=_fillColorDisabled;
@property(nonatomic) id fillColor; // @synthesize fillColor=_fillColor;
@property(nonatomic) id backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) id numStepsColor; // @synthesize numStepsColor=_numStepsColor;
@property(nonatomic) long long maxNumberOfSteps; // @synthesize maxNumberOfSteps=_maxNumberOfSteps;
@property(nonatomic) long long bipolarMode; // @synthesize bipolarMode=_bipolarMode;
- (void).cxx_destruct;
- (id)saveStepSeqDictionary;
- (void)updateFromDictionary:(id)arg1;
- (void)seqControlAction:(id)arg1;
- (void)setLength:(double)arg1 forStep:(unsigned long long)arg2;
- (double)getLength:(unsigned long long)arg1;
- (void)setRest:(_Bool)arg1 forStep:(unsigned long long)arg2;
- (_Bool)getRest:(unsigned long long)arg1;
- (void)setTie:(_Bool)arg1 forStep:(unsigned long long)arg2;
- (_Bool)getTie:(unsigned long long)arg1;
- (void)setValue:(double)arg1 forStep:(unsigned long long)arg2 active:(_Bool)arg3;
- (double)getValue:(unsigned long long)arg1;
- (void)resetValueAtPosition:(struct CGPoint)arg1;
- (void)exitedEvent:(id)arg1;
- (void)movedEvent:(id)arg1;
- (void)enteredEvent:(id)arg1;
- (_Bool)updateMouseOverRangeForEvent:(id)arg1;
- (void)upEvent:(id)arg1;
- (void)draggedEvent:(id)arg1;
- (void)downEvent:(id)arg1;
- (_Bool)isPointInsideStepNumDraggingArea:(struct CGPoint)arg1;
- (_Bool)isPointInsideTieDraggingArea:(struct CGPoint)arg1;
- (_Bool)isPointInsideStepDraggingArea:(struct CGPoint)arg1;
- (unsigned long long)endTieForPoint:(struct CGPoint)arg1;
- (unsigned long long)startTieForPoint:(struct CGPoint)arg1;
- (unsigned long long)endStepForPoint:(struct CGPoint)arg1;
- (unsigned long long)startStepForPoint:(struct CGPoint)arg1;
- (unsigned long long)stepNumForPoint:(struct CGPoint)arg1;
- (unsigned long long)tieForPoint:(struct CGPoint)arg1;
- (unsigned long long)stepForPoint:(struct CGPoint)arg1 pointValue:(double *)arg2 hitPart:(long long *)arg3 widthPercentage:(double *)arg4 quantizedDraggingModeEnabled:(_Bool)arg5;
- (struct CGRect)frameForStep:(unsigned long long)arg1;
- (double)rangeBottomInset;
- (double)stepsLeftInsetOfButtons;
- (double)stepsBottomInset;
- (void)setNumberSteps:(long long)arg1;
- (void)setScaleFactor:(double)arg1;
@property(nonatomic) double design_xOffset;
@property(readonly, nonatomic) double xOffset;
@property(nonatomic) double design_stepsIntercellSpacing;
@property(readonly, nonatomic) double stepsIntercellSpacing;
@property(nonatomic) double design_stepsWidth;
@property(readonly, nonatomic) double stepsWidth;
- (void)updateLayers;
- (void)setupStepDisplayLayers;
- (void)createStepDisplayLayers;
- (void)setupLayersWithRootLayer:(id)arg1;
- (id)init;
- (void)set_stepReleaseDefault:(double)arg1;
- (void)set_stepReleaseMax:(double)arg1;
- (void)set_stepReleaseMin:(double)arg1;
- (void)set_stepReleaseNormed:(double)arg1;
- (void)set_stepRelease:(double)arg1;
- (double)stepReleaseDefault;
- (double)stepReleaseMax;
- (double)stepReleaseMin;
- (double)stepReleaseNormed;
- (double)stepRelease;
- (void)set_stepHoldDefault:(double)arg1;
- (void)set_stepHoldMax:(double)arg1;
- (void)set_stepHoldMin:(double)arg1;
- (void)set_stepHoldNormed:(double)arg1;
- (void)set_stepHold:(double)arg1;
- (double)stepHoldDefault;
- (double)stepHoldMax;
- (double)stepHoldMin;
- (double)stepHoldNormed;
- (double)stepHold;
- (void)set_stepAttackDefault:(double)arg1;
- (void)set_stepAttackMax:(double)arg1;
- (void)set_stepAttackMin:(double)arg1;
- (void)set_stepAttackNormed:(double)arg1;
- (void)set_stepAttack:(double)arg1;
- (double)stepAttackDefault;
- (double)stepAttackMax;
- (double)stepAttackMin;
- (double)stepAttackNormed;
- (double)stepAttack;
@property(nonatomic, setter=set_numStepsDefault:) double numStepsDefault;
@property(nonatomic, setter=set_numStepsMax:) double numStepsMax;
@property(nonatomic, setter=set_numStepsMin:) double numStepsMin;
@property(nonatomic, setter=set_numStepsNormed:) double numStepsNormed;
@property(nonatomic, setter=set_numSteps:) double numSteps;

@end

