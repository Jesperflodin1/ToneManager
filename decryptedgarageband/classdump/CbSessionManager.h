//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ECSingleton.h"

#import "CbSessionDelegate-Protocol.h"
#import "CbSessionStreamManagerProtocol-Protocol.h"
#import "MAUIProgressViewControllerCancelDelegate-Protocol.h"

@class CbPeerID, CbSessionManagerDebugViewController, CbSessionStreamManager, CbSessionWindowedAvarageCalculator, DfDocument, NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSTimer;
@protocol CbSession, CbSessionManagerTransportSyncDelegate, OS_dispatch_semaphore;

@interface CbSessionManager : ECSingleton <CbSessionDelegate, CbSessionStreamManagerProtocol, MAUIProgressViewControllerCancelDelegate>
{
    id <CbSession> _currentSession;
    NSMutableArray *_connectPeerBuffer;
    CbPeerID *_currentServerPeerID;
    CbPeerID *_lastPeerID;
    CbPeerID *_remoteDisconnectedPeerID;
    _Bool _configPeerIsProcessing;
    CbSessionManagerDebugViewController *_debugViewController;
    CbSessionStreamManager *_streamManager;
    BOOL _sessionModeToResume;
    _Bool _shouldShowSomeBandMembersLeftAlert;
    _Bool _showDisconnectAlert;
    _Bool _readyToJam;
    unsigned long long _nextConnectionTime;
    _Bool _hostControlsTransport;
    long long _timeOffset;
    CbSessionWindowedAvarageCalculator *_averageCalculator;
    _Bool _cancelled;
    _Bool _currentMeasurementFallThrough;
    long long _propagationDelay;
    long long _avarageSyncOffset;
    long long _nrOfMeasurements;
    BOOL _packetCount;
    CbSessionWindowedAvarageCalculator *_nonWeightedAverageCalculator;
    NSObject<OS_dispatch_semaphore> *_nextMeasurementSemaphore;
    _Bool _measurementIsRunning;
    unsigned long long _measurementCount;
    unsigned long long _maxMeasurementValue;
    NSData *_songPartsData;
    _Bool _aClientHasLeftTheSession;
    _Bool _offlineSongChangeAlertHasBeenShown;
    _Bool _onlineSongChangeAlertHasBeenShown;
    NSMutableArray *_endClockRequestPeers;
    long long _possibleNewEndClock;
    NSTimer *_prepareSyncStartTimeOutTimer;
    NSTimer *_clockSyncTimer;
    id _sessionSongSyncTransportDelegate;
    id _sessionSongSyncClockSyncDelegate;
    NSMutableSet *_peersWithAnswerOutStanding;
    unsigned long long _sessionTransportState;
    NSMutableDictionary *_requestInfo;
    _Bool _hostControlledTransportOnPlayRecPreparation;
    _Bool _enginePreparedForRec;
    _Bool _triggerAutoCollectAfterHostStop;
    _Bool _triggerAutoSongPartsCorrectionAfterHostStop;
    NSMutableArray *_remoteClipboardPeersToProcess;
    CbPeerID *_currentRemoteClipboardPeerID;
    NSMutableArray *_audioFilesToRequest;
    unsigned long long _excpectedRemoteClipboardSize;
    unsigned long long _receivedRemoteClipboardSize;
    NSMutableArray *_clipBoardPartsRequestQueue;
    NSDictionary *_receiveDictionary;
    NSObject<OS_dispatch_semaphore> *_remoteClipboardRequestSemaphore;
    _Bool _requestCancelled;
    _Bool _isClipped;
    _Bool _collectRecordingsAlertHasBeenShown;
    _Bool _autoCollectRecordingsAlertHasBeenShown;
    _Bool _remoteCollectRunning;
    unsigned long long _requestSongConfigCounter;
    NSMutableSet *_busyPeersRegistry;
    _Bool _busyIndicatorEnabled;
    _Bool _peersShowThatIAmBusy;
    _Bool _clientCanSendPasteBoard;
    _Bool _peerIsAllowedToJoinSession;
    _Bool _autoCollectRecordings;
    id <CbSessionManagerTransportSyncDelegate> _transportSyncDelegate;
    DfDocument *_document;
    double _maxPropagationDelay;
    NSDictionary *_clientSongSettingsDict;
    NSDictionary *_serverBaseSongSettingsDict;
}

+ (id)sharedSessionManager;
+ (id)singleton;
+ (void)setSingleton:(id)arg1;
@property(readonly, nonatomic) _Bool remoteCollectRunning; // @synthesize remoteCollectRunning=_remoteCollectRunning;
@property(retain, nonatomic) NSDictionary *serverBaseSongSettingsDict; // @synthesize serverBaseSongSettingsDict=_serverBaseSongSettingsDict;
@property(retain, nonatomic) NSDictionary *clientSongSettingsDict; // @synthesize clientSongSettingsDict=_clientSongSettingsDict;
@property(nonatomic) _Bool autoCollectRecordings; // @synthesize autoCollectRecordings=_autoCollectRecordings;
@property(nonatomic) _Bool peerIsAllowedToJoinSession; // @synthesize peerIsAllowedToJoinSession=_peerIsAllowedToJoinSession;
@property(readonly, nonatomic) id <CbSession> currentSession; // @synthesize currentSession=_currentSession;
@property(readonly, nonatomic) double maxPropagationDelay; // @synthesize maxPropagationDelay=_maxPropagationDelay;
@property(nonatomic) DfDocument *document; // @synthesize document=_document;
@property(nonatomic) id <CbSessionManagerTransportSyncDelegate> transportSyncDelegate; // @synthesize transportSyncDelegate=_transportSyncDelegate;
- (void).cxx_destruct;
- (void)writeDebugOutput:(id)arg1;
- (void)_WillEnterForeground:(id)arg1;
- (void)_didEnterBackground:(id)arg1;
- (void)_willTerminate:(id)arg1;
- (void)_createNewSong:(id)arg1;
- (void)_audioDriverDidChangHandler:(id)arg1;
- (void)progressViewControllerDidCancel:(id)arg1;
- (void)_showProgress:(_Bool)arg1 withText:(id)arg2 withSubTitle:(id)arg3 min:(double)arg4 max:(double)arg5 value:(double)arg6;
- (void)_showProgress:(_Bool)arg1 withText:(id)arg2 withSubTitle:(id)arg3 min:(double)arg4 max:(double)arg5 value:(double)arg6 withCancelDelegate:(id)arg7;
- (void)_showIndeterminateProgress:(_Bool)arg1 withText:(id)arg2 withSubTitle:(id)arg3;
- (void)_processHostControlsTransport:(id)arg1;
- (void)_sendHostControlsTransportToPeers:(id)arg1;
- (id)_peerStateForStateID:(BOOL)arg1;
- (id)_sessionModeForModeID:(BOOL)arg1;
@property(readonly, nonatomic) CbSessionManagerDebugViewController *debugViewController;
@property(readonly, nonatomic) _Bool readyToJam;
@property(readonly, nonatomic) _Bool peerCanControlActiveSongPart;
@property(readonly, nonatomic) _Bool peerCanControlSongArchitecture;
@property(readonly, nonatomic) _Bool peerCanRecord;
@property(readonly, nonatomic) _Bool peerCanControlTransport;
@property(nonatomic) _Bool hostControlsTransport;
@property(nonatomic) _Bool available;
@property(readonly, nonatomic) _Bool isConnectedClient;
@property(readonly, nonatomic) _Bool isConnectedHost;
@property(readonly, nonatomic) _Bool isHost;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) CbPeerID *currentServerPeerID;
@property(readonly, nonatomic) CbPeerID *currentSessionPeerID;
@property(readonly, nonatomic) NSArray *connectedPeers;
@property(readonly, nonatomic) NSArray *availablePeers;
@property(readonly, nonatomic) BOOL sessionMode;
- (id)peerUUIDForPeer:(id)arg1;
- (id)displayNameForPeer:(id)arg1;
- (void)sessionStreamManagerReceiveError:(id)arg1;
- (void)sessionStreamManagerReceiveStreamProgress:(id)arg1;
- (void)sessionStreamManagerSendError:(id)arg1;
- (void)sessionStreamManagerSendStream:(id)arg1 DataPacketReady:(id)arg2 userInfo:(id)arg3;
- (void)receiveData:(id)arg1 fromPeer:(id)arg2 inSession:(id)arg3;
- (void)streamFileOfType:(BOOL)arg1 withID:(BOOL)arg2 toPeers:(id)arg3 withDataOfFileWithSubPath:(id)arg4 deviceFolderID:(unsigned long long)arg5 userInfo:(id)arg6;
- (void)streamDataOfType:(BOOL)arg1 withID:(BOOL)arg2 toPeers:(id)arg3 withData:(id)arg4;
- (void)sendShortMessageOfType:(BOOL)arg1 withID:(BOOL)arg2 toPeers:(id)arg3 withData:(id)arg4 reliable:(_Bool)arg5;
- (void)sendShortMessageOfType:(BOOL)arg1 withID:(BOOL)arg2 toPeers:(id)arg3 withData:(const void *)arg4 ofLength:(unsigned long long)arg5 reliable:(_Bool)arg6;
- (void)sendShortMessageOfType:(BOOL)arg1 withID:(BOOL)arg2 toPeers:(id)arg3 reliable:(_Bool)arg4;
- (void)_peerDidDisconnectFromPeer:(id)arg1 isActiveDiconnect:(_Bool)arg2;
- (void)_songSettingHasBeenAdaptedToHostSongSettings;
- (void)_peerDidConnectToPeer:(id)arg1;
- (void)_remoteDisconnectCurrentSession;
- (void)disconnectCurrentSessionIfConnected;
- (void)disconnectCurrentSession;
- (void)_disconnectCurrentSession;
- (void)disconnect:(id)arg1;
- (void)session:(id)arg1 connectionWithPeerFailed:(id)arg2 withError:(id)arg3;
- (_Bool)session:(id)arg1 shouldConnectToPeer:(id)arg2;
- (void)_connectTimeOut;
- (void)connect:(id)arg1;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(BOOL)arg3;
- (void)destroySession;
- (void)_internalDestroySession;
- (void)setupSessionWithMode:(BOOL)arg1;
- (void)dealloc;
- (id)init;
- (_Bool)showWantToChangeSessionSongAlertIfNeeded;
- (_Bool)_showAlertOffline;
- (_Bool)_showAlertDuringSession;
- (void)_receiveSongPartChange:(id)arg1;
- (void)distributeSetLengthOfSongPartWithMarkerIndex:(long long)arg1 toBarCount:(int)arg2;
- (void)distributeDeleteSongPartWithMarkerIndex:(long long)arg1;
- (void)distributeMoveSongPartWithMarkerIndex:(long long)arg1 toNewIndex:(long long)arg2;
- (void)distributeDuplicateSongPartWithMarkerIndex:(long long)arg1;
- (void)distributeAddSongPartOfLength:(long long)arg1;
- (void)_distributeSongPartChangeData:(id)arg1;
- (_Bool)_shouldShowChangeSongSettingsAlert;
- (void)_disableAutomaticSongPartsAndCloseClientSongPartsManager;
- (void)_requestSongEndClockFromClientsTimeout;
- (void)_processPeer:(id)arg1 songEndClock:(long long)arg2;
- (void)_requestSongEndClockFromClients;
- (void)_processDistributedSongSettings:(id)arg1;
- (void)_distributeSongSettings:(id)arg1;
- (void)requestChangeOfSongSettings:(int)arg1;
- (id)_connectionAlertMessageTextForSettingsState:(unsigned long long)arg1;
- (unsigned long long)_areClientSongSettingsEqualToServerSongSettings:(id)arg1;
- (_Bool)_isTheHostContentInstalledOnClient:(id)arg1;
- (void)_processSongConfig:(id)arg1 fromPeer:(id)arg2;
- (void)_requestSongConfigTimeOut;
- (void)_sendSongConfigToPeers:(id)arg1;
- (void)_requestSongConfigFromPeer:(id)arg1;
- (void)configureSong:(id)arg1;
- (void)_receiveTimeSyncData:(id)arg1 withMessageID:(BOOL)arg2 atAbsoluteTimeStampInNanoSec:(unsigned long long)arg3 fromPeer:(id)arg4;
- (void)sendMeasurementRequestToClients;
- (void)_timeMeasurementThread;
- (_Bool)_allowMeasurement;
- (void)_calcTimeOffsetFromDelayResponse:(CDStruct_25972916)arg1;
- (unsigned long long)_weightForPropagatinoDelay:(long long)arg1;
- (void)_stopDelayCompensation;
- (void)_startDelayCompensation;
- (void)triggerMeasurementCycleWithNrMeasurements:(id)arg1;
- (void)_triggerNextMeasurementCycle;
- (void)_activateRandomMeasurementTimer;
- (void)activateMeasurementTimerWithDelay:(double)arg1;
- (void)_stopNetworkDelayCompensation;
- (void)_startNetworkDelayCompensation;
- (unsigned long long)convertSessionTimeToAbsoluteDeviceTimeInNanoSec:(unsigned long long)arg1;
- (unsigned long long)sessionTimeInNanoSec;
- (unsigned long long)absoluteTimeInNanoSec;
- (void)_handleMessageToClient:(BOOL)arg1 withData:(id)arg2 fromPeer:(id)arg3;
- (void)_handleMessageToHost:(BOOL)arg1 withData:(id)arg2 fromPeer:(id)arg3;
- (void)_processTransportMessageWithData:(id)arg1 andMessageID:(BOOL)arg2 fromPeer:(id)arg3;
- (void)_sendStopToAll;
- (void)_internalSendToAllTransportMessageWithID:(BOOL)arg1 reliable:(_Bool)arg2;
- (void)_internalSendToAllTransportMessageWithID:(BOOL)arg1 withData:(const void *)arg2 ofLength:(int)arg3 reliable:(_Bool)arg4;
- (void)stopAllDevices;
- (void)sendPrimeResponse:(CDStruct_2920cfb7)arg1;
- (void)sessionTransportMessageSend:(unsigned long long)arg1;
- (void)_cancelPrimeResponseFromPeer:(id)arg1;
- (void)_processPrimeResponseFromPeersIfNecessary:(id)arg1;
- (_Bool)_gotResponseOfAllPeersForPeerID:(id)arg1;
- (void)_cancelWaitingForPrimeResponseFromAllPeers;
- (void)_startWaitingForResponseFromAllPeers;
- (unsigned long long)_transportState;
- (void)_setTransportState:(unsigned long long)arg1;
- (void)_clockSyncTimerFired:(id)arg1;
- (void)_stopClockSyncTimer;
- (void)_starClockSyncTimer;
- (id)_transportCommandStringID:(unsigned long long)arg1;
- (void)_cleanupTransportSync;
- (void)_initTransportSync;
- (void)_receiveRemoteClipBoardDataWithInfoDict:(id)arg1;
- (void)_sendSamplerFileWithInfo:(id)arg1;
- (void)_sendSamplerInstrumentWithInfo:(id)arg1;
- (void)_sendAudioFileWithInfo:(id)arg1;
- (void)_sendRemoteClipboardToPeers:(id)arg1 withArrangeInfo:(id)arg2;
- (void)_sendFileWithPathToFolder:(id)arg1 withID:(BOOL)arg2 andMessageInfo:(id)arg3;
- (void)_processRemoteClipboardRequest:(id)arg1;
- (void)_removeSessionTrackUUIDsAndUnmute:(_Bool)arg1;
- (void)_currentSessionTrackUUIDsUnmuted:(id *)arg1 muted:(id *)arg2;
- (void)_processRemoteClipboardProgress:(unsigned long long)arg1;
- (void)_removeReceiveDictionary;
- (id)_receiveDictionary;
- (void)_setReceiveDictionary:(id)arg1;
- (_Bool)canProceedAutoCollectRecordingsOrShowAlert;
- (_Bool)canProceedCollectRecordingsOrShowAlert;
- (void)cancelRequestRemoteClipboardFromPeer:(id)arg1;
- (id)_currentRemoteClipBoardToProcess;
- (void)_finalizeRequestRemoteClipboard;
- (void)cancelRequestRemoteClipboardFromPeers;
- (void)requestRemoteClipboardFromPeers:(id)arg1;
@property(nonatomic) _Bool busyIndicatorEnabled;
- (void)removeAllBusyPeers;
- (void)removeBusyPeer:(id)arg1;
- (void)addBusyPeer:(id)arg1;
- (void)sendBusyIndicatorUpdateWithMessage:(id)arg1 ofType:(long long)arg2;
- (void)_handleReceivedBusyMessageOfType:(BOOL)arg1 withData:(id)arg2 fromPeer:(id)arg3;
- (void)_handleBusyPeersStateChange;
- (void)_hideBusyIndicator;
- (void)_showBusyIndicator;
- (void)_sendBusyIndicatorMessage:(id)arg1 ofType:(long long)arg2 toPeers:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

