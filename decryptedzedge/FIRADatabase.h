//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FIRAPersistedConfig, FIRASqliteStore;

@interface FIRADatabase : NSObject
{
    FIRASqliteStore *_sqliteStore;
    FIRAPersistedConfig *_persistedConfig;
}

- (void).cxx_destruct;
- (_Bool)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5 createDictionaryBlock:(CDUnknownBlockType)arg6;
- (_Bool)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 error:(id *)arg6 createDictionaryBlock:(CDUnknownBlockType)arg7;
- (_Bool)insertDataType:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3 createDictionaryBlock:(CDUnknownBlockType)arg4;
- (id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4 createDataTypeBlock:(CDUnknownBlockType)arg5;
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3 createDataTypeBlock:(CDUnknownBlockType)arg4;
- (_Bool)ensureAllTables;
- (id)conditionalUserPropertiesWithCondition:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)conditionalUserPropertiesWithPrefix:(id)arg1 filterByOrigin:(id)arg2 error:(id *)arg3;
- (id)triggeredConditionalUserPropertiesWithEventName:(id)arg1 error:(id *)arg2;
- (id)expiredConditionalUserPropertiesWithError:(id *)arg1;
- (id)timedOutConditionalUserPropertiesWithError:(id *)arg1;
- (_Bool)deleteConditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateConditionalUserProperty:(id)arg1 error:(id *)arg2;
- (id)conditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (id)insertIfNotDuplicatePurchaseFingerprint:(id)arg1 error:(id *)arg2;
- (id)lastRemoteConfigUpdateTimestamp:(id *)arg1;
- (id)queryMeasurementConfigWithError:(id *)arg1;
- (_Bool)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id *)arg2;
- (_Bool)updateRemoteConfig:(id)arg1 error:(id *)arg2;
- (_Bool)deleteAllPropertyFilters:(id *)arg1;
- (_Bool)deleteAllEventFilters:(id *)arg1;
- (_Bool)deletePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateFilterResults:(id)arg1 error:(id *)arg2;
- (_Bool)updatePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFilterResults:(id)arg1 error:(id *)arg2;
- (id)filterResultForAudienceID:(int)arg1 error:(id *)arg2;
- (id)propertyFiltersForPropertyName:(id)arg1 error:(id *)arg2;
- (id)eventFiltersForEventName:(id)arg1 error:(id *)arg2;
- (id)allAudienceIDs:(id *)arg1;
- (id)allFilterResults:(id *)arg1;
- (_Bool)deleteUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateUserAttribute:(id)arg1 error:(id *)arg2;
- (id)userAttributesIncludingInternal:(_Bool)arg1 error:(id *)arg2;
- (id)allLifetimeValueUserAttributes:(id *)arg1;
- (id)userAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)containsUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)userAttributeCountForOrigin:(id)arg1 error:(id *)arg2;
- (id)publicUserAttributeCount:(id *)arg1;
- (_Bool)updateEventAggregates:(id)arg1 error:(id *)arg2;
- (id)eventAggregatesWithName:(id)arg1 error:(id *)arg2;
- (id)allEventAggregates:(id *)arg1;
- (id)publicEventCount:(id *)arg1;
- (id)containsRealtimeBundlesWithError:(id *)arg1;
- (id)queryLatestBundleTime:(id *)arg1;
- (_Bool)deleteStaleBundlesOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)maybeDeleteStaleData:(id *)arg1;
- (_Bool)deleteBundlesWithRowIDs:(id)arg1 error:(id *)arg2;
- (id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 error:(id *)arg3;
- (_Bool)insertBundle:(id)arg1 isRealtime:(_Bool)arg2 error:(id *)arg3;
- (id)isQueuedBundleTableEmpty:(id *)arg1;
- (id)containsRealtimeRawEventsWithError:(id *)arg1;
- (id)rawEventDataFromDictionary:(id)arg1 error:(id *)arg2;
- (id)nextMetadataFingerprintToProcess:(id *)arg1;
- (_Bool)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)deleteRawEventsOverAbsoluteLimit:(id *)arg1;
- (_Bool)deleteRawEventsWithMaxRowID:(long long)arg1 error:(id *)arg2;
- (id)containsRawEventWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1 error:(id *)arg2 eventFilter:(CDUnknownBlockType)arg3;
- (id)queryLatestRawEventTime:(id *)arg1;
- (_Bool)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 isRealtime:(_Bool)arg3 error:(id *)arg4;
- (id)isRawEventsTableEmpty:(id *)arg1;
- (_Bool)deleteUnusedRawEventsMetadata:(id *)arg1;
- (_Bool)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)queryRawEventsMetadataWithFingerprint:(long long)arg1 error:(id *)arg2;
- (_Bool)insertIfNotExistsRawEventMetadata:(id)arg1 error:(id *)arg2;
- (_Bool)updateDailyCounts:(id)arg1 error:(id *)arg2;
- (id)dailyCounts:(id *)arg1;
- (_Bool)updateAppMetadata:(id)arg1 error:(id *)arg2;
- (id)queryAppMetadata:(id *)arg1;
- (_Bool)initializeAppMetadata;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2;

@end

