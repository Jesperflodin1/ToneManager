//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 30 2018 09:46:22).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class FIRInstanceIDConfig, FIRInstanceIDKeyPairStore, FIRInstanceIDTokenManager, NSData, NSString;

@interface FIRInstanceID : NSObject
{
    _Bool _isFetchingDefaultToken;
    _Bool _isDefaultTokenFetchScheduled;
    NSString *_fcmSenderID;
    NSString *_fcmAppID;
    NSData *_apnsTokenData;
    NSString *_apnsToken;
    NSString *_defaultFCMToken;
    FIRInstanceIDConfig *_config;
    FIRInstanceIDTokenManager *_tokenManager;
    FIRInstanceIDKeyPairStore *_keyPairStore;
    long long _retryCountForDefaultToken;
    long long _retryCountForCheckinRefresh;
}

+ (long long)maxRetryIntervalForDefaultTokenInSeconds;
+ (long long)minIntervalForDefaultTokenRetry;
+ (long long)maxRetryCountForDefaultToken;
+ (id)replaceAPNSDataWithString:(id)arg1;
+ (id)instanceID;
+ (void)notifyIdentityLost;
+ (void)notifyTokenRefresh;
@property(nonatomic) long long retryCountForCheckinRefresh; // @synthesize retryCountForCheckinRefresh=_retryCountForCheckinRefresh;
@property(nonatomic) long long retryCountForDefaultToken; // @synthesize retryCountForDefaultToken=_retryCountForDefaultToken;
@property _Bool isDefaultTokenFetchScheduled; // @synthesize isDefaultTokenFetchScheduled=_isDefaultTokenFetchScheduled;
@property _Bool isFetchingDefaultToken; // @synthesize isFetchingDefaultToken=_isFetchingDefaultToken;
@property(retain, nonatomic) FIRInstanceIDKeyPairStore *keyPairStore; // @synthesize keyPairStore=_keyPairStore;
@property(retain, nonatomic) FIRInstanceIDTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(retain, nonatomic) FIRInstanceIDConfig *config; // @synthesize config=_config;
@property(copy, nonatomic) NSString *defaultFCMToken; // @synthesize defaultFCMToken=_defaultFCMToken;
@property(copy, nonatomic) NSString *apnsToken; // @synthesize apnsToken=_apnsToken;
@property(retain, nonatomic) NSData *apnsTokenData; // @synthesize apnsTokenData=_apnsTokenData;
@property(copy, nonatomic) NSString *fcmAppID; // @synthesize fcmAppID=_fcmAppID;
@property(copy, nonatomic) NSString *fcmSenderID; // @synthesize fcmSenderID=_fcmSenderID;
- (void).cxx_destruct;
- (void)logAPNSConfigurationError:(id)arg1;
- (_Bool)isProductionApp;
- (_Bool)isSandboxApp;
- (void)didAutoFetch:(_Bool)arg1 APNSToken:(id)arg2 type:(long long)arg3;
- (void)setNormalizedAPNSToken:(id)arg1 forType:(long long)arg2;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
- (_Bool)hasValidCheckinInfo;
- (void)defaultTokenWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchDefaultToken;
- (long long)retryIntervalToFetchDefaultToken;
- (id)addInternalOptions:(id)arg1;
- (void)didReceiveGCMMessage:(id)arg1;
- (void)setupNotificationListeners;
- (void)setupKeyPairManager;
- (void)setupTokenManagerWithConfig:(id)arg1;
- (void)setupLogger:(BOOL)arg1;
- (void)startWithConfig:(id)arg1;
- (void)didCompleteConfigure;
- (void)deleteIDWithHandler:(CDUnknownBlockType)arg1;
- (void)getIDWithHandler:(CDUnknownBlockType)arg1;
- (void)asyncLoadKeyPairWithHandler:(CDUnknownBlockType)arg1;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)token;
- (void)asyncInvokeDeleteIDHandler:(CDUnknownBlockType)arg1 withError:(id)arg2;
- (void)asyncInvokeGetIDHandler:(CDUnknownBlockType)arg1 withIdentity:(id)arg2 error:(id)arg3;
- (void)asyncInvokeDeleteTokenHandler:(CDUnknownBlockType)arg1 withError:(id)arg2;
- (void)asyncInvokeGetTokenHandler:(CDUnknownBlockType)arg1 withToken:(id)arg2 error:(id)arg3;
- (void)stopAllRequests;
- (void)dealloc;
- (id)initWithConfig:(id)arg1;
- (void)invokeTokenRefreshCallbackWithDelayInSeconds:(int)arg1;
- (void)setAutoFetchedAPNSToken:(id)arg1 error:(id)arg2;
- (void)handleRefreshMessage:(id)arg1 withSubType:(id)arg2;
- (void)handleCommandResetFullWithDelayInSeconds:(int)arg1;
- (void)handleCommandResetWithDelayInSeconds:(int)arg1;
- (void)handleTokenRefreshWithDelayInSeconds:(int)arg1;
- (id)appInstanceID:(id *)arg1;
- (id)cachedCheckinPreferences;
- (double)waitIntervalForCheckinRefresh;
- (_Bool)shouldWaitForCheckinRefresh;
- (void)scheduleCheckinRefreshWaitWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchCheckinInfoWithHandler:(CDUnknownBlockType)arg1;

@end

